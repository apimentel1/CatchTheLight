
testqt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000058  00800100  000018e2  00001976  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000018e2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000032  00800158  00800158  000019ce  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000019ce  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001a00  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000220  00000000  00000000  00001a40  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000024ad  00000000  00000000  00001c60  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001152  00000000  00000000  0000410d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001008  00000000  00000000  0000525f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000043c  00000000  00000000  00006268  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000014eb  00000000  00000000  000066a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007f8  00000000  00000000  00007b8f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a0  00000000  00000000  00008387  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
       4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
       8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
       c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      38:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__vector_14>
      3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      94:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__vector_37>
      98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
      b4:	11 24       	eor	r1, r1
      b6:	1f be       	out	0x3f, r1	; 63
      b8:	cf ef       	ldi	r28, 0xFF	; 255
      ba:	d8 e0       	ldi	r29, 0x08	; 8
      bc:	de bf       	out	0x3e, r29	; 62
      be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
      c0:	11 e0       	ldi	r17, 0x01	; 1
      c2:	a0 e0       	ldi	r26, 0x00	; 0
      c4:	b1 e0       	ldi	r27, 0x01	; 1
      c6:	e2 ee       	ldi	r30, 0xE2	; 226
      c8:	f8 e1       	ldi	r31, 0x18	; 24
      ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
      cc:	05 90       	lpm	r0, Z+
      ce:	0d 92       	st	X+, r0
      d0:	a8 35       	cpi	r26, 0x58	; 88
      d2:	b1 07       	cpc	r27, r17
      d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
      d6:	21 e0       	ldi	r18, 0x01	; 1
      d8:	a8 e5       	ldi	r26, 0x58	; 88
      da:	b1 e0       	ldi	r27, 0x01	; 1
      dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
      de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
      e0:	aa 38       	cpi	r26, 0x8A	; 138
      e2:	b2 07       	cpc	r27, r18
      e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
      e6:	0e 94 c2 01 	call	0x384	; 0x384 <main>
      ea:	0c 94 6f 0c 	jmp	0x18de	; 0x18de <_exit>

000000ee <__bad_interrupt>:
      ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
      f2:	0e 94 69 03 	call	0x6d2	; 0x6d2 <system_init>

	touch_init();
      f6:	0e 94 89 02 	call	0x512	; 0x512 <touch_init>
      fa:	08 95       	ret

000000fc <__vector_14>:

#include <driver_init.h>
#include <compiler.h>

ISR(TIMER0_COMPA_vect)
{
      fc:	1f 92       	push	r1
      fe:	0f 92       	push	r0
     100:	0f b6       	in	r0, 0x3f	; 63
     102:	0f 92       	push	r0
     104:	11 24       	eor	r1, r1
     106:	2f 93       	push	r18
     108:	3f 93       	push	r19
     10a:	4f 93       	push	r20
     10c:	5f 93       	push	r21
     10e:	6f 93       	push	r22
     110:	7f 93       	push	r23
     112:	8f 93       	push	r24
     114:	9f 93       	push	r25
     116:	af 93       	push	r26
     118:	bf 93       	push	r27
     11a:	ef 93       	push	r30
     11c:	ff 93       	push	r31

	mega_touch_timer();
     11e:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <mega_touch_timer>

	/* Clear the timer flag */
	TIFR0 |= OCF0A;
     122:	a8 9a       	sbi	0x15, 0	; 21
}
     124:	ff 91       	pop	r31
     126:	ef 91       	pop	r30
     128:	bf 91       	pop	r27
     12a:	af 91       	pop	r26
     12c:	9f 91       	pop	r25
     12e:	8f 91       	pop	r24
     130:	7f 91       	pop	r23
     132:	6f 91       	pop	r22
     134:	5f 91       	pop	r21
     136:	4f 91       	pop	r20
     138:	3f 91       	pop	r19
     13a:	2f 91       	pop	r18
     13c:	0f 90       	pop	r0
     13e:	0f be       	out	0x3f, r0	; 63
     140:	0f 90       	pop	r0
     142:	1f 90       	pop	r1
     144:	18 95       	reti

00000146 <FlashPort>:
void FlashPort(int Led)
{
	//Flashreg is the index into array Ledtab
	//Ex Led # |1|2|3|...|15|16|
	//Ledtab # |0|1|2|...|14|15|
	if(Led < 4 || Led > 12)
     146:	9c 01       	movw	r18, r24
     148:	24 50       	subi	r18, 0x04	; 4
     14a:	31 09       	sbc	r19, r1
     14c:	29 30       	cpi	r18, 0x09	; 9
     14e:	31 05       	cpc	r19, r1
     150:	80 f0       	brcs	.+32     	; 0x172 <FlashPort+0x2c>
	{
		PORTD |= (1<< Ledtab[Led]);
     152:	4b b1       	in	r20, 0x0b	; 11
     154:	fc 01       	movw	r30, r24
     156:	ec 5f       	subi	r30, 0xFC	; 252
     158:	fe 4f       	sbci	r31, 0xFE	; 254
     15a:	21 e0       	ldi	r18, 0x01	; 1
     15c:	30 e0       	ldi	r19, 0x00	; 0
     15e:	c9 01       	movw	r24, r18
     160:	00 80       	ld	r0, Z
     162:	02 c0       	rjmp	.+4      	; 0x168 <FlashPort+0x22>
     164:	88 0f       	add	r24, r24
     166:	99 1f       	adc	r25, r25
     168:	0a 94       	dec	r0
     16a:	e2 f7       	brpl	.-8      	; 0x164 <FlashPort+0x1e>
     16c:	84 2b       	or	r24, r20
     16e:	8b b9       	out	0x0b, r24	; 11
     170:	08 95       	ret
	}
	else if(Led < 8)
     172:	88 30       	cpi	r24, 0x08	; 8
     174:	91 05       	cpc	r25, r1
     176:	84 f4       	brge	.+32     	; 0x198 <FlashPort+0x52>
	{
		PORTC |= (1<< Ledtab[Led]);
     178:	48 b1       	in	r20, 0x08	; 8
     17a:	fc 01       	movw	r30, r24
     17c:	ec 5f       	subi	r30, 0xFC	; 252
     17e:	fe 4f       	sbci	r31, 0xFE	; 254
     180:	21 e0       	ldi	r18, 0x01	; 1
     182:	30 e0       	ldi	r19, 0x00	; 0
     184:	c9 01       	movw	r24, r18
     186:	00 80       	ld	r0, Z
     188:	02 c0       	rjmp	.+4      	; 0x18e <FlashPort+0x48>
     18a:	88 0f       	add	r24, r24
     18c:	99 1f       	adc	r25, r25
     18e:	0a 94       	dec	r0
     190:	e2 f7       	brpl	.-8      	; 0x18a <FlashPort+0x44>
     192:	84 2b       	or	r24, r20
     194:	88 b9       	out	0x08, r24	; 8
     196:	08 95       	ret
	}
	else
	{
		PORTB |= (1<< Ledtab[Led]);
     198:	45 b1       	in	r20, 0x05	; 5
     19a:	fc 01       	movw	r30, r24
     19c:	ec 5f       	subi	r30, 0xFC	; 252
     19e:	fe 4f       	sbci	r31, 0xFE	; 254
     1a0:	21 e0       	ldi	r18, 0x01	; 1
     1a2:	30 e0       	ldi	r19, 0x00	; 0
     1a4:	c9 01       	movw	r24, r18
     1a6:	00 80       	ld	r0, Z
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <FlashPort+0x68>
     1aa:	88 0f       	add	r24, r24
     1ac:	99 1f       	adc	r25, r25
     1ae:	0a 94       	dec	r0
     1b0:	e2 f7       	brpl	.-8      	; 0x1aa <FlashPort+0x64>
     1b2:	84 2b       	or	r24, r20
     1b4:	85 b9       	out	0x05, r24	; 5
     1b6:	08 95       	ret

000001b8 <mydelay>:
	
}

void mydelay(int Delay_Time)
{
	for(int i = 0; i < Delay_Time; i++)
     1b8:	18 16       	cp	r1, r24
     1ba:	19 06       	cpc	r1, r25
     1bc:	6c f4       	brge	.+26     	; 0x1d8 <mydelay+0x20>
     1be:	20 e0       	ldi	r18, 0x00	; 0
     1c0:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1c2:	ef e3       	ldi	r30, 0x3F	; 63
     1c4:	fc e9       	ldi	r31, 0x9C	; 156
     1c6:	31 97       	sbiw	r30, 0x01	; 1
     1c8:	f1 f7       	brne	.-4      	; 0x1c6 <mydelay+0xe>
     1ca:	00 c0       	rjmp	.+0      	; 0x1cc <mydelay+0x14>
     1cc:	00 00       	nop
     1ce:	2f 5f       	subi	r18, 0xFF	; 255
     1d0:	3f 4f       	sbci	r19, 0xFF	; 255
     1d2:	82 17       	cp	r24, r18
     1d4:	93 07       	cpc	r25, r19
     1d6:	a9 f7       	brne	.-22     	; 0x1c2 <mydelay+0xa>
     1d8:	08 95       	ret

000001da <Cycle_lights>:
	}
}

void Cycle_lights()
{
	PORTD &= 0x0; //turn off all led
     1da:	8b b1       	in	r24, 0x0b	; 11
     1dc:	1b b8       	out	0x0b, r1	; 11
	PORTB &= 0x0;
     1de:	85 b1       	in	r24, 0x05	; 5
     1e0:	15 b8       	out	0x05, r1	; 5
	PORTC &= 0x0;
     1e2:	88 b1       	in	r24, 0x08	; 8
     1e4:	18 b8       	out	0x08, r1	; 8
	
	FlashPort(Flashreg); //Flash the light
     1e6:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <Flashreg>
     1ea:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <Flashreg+0x1>
     1ee:	0e 94 a3 00 	call	0x146	; 0x146 <FlashPort>
	
	Flashreg = (Flashreg + 1) & 15; //Increment Flashreg until 15 then reset to 0
     1f2:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <Flashreg>
     1f6:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <Flashreg+0x1>
     1fa:	01 96       	adiw	r24, 0x01	; 1
     1fc:	8f 70       	andi	r24, 0x0F	; 15
     1fe:	99 27       	eor	r25, r25
     200:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <Flashreg+0x1>
     204:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <Flashreg>
	
	mydelay(Delay_Time); //delay 50ms
     208:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Delay_Time>
     20c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <Delay_Time+0x1>
     210:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <mydelay>
     214:	08 95       	ret

00000216 <Cycle_lights_Rev>:
	
}

void Cycle_lights_Rev()
{
	PORTD &= 0x0; //turn off all led
     216:	8b b1       	in	r24, 0x0b	; 11
     218:	1b b8       	out	0x0b, r1	; 11
	PORTB &= 0x0;
     21a:	85 b1       	in	r24, 0x05	; 5
     21c:	15 b8       	out	0x05, r1	; 5
	PORTC &= 0x0;
     21e:	88 b1       	in	r24, 0x08	; 8
     220:	18 b8       	out	0x08, r1	; 8
	
	FlashPort(Flashreg); //Flash the led
     222:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <Flashreg>
     226:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <Flashreg+0x1>
     22a:	0e 94 a3 00 	call	0x146	; 0x146 <FlashPort>
	
	Flashreg--; //Decrement Flashreg
     22e:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <Flashreg>
     232:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <Flashreg+0x1>
     236:	01 97       	sbiw	r24, 0x01	; 1
	
	if (Flashreg < 0) //when below 0
     238:	2a f0       	brmi	.+10     	; 0x244 <Cycle_lights_Rev+0x2e>
	PORTB &= 0x0;
	PORTC &= 0x0;
	
	FlashPort(Flashreg); //Flash the led
	
	Flashreg--; //Decrement Flashreg
     23a:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <Flashreg+0x1>
     23e:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <Flashreg>
     242:	06 c0       	rjmp	.+12     	; 0x250 <Cycle_lights_Rev+0x3a>
	
	if (Flashreg < 0) //when below 0
	{
		Flashreg = 15; //reset to 15
     244:	8f e0       	ldi	r24, 0x0F	; 15
     246:	90 e0       	ldi	r25, 0x00	; 0
     248:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <Flashreg+0x1>
     24c:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <Flashreg>
	}
	
	
	mydelay(Delay_Time); //delay 100ms
     250:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Delay_Time>
     254:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <Delay_Time+0x1>
     258:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <mydelay>
     25c:	08 95       	ret

0000025e <Light_Direction>:
	
}

void Light_Direction()
{
	if (Direction)
     25e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Direction>
     262:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <Direction+0x1>
     266:	89 2b       	or	r24, r25
     268:	19 f0       	breq	.+6      	; 0x270 <Light_Direction+0x12>
	{
		Cycle_lights();
     26a:	0e 94 ed 00 	call	0x1da	; 0x1da <Cycle_lights>
     26e:	08 95       	ret
	}
	else
	{
		Cycle_lights_Rev();
     270:	0e 94 0b 01 	call	0x216	; 0x216 <Cycle_lights_Rev>
     274:	08 95       	ret

00000276 <All_On>:
	mydelay(Delay_Time); //delay 100ms
	
}

void All_On (int Flashtime)
{
     276:	0f 93       	push	r16
     278:	1f 93       	push	r17
     27a:	cf 93       	push	r28
     27c:	df 93       	push	r29
	int Count = 0;
	while (Count < Flashtime)
     27e:	18 16       	cp	r1, r24
     280:	19 06       	cpc	r1, r25
     282:	2c f5       	brge	.+74     	; 0x2ce <All_On+0x58>
     284:	ec 01       	movw	r28, r24
     286:	00 e0       	ldi	r16, 0x00	; 0
     288:	10 e0       	ldi	r17, 0x00	; 0
	{
		PORTB &= 0x0;
     28a:	85 b1       	in	r24, 0x05	; 5
     28c:	15 b8       	out	0x05, r1	; 5
		PORTD &= 0x08; //all off but PD3 the target led
     28e:	8b b1       	in	r24, 0x0b	; 11
     290:	88 70       	andi	r24, 0x08	; 8
     292:	8b b9       	out	0x0b, r24	; 11
		PORTC &= 0x0;
     294:	88 b1       	in	r24, 0x08	; 8
     296:	18 b8       	out	0x08, r1	; 8
     298:	2f ef       	ldi	r18, 0xFF	; 255
     29a:	81 ee       	ldi	r24, 0xE1	; 225
     29c:	94 e0       	ldi	r25, 0x04	; 4
     29e:	21 50       	subi	r18, 0x01	; 1
     2a0:	80 40       	sbci	r24, 0x00	; 0
     2a2:	90 40       	sbci	r25, 0x00	; 0
     2a4:	e1 f7       	brne	.-8      	; 0x29e <All_On+0x28>
     2a6:	00 c0       	rjmp	.+0      	; 0x2a8 <All_On+0x32>
     2a8:	00 00       	nop
		_delay_ms(100);
		
		PORTB |= 0x1F; //all on
     2aa:	95 b1       	in	r25, 0x05	; 5
     2ac:	9f 61       	ori	r25, 0x1F	; 31
     2ae:	95 b9       	out	0x05, r25	; 5
		PORTD |= 0xEF;
     2b0:	9b b1       	in	r25, 0x0b	; 11
     2b2:	9f 6e       	ori	r25, 0xEF	; 239
     2b4:	9b b9       	out	0x0b, r25	; 11
		PORTC |= 0x3C;
     2b6:	98 b1       	in	r25, 0x08	; 8
     2b8:	9c 63       	ori	r25, 0x3C	; 60
     2ba:	98 b9       	out	0x08, r25	; 8
		mydelay(10); //100ms delay
     2bc:	8a e0       	ldi	r24, 0x0A	; 10
     2be:	90 e0       	ldi	r25, 0x00	; 0
     2c0:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <mydelay>
		
		Count++;
     2c4:	0f 5f       	subi	r16, 0xFF	; 255
     2c6:	1f 4f       	sbci	r17, 0xFF	; 255
}

void All_On (int Flashtime)
{
	int Count = 0;
	while (Count < Flashtime)
     2c8:	c0 17       	cp	r28, r16
     2ca:	d1 07       	cpc	r29, r17
     2cc:	f1 f6       	brne	.-68     	; 0x28a <All_On+0x14>
		mydelay(10); //100ms delay
		
		Count++;
	}
	
}
     2ce:	df 91       	pop	r29
     2d0:	cf 91       	pop	r28
     2d2:	1f 91       	pop	r17
     2d4:	0f 91       	pop	r16
     2d6:	08 95       	ret

000002d8 <Check_Light>:
}


void Check_Light()
{
	if(Flashreg == 0)
     2d8:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <Flashreg>
     2dc:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <Flashreg+0x1>
     2e0:	89 2b       	or	r24, r25
     2e2:	a9 f5       	brne	.+106    	; 0x34e <Check_Light+0x76>
	{
		All_On(5);
     2e4:	85 e0       	ldi	r24, 0x05	; 5
     2e6:	90 e0       	ldi	r25, 0x00	; 0
     2e8:	0e 94 3b 01 	call	0x276	; 0x276 <All_On>
		Direction ^= 1;
     2ec:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Direction>
     2f0:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <Direction+0x1>
     2f4:	21 e0       	ldi	r18, 0x01	; 1
     2f6:	82 27       	eor	r24, r18
     2f8:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <Direction+0x1>
     2fc:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <Direction>
		if(Win_time > 1)
     300:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <__data_end>
     304:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <__data_end+0x1>
     308:	02 97       	sbiw	r24, 0x02	; 2
     30a:	bc f0       	brlt	.+46     	; 0x33a <Check_Light+0x62>
		{
			Delay_Time -= 2;
     30c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Delay_Time>
     310:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <Delay_Time+0x1>
     314:	02 97       	sbiw	r24, 0x02	; 2
			if(Delay_Time < 4)
     316:	84 30       	cpi	r24, 0x04	; 4
     318:	91 05       	cpc	r25, r1
     31a:	2c f0       	brlt	.+10     	; 0x326 <Check_Light+0x4e>
	{
		All_On(5);
		Direction ^= 1;
		if(Win_time > 1)
		{
			Delay_Time -= 2;
     31c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <Delay_Time+0x1>
     320:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Delay_Time>
     324:	0a c0       	rjmp	.+20     	; 0x33a <Check_Light+0x62>
			if(Delay_Time < 4)
			{
				Delay_Time = 10;
     326:	8a e0       	ldi	r24, 0x0A	; 10
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <Delay_Time+0x1>
     32e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Delay_Time>
				Win_time = 0;
     332:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <__data_end+0x1>
     336:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <__data_end>
			}
		}
		Win_time++;
     33a:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <__data_end>
     33e:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <__data_end+0x1>
     342:	01 96       	adiw	r24, 0x01	; 1
     344:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <__data_end+0x1>
     348:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <__data_end>
     34c:	08 95       	ret
	}
	else
	{
		PORTD &= 0x0; //turn off all led
     34e:	8b b1       	in	r24, 0x0b	; 11
     350:	1b b8       	out	0x0b, r1	; 11
		PORTB &= 0x0;
     352:	85 b1       	in	r24, 0x05	; 5
     354:	15 b8       	out	0x05, r1	; 5
		PORTC &= 0x0;
     356:	88 b1       	in	r24, 0x08	; 8
     358:	18 b8       	out	0x08, r1	; 8
		
		FlashPort(Flashreg);
     35a:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <Flashreg>
     35e:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <Flashreg+0x1>
     362:	0e 94 a3 00 	call	0x146	; 0x146 <FlashPort>
		
		mydelay(100);
     366:	84 e6       	ldi	r24, 0x64	; 100
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <mydelay>
		Delay_Time = 10;
     36e:	8a e0       	ldi	r24, 0x0A	; 10
     370:	90 e0       	ldi	r25, 0x00	; 0
     372:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <Delay_Time+0x1>
     376:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Delay_Time>
		Win_time = 0;
     37a:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <__data_end+0x1>
     37e:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <__data_end>
     382:	08 95       	ret

00000384 <main>:
{
	uint8_t key_status1 = 0;
	
	/* Initializes MCU, drivers and middleware */
	//DDRB |= (1<<5);
	DDRD = 0xFF;
     384:	8f ef       	ldi	r24, 0xFF	; 255
     386:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0xFF;
     388:	84 b9       	out	0x04, r24	; 4
	DDRC = 0xFF;
     38a:	87 b9       	out	0x07, r24	; 7
		
		
	PORTB |= 0x0;
     38c:	85 b1       	in	r24, 0x05	; 5
     38e:	85 b9       	out	0x05, r24	; 5
	PORTD |= 0x0; //Turn off leds
     390:	8b b1       	in	r24, 0x0b	; 11
     392:	8b b9       	out	0x0b, r24	; 11
	PORTC |= 0x0;
     394:	88 b1       	in	r24, 0x08	; 8
     396:	88 b9       	out	0x08, r24	; 8
	
	atmel_start_init();
     398:	0e 94 79 00 	call	0xf2	; 0xf2 <atmel_start_init>
	
	cpu_irq_enable();
     39c:	78 94       	sei
	/* Replace with your application code */
	while (1)
	{
		//Run_Light(1)
		
		touch_process();
     39e:	0e 94 af 02 	call	0x55e	; 0x55e <touch_process>

		key_status1 = get_sensor_state(0) & 0x80;
     3a2:	80 e0       	ldi	r24, 0x00	; 0
     3a4:	90 e0       	ldi	r25, 0x00	; 0
     3a6:	0e 94 2f 03 	call	0x65e	; 0x65e <get_sensor_state>

		if ((0u != key_status1) /*&& temp*/)
     3aa:	88 23       	and	r24, r24
     3ac:	24 f4       	brge	.+8      	; 0x3b6 <main+0x32>
		{
			//Cycle_lights();
			PORTB |=(1<<5);
     3ae:	2d 9a       	sbi	0x05, 5	; 5
			//temp = 0;	
			Check_Light();
     3b0:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <Check_Light>
     3b4:	01 c0       	rjmp	.+2      	; 0x3b8 <main+0x34>
		}
		else 
		{
			PORTB &=~(1<<5);	
     3b6:	2d 98       	cbi	0x05, 5	; 5
		}
		Light_Direction();
     3b8:	0e 94 2f 01 	call	0x25e	; 0x25e <Light_Direction>
	}
     3bc:	f0 cf       	rjmp	.-32     	; 0x39e <main+0x1a>

000003be <datastreamer_init>:
Input  : none
Output : none
Notes  :
============================================================================*/
void datastreamer_init(void)
{
     3be:	08 95       	ret

000003c0 <datastreamer_transmit>:
Input  : Byte to be transmitted
Output : none
Notes  :
============================================================================*/
void datastreamer_transmit(uint8_t data_byte)
{
     3c0:	cf 93       	push	r28
     3c2:	c8 2f       	mov	r28, r24
	while (!USART_is_tx_ready())
     3c4:	0e 94 8c 03 	call	0x718	; 0x718 <USART_is_tx_ready>
     3c8:	88 23       	and	r24, r24
     3ca:	e1 f3       	breq	.-8      	; 0x3c4 <datastreamer_transmit+0x4>
		;

	USART_write(data_byte);
     3cc:	8c 2f       	mov	r24, r28
     3ce:	0e 94 9a 03 	call	0x734	; 0x734 <USART_write>

	while (USART_is_tx_busy())
     3d2:	0e 94 92 03 	call	0x724	; 0x724 <USART_is_tx_busy>
     3d6:	81 11       	cpse	r24, r1
     3d8:	fc cf       	rjmp	.-8      	; 0x3d2 <datastreamer_transmit+0x12>
		;
}
     3da:	cf 91       	pop	r28
     3dc:	08 95       	ret

000003de <datastreamer_output>:
Output : none
Notes  : The data visualizer scripts that are generated in the project should be
         set on the data visualizer software.
============================================================================*/
void datastreamer_output(void)
{
     3de:	ef 92       	push	r14
     3e0:	ff 92       	push	r15
     3e2:	0f 93       	push	r16
     3e4:	1f 93       	push	r17
     3e6:	cf 93       	push	r28
     3e8:	df 93       	push	r29
     3ea:	00 d0       	rcall	.+0      	; 0x3ec <datastreamer_output+0xe>
     3ec:	cd b7       	in	r28, 0x3d	; 61
     3ee:	de b7       	in	r29, 0x3e	; 62
	uint16_t          u16temp_output;
	uint8_t           u8temp_output, send_header;
	volatile uint16_t count_bytes_out;

	send_header = sequence & (0x0f);
	if (send_header == 0) {
     3f0:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <sequence.2398>
     3f4:	8f 70       	andi	r24, 0x0F	; 15
     3f6:	81 f4       	brne	.+32     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     3f8:	04 e1       	ldi	r16, 0x14	; 20
     3fa:	11 e0       	ldi	r17, 0x01	; 1
     3fc:	0f 2e       	mov	r0, r31
     3fe:	f7 e2       	ldi	r31, 0x27	; 39
     400:	ef 2e       	mov	r14, r31
     402:	f1 e0       	ldi	r31, 0x01	; 1
     404:	ff 2e       	mov	r15, r31
     406:	f0 2d       	mov	r31, r0
		for (i = 0; i < sizeof(data); i++) {
			datastreamer_transmit(data[i]);
     408:	f8 01       	movw	r30, r16
     40a:	81 91       	ld	r24, Z+
     40c:	8f 01       	movw	r16, r30
     40e:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <datastreamer_transmit>
	uint8_t           u8temp_output, send_header;
	volatile uint16_t count_bytes_out;

	send_header = sequence & (0x0f);
	if (send_header == 0) {
		for (i = 0; i < sizeof(data); i++) {
     412:	e0 16       	cp	r14, r16
     414:	f1 06       	cpc	r15, r17
     416:	c1 f7       	brne	.-16     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
			datastreamer_transmit(data[i]);
		}
	}

	// Start token
	datastreamer_transmit(0x55);
     418:	85 e5       	ldi	r24, 0x55	; 85
     41a:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <datastreamer_transmit>

	// Frame Start
	datastreamer_transmit(sequence);
     41e:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <sequence.2398>
     422:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <datastreamer_transmit>
	for (count_bytes_out = 0u; count_bytes_out < DEF_NUM_CHANNELS; count_bytes_out++) {
     426:	1a 82       	std	Y+2, r1	; 0x02
     428:	19 82       	std	Y+1, r1	; 0x01
     42a:	89 81       	ldd	r24, Y+1	; 0x01
     42c:	9a 81       	ldd	r25, Y+2	; 0x02
     42e:	89 2b       	or	r24, r25
     430:	09 f0       	breq	.+2      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
     432:	53 c0       	rjmp	.+166    	; 0x4da <__LOCK_REGION_LENGTH__+0xda>

		/* Signals */
		u16temp_output = get_sensor_node_signal(count_bytes_out);
     434:	89 81       	ldd	r24, Y+1	; 0x01
     436:	9a 81       	ldd	r25, Y+2	; 0x02
     438:	0e 94 08 03 	call	0x610	; 0x610 <get_sensor_node_signal>
     43c:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     43e:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     442:	81 2f       	mov	r24, r17
     444:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <datastreamer_transmit>

		/* Reference */
		u16temp_output = get_sensor_node_reference(count_bytes_out);
     448:	89 81       	ldd	r24, Y+1	; 0x01
     44a:	9a 81       	ldd	r25, Y+2	; 0x02
     44c:	0e 94 15 03 	call	0x62a	; 0x62a <get_sensor_node_reference>
     450:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     452:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     456:	81 2f       	mov	r24, r17
     458:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <datastreamer_transmit>

		/* Touch delta */
		temp_int_calc = get_sensor_node_signal(count_bytes_out);
     45c:	89 81       	ldd	r24, Y+1	; 0x01
     45e:	9a 81       	ldd	r25, Y+2	; 0x02
     460:	0e 94 08 03 	call	0x610	; 0x610 <get_sensor_node_signal>
     464:	8c 01       	movw	r16, r24
		temp_int_calc -= get_sensor_node_reference(count_bytes_out);
     466:	89 81       	ldd	r24, Y+1	; 0x01
     468:	9a 81       	ldd	r25, Y+2	; 0x02
     46a:	0e 94 15 03 	call	0x62a	; 0x62a <get_sensor_node_reference>
     46e:	08 1b       	sub	r16, r24
     470:	19 0b       	sbc	r17, r25
		u16temp_output = (uint16_t)(temp_int_calc);
		datastreamer_transmit((uint8_t)u16temp_output);
     472:	80 2f       	mov	r24, r16
     474:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     478:	81 2f       	mov	r24, r17
     47a:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <datastreamer_transmit>

		/* Comp Caps */
		u16temp_output = get_sensor_cc_val(count_bytes_out);
     47e:	89 81       	ldd	r24, Y+1	; 0x01
     480:	9a 81       	ldd	r25, Y+2	; 0x02
     482:	0e 94 22 03 	call	0x644	; 0x644 <get_sensor_cc_val>
     486:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     488:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     48c:	81 2f       	mov	r24, r17
     48e:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <datastreamer_transmit>
		datastreamer_transmit(u8temp_output);
#endif
#endif

		/* State */
		u8temp_output = get_sensor_state(count_bytes_out);
     492:	89 81       	ldd	r24, Y+1	; 0x01
     494:	9a 81       	ldd	r25, Y+2	; 0x02
     496:	0e 94 2f 03 	call	0x65e	; 0x65e <get_sensor_state>
		if (0u != (u8temp_output & 0x80)) {
     49a:	88 23       	and	r24, r24
     49c:	24 f4       	brge	.+8      	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
			datastreamer_transmit(0x01);
     49e:	81 e0       	ldi	r24, 0x01	; 1
     4a0:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <datastreamer_transmit>
     4a4:	03 c0       	rjmp	.+6      	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
		} else {
			datastreamer_transmit(0x00);
     4a6:	80 e0       	ldi	r24, 0x00	; 0
     4a8:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <datastreamer_transmit>
		}

		/* Threshold */
		datastreamer_transmit(qtlib_key_configs_set1[count_bytes_out].channel_threshold);
     4ac:	89 81       	ldd	r24, Y+1	; 0x01
     4ae:	9a 81       	ldd	r25, Y+2	; 0x02
     4b0:	fc 01       	movw	r30, r24
     4b2:	ee 0f       	add	r30, r30
     4b4:	ff 1f       	adc	r31, r31
     4b6:	8e 0f       	add	r24, r30
     4b8:	9f 1f       	adc	r25, r31
     4ba:	fc 01       	movw	r30, r24
     4bc:	e1 5d       	subi	r30, 0xD1	; 209
     4be:	fe 4f       	sbci	r31, 0xFE	; 254
     4c0:	80 81       	ld	r24, Z
     4c2:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <datastreamer_transmit>
	// Start token
	datastreamer_transmit(0x55);

	// Frame Start
	datastreamer_transmit(sequence);
	for (count_bytes_out = 0u; count_bytes_out < DEF_NUM_CHANNELS; count_bytes_out++) {
     4c6:	89 81       	ldd	r24, Y+1	; 0x01
     4c8:	9a 81       	ldd	r25, Y+2	; 0x02
     4ca:	01 96       	adiw	r24, 0x01	; 1
     4cc:	9a 83       	std	Y+2, r25	; 0x02
     4ce:	89 83       	std	Y+1, r24	; 0x01
     4d0:	89 81       	ldd	r24, Y+1	; 0x01
     4d2:	9a 81       	ldd	r25, Y+2	; 0x02
     4d4:	89 2b       	or	r24, r25
     4d6:	09 f4       	brne	.+2      	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
     4d8:	ad cf       	rjmp	.-166    	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
		datastreamer_transmit(qtm_freq_hop_autotune_control1.qtm_freq_hop_autotune_config->median_filter_freq[count]);
	}
#endif

	/* Other Debug Parameters */
	datastreamer_transmit(module_error_code);
     4da:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <module_error_code>
     4de:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <datastreamer_transmit>

	/* Frame End */
	datastreamer_transmit(sequence++);
     4e2:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <sequence.2398>
     4e6:	91 e0       	ldi	r25, 0x01	; 1
     4e8:	98 0f       	add	r25, r24
     4ea:	90 93 5c 01 	sts	0x015C, r25	; 0x80015c <sequence.2398>
     4ee:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <datastreamer_transmit>

	/* End token */
	datastreamer_transmit(~0x55);
     4f2:	8a ea       	ldi	r24, 0xAA	; 170
     4f4:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <datastreamer_transmit>
}
     4f8:	0f 90       	pop	r0
     4fa:	0f 90       	pop	r0
     4fc:	df 91       	pop	r29
     4fe:	cf 91       	pop	r28
     500:	1f 91       	pop	r17
     502:	0f 91       	pop	r16
     504:	ff 90       	pop	r15
     506:	ef 90       	pop	r14
     508:	08 95       	ret

0000050a <qtm_measure_complete_callback>:
     50a:	81 e0       	ldi	r24, 0x01	; 1
     50c:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <touch_postprocess_request>
     510:	08 95       	ret

00000512 <touch_init>:
     512:	88 e0       	ldi	r24, 0x08	; 8
     514:	87 bd       	out	0x27, r24	; 39
     516:	e5 e6       	ldi	r30, 0x65	; 101
     518:	f0 e0       	ldi	r31, 0x00	; 0
     51a:	80 81       	ld	r24, Z
     51c:	8f 7e       	andi	r24, 0xEF	; 239
     51e:	80 83       	st	Z, r24
     520:	73 98       	cbi	0x0e, 3	; 14
     522:	8c e3       	ldi	r24, 0x3C	; 60
     524:	91 e0       	ldi	r25, 0x01	; 1
     526:	0e 94 36 0a 	call	0x146c	; 0x146c <qtm_ptc_init_acquisition_module>
     52a:	8e e7       	ldi	r24, 0x7E	; 126
     52c:	91 e0       	ldi	r25, 0x01	; 1
     52e:	0e 94 bd 0a 	call	0x157a	; 0x157a <qtm_ptc_qtlib_assign_signal_memory>
     532:	60 e0       	ldi	r22, 0x00	; 0
     534:	70 e0       	ldi	r23, 0x00	; 0
     536:	8c e3       	ldi	r24, 0x3C	; 60
     538:	91 e0       	ldi	r25, 0x01	; 1
     53a:	0e 94 c0 0b 	call	0x1780	; 0x1780 <qtm_enable_sensor_node>
     53e:	60 e0       	ldi	r22, 0x00	; 0
     540:	70 e0       	ldi	r23, 0x00	; 0
     542:	8c e3       	ldi	r24, 0x3C	; 60
     544:	91 e0       	ldi	r25, 0x01	; 1
     546:	0e 94 df 0b 	call	0x17be	; 0x17be <qtm_calibrate_sensor_node>
     54a:	49 e7       	ldi	r20, 0x79	; 121
     54c:	51 e0       	ldi	r21, 0x01	; 1
     54e:	60 e0       	ldi	r22, 0x00	; 0
     550:	87 e2       	ldi	r24, 0x27	; 39
     552:	91 e0       	ldi	r25, 0x01	; 1
     554:	0e 94 16 04 	call	0x82c	; 0x82c <qtm_init_sensor_key>
     558:	0e 94 df 01 	call	0x3be	; 0x3be <datastreamer_init>
     55c:	08 95       	ret

0000055e <touch_process>:
     55e:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <time_to_measure_touch_flag>
     562:	81 30       	cpi	r24, 0x01	; 1
     564:	51 f4       	brne	.+20     	; 0x57a <touch_process+0x1c>
     566:	65 e8       	ldi	r22, 0x85	; 133
     568:	72 e0       	ldi	r23, 0x02	; 2
     56a:	8c e3       	ldi	r24, 0x3C	; 60
     56c:	91 e0       	ldi	r25, 0x01	; 1
     56e:	0e 94 c7 0a 	call	0x158e	; 0x158e <qtm_ptc_start_measurement_seq>
     572:	81 11       	cpse	r24, r1
     574:	02 c0       	rjmp	.+4      	; 0x57a <touch_process+0x1c>
     576:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <time_to_measure_touch_flag>
     57a:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <touch_postprocess_request>
     57e:	81 30       	cpi	r24, 0x01	; 1
     580:	39 f5       	brne	.+78     	; 0x5d0 <touch_process+0x72>
     582:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <touch_postprocess_request>
     586:	0e 94 cf 08 	call	0x119e	; 0x119e <qtm_acquisition_process>
     58a:	81 11       	cpse	r24, r1
     58c:	0c c0       	rjmp	.+24     	; 0x5a6 <touch_process+0x48>
     58e:	87 e2       	ldi	r24, 0x27	; 39
     590:	91 e0       	ldi	r25, 0x01	; 1
     592:	0e 94 35 04 	call	0x86a	; 0x86a <qtm_key_sensors_process>
     596:	88 23       	and	r24, r24
     598:	59 f0       	breq	.+22     	; 0x5b0 <touch_process+0x52>
     59a:	82 e0       	ldi	r24, 0x02	; 2
     59c:	80 93 5f 01 	sts	0x015F, r24	; 0x80015f <module_error_code>
     5a0:	0e 94 ef 01 	call	0x3de	; 0x3de <datastreamer_output>
     5a4:	05 c0       	rjmp	.+10     	; 0x5b0 <touch_process+0x52>
     5a6:	81 e0       	ldi	r24, 0x01	; 1
     5a8:	80 93 5f 01 	sts	0x015F, r24	; 0x80015f <module_error_code>
     5ac:	0e 94 ef 01 	call	0x3de	; 0x3de <datastreamer_output>
     5b0:	e0 91 27 01 	lds	r30, 0x0127	; 0x800127 <qtlib_key_set1>
     5b4:	f0 91 28 01 	lds	r31, 0x0128	; 0x800128 <qtlib_key_set1+0x1>
     5b8:	80 81       	ld	r24, Z
     5ba:	88 23       	and	r24, r24
     5bc:	24 f4       	brge	.+8      	; 0x5c6 <touch_process+0x68>
     5be:	81 e0       	ldi	r24, 0x01	; 1
     5c0:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <time_to_measure_touch_flag>
     5c4:	03 c0       	rjmp	.+6      	; 0x5cc <touch_process+0x6e>
     5c6:	81 e0       	ldi	r24, 0x01	; 1
     5c8:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <measurement_done_touch>
     5cc:	0e 94 ef 01 	call	0x3de	; 0x3de <datastreamer_output>
     5d0:	08 95       	ret

000005d2 <touch_timer_handler>:
     5d2:	81 e0       	ldi	r24, 0x01	; 1
     5d4:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <time_to_measure_touch_flag>
     5d8:	84 e1       	ldi	r24, 0x14	; 20
     5da:	90 e0       	ldi	r25, 0x00	; 0
     5dc:	0e 94 0b 04 	call	0x816	; 0x816 <qtm_update_qtlib_timer>
     5e0:	08 95       	ret

000005e2 <mega_touch_timer>:
     5e2:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <touch_time_counter.2364>
     5e6:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <touch_time_counter.2364+0x1>
     5ea:	44 97       	sbiw	r24, 0x14	; 20
     5ec:	39 f4       	brne	.+14     	; 0x5fc <mega_touch_timer+0x1a>
     5ee:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <touch_time_counter.2364+0x1>
     5f2:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <touch_time_counter.2364>
     5f6:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <touch_timer_handler>
     5fa:	08 95       	ret
     5fc:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <touch_time_counter.2364>
     600:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <touch_time_counter.2364+0x1>
     604:	01 96       	adiw	r24, 0x01	; 1
     606:	90 93 5e 01 	sts	0x015E, r25	; 0x80015e <touch_time_counter.2364+0x1>
     60a:	80 93 5d 01 	sts	0x015D, r24	; 0x80015d <touch_time_counter.2364>
     60e:	08 95       	ret

00000610 <get_sensor_node_signal>:
     610:	9c 01       	movw	r18, r24
     612:	22 0f       	add	r18, r18
     614:	33 1f       	adc	r19, r19
     616:	22 0f       	add	r18, r18
     618:	33 1f       	adc	r19, r19
     61a:	82 0f       	add	r24, r18
     61c:	93 1f       	adc	r25, r19
     61e:	fc 01       	movw	r30, r24
     620:	e7 58       	subi	r30, 0x87	; 135
     622:	fe 4f       	sbci	r31, 0xFE	; 254
     624:	81 81       	ldd	r24, Z+1	; 0x01
     626:	92 81       	ldd	r25, Z+2	; 0x02
     628:	08 95       	ret

0000062a <get_sensor_node_reference>:
     62a:	9c 01       	movw	r18, r24
     62c:	22 0f       	add	r18, r18
     62e:	33 1f       	adc	r19, r19
     630:	82 0f       	add	r24, r18
     632:	93 1f       	adc	r25, r19
     634:	fc 01       	movw	r30, r24
     636:	ee 0f       	add	r30, r30
     638:	ff 1f       	adc	r31, r31
     63a:	e0 58       	subi	r30, 0x80	; 128
     63c:	fe 4f       	sbci	r31, 0xFE	; 254
     63e:	84 81       	ldd	r24, Z+4	; 0x04
     640:	95 81       	ldd	r25, Z+5	; 0x05
     642:	08 95       	ret

00000644 <get_sensor_cc_val>:
     644:	9c 01       	movw	r18, r24
     646:	22 0f       	add	r18, r18
     648:	33 1f       	adc	r19, r19
     64a:	22 0f       	add	r18, r18
     64c:	33 1f       	adc	r19, r19
     64e:	82 0f       	add	r24, r18
     650:	93 1f       	adc	r25, r19
     652:	fc 01       	movw	r30, r24
     654:	e7 58       	subi	r30, 0x87	; 135
     656:	fe 4f       	sbci	r31, 0xFE	; 254
     658:	83 81       	ldd	r24, Z+3	; 0x03
     65a:	94 81       	ldd	r25, Z+4	; 0x04
     65c:	08 95       	ret

0000065e <get_sensor_state>:
     65e:	9c 01       	movw	r18, r24
     660:	22 0f       	add	r18, r18
     662:	33 1f       	adc	r19, r19
     664:	82 0f       	add	r24, r18
     666:	93 1f       	adc	r25, r19
     668:	88 0f       	add	r24, r24
     66a:	99 1f       	adc	r25, r25
     66c:	e0 91 2b 01 	lds	r30, 0x012B	; 0x80012b <qtlib_key_set1+0x4>
     670:	f0 91 2c 01 	lds	r31, 0x012C	; 0x80012c <qtlib_key_set1+0x5>
     674:	e8 0f       	add	r30, r24
     676:	f9 1f       	adc	r31, r25
     678:	80 81       	ld	r24, Z
     67a:	08 95       	ret

0000067c <__vector_37>:
     67c:	1f 92       	push	r1
     67e:	0f 92       	push	r0
     680:	0f b6       	in	r0, 0x3f	; 63
     682:	0f 92       	push	r0
     684:	11 24       	eor	r1, r1
     686:	2f 93       	push	r18
     688:	3f 93       	push	r19
     68a:	4f 93       	push	r20
     68c:	5f 93       	push	r21
     68e:	6f 93       	push	r22
     690:	7f 93       	push	r23
     692:	8f 93       	push	r24
     694:	9f 93       	push	r25
     696:	af 93       	push	r26
     698:	bf 93       	push	r27
     69a:	ef 93       	push	r30
     69c:	ff 93       	push	r31
     69e:	0e 94 1f 0c 	call	0x183e	; 0x183e <qtm_m328pb_ptc_handler_eoc>
     6a2:	ff 91       	pop	r31
     6a4:	ef 91       	pop	r30
     6a6:	bf 91       	pop	r27
     6a8:	af 91       	pop	r26
     6aa:	9f 91       	pop	r25
     6ac:	8f 91       	pop	r24
     6ae:	7f 91       	pop	r23
     6b0:	6f 91       	pop	r22
     6b2:	5f 91       	pop	r21
     6b4:	4f 91       	pop	r20
     6b6:	3f 91       	pop	r19
     6b8:	2f 91       	pop	r18
     6ba:	0f 90       	pop	r0
     6bc:	0f be       	out	0x3f, r0	; 63
     6be:	0f 90       	pop	r0
     6c0:	1f 90       	pop	r1
     6c2:	18 95       	reti

000006c4 <USART_initialization>:
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
     6c4:	50 98       	cbi	0x0a, 0	; 10
		DDRD &= ~(1 << pin);

		PORTD |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTD &= ~(1 << pin);
     6c6:	58 98       	cbi	0x0b, 0	; 11
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRD |= 1 << pin;
     6c8:	51 9a       	sbi	0x0a, 1	; 10
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTD |= 1 << pin;
	} else {
		PORTD &= ~(1 << pin);
     6ca:	59 98       	cbi	0x0b, 1	; 11
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	USART_init();
     6cc:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <USART_init>
     6d0:	08 95       	ret

000006d2 <system_init>:
#include <system.h>

void Timer_initialization(void)
{

	Timer_init();
     6d2:	0e 94 6e 03 	call	0x6dc	; 0x6dc <Timer_init>

	//sysctrl_init();

	Timer_initialization();

	USART_initialization();
     6d6:	0e 94 62 03 	call	0x6c4	; 0x6c4 <USART_initialization>
     6da:	08 95       	ret

000006dc <Timer_init>:
     6dc:	e4 e6       	ldi	r30, 0x64	; 100
     6de:	f0 e0       	ldi	r31, 0x00	; 0
     6e0:	80 81       	ld	r24, Z
     6e2:	8f 7d       	andi	r24, 0xDF	; 223
     6e4:	80 83       	st	Z, r24
     6e6:	82 e0       	ldi	r24, 0x02	; 2
     6e8:	84 bd       	out	0x24, r24	; 36
     6ea:	95 e0       	ldi	r25, 0x05	; 5
     6ec:	95 bd       	out	0x25, r25	; 37
     6ee:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
     6f2:	80 e0       	ldi	r24, 0x00	; 0
     6f4:	08 95       	ret

000006f6 <USART_init>:
uint8_t USART_read()
{
	while (!(UCSR0A & (1 << RXC0)))
		;
	return UDR0;
}
     6f6:	e4 e6       	ldi	r30, 0x64	; 100
     6f8:	f0 e0       	ldi	r31, 0x00	; 0
     6fa:	80 81       	ld	r24, Z
     6fc:	8d 7f       	andi	r24, 0xFD	; 253
     6fe:	80 83       	st	Z, r24
     700:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     704:	89 e1       	ldi	r24, 0x19	; 25
     706:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     70a:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     70e:	88 e0       	ldi	r24, 0x08	; 8
     710:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     714:	80 e0       	ldi	r24, 0x00	; 0
     716:	08 95       	ret

00000718 <USART_is_tx_ready>:
     718:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     71c:	85 fb       	bst	r24, 5
     71e:	88 27       	eor	r24, r24
     720:	80 f9       	bld	r24, 0
     722:	08 95       	ret

00000724 <USART_is_tx_busy>:
     724:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     728:	86 fb       	bst	r24, 6
     72a:	88 27       	eor	r24, r24
     72c:	80 f9       	bld	r24, 0
     72e:	91 e0       	ldi	r25, 0x01	; 1
     730:	89 27       	eor	r24, r25
     732:	08 95       	ret

00000734 <USART_write>:
 *
 * \return Nothing
 */
void USART_write(const uint8_t data)
{
	while (!(UCSR0A & (1 << UDRE0)))
     734:	e0 ec       	ldi	r30, 0xC0	; 192
     736:	f0 e0       	ldi	r31, 0x00	; 0
     738:	90 81       	ld	r25, Z
     73a:	95 ff       	sbrs	r25, 5
     73c:	fd cf       	rjmp	.-6      	; 0x738 <USART_write+0x4>
		;
	UDR0 = data;
     73e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     742:	08 95       	ret

00000744 <check_for_aks_block>:
     744:	cf 92       	push	r12
     746:	df 92       	push	r13
     748:	ff 92       	push	r15
     74a:	0f 93       	push	r16
     74c:	1f 93       	push	r17
     74e:	cf 93       	push	r28
     750:	df 93       	push	r29
     752:	ec 01       	movw	r28, r24
     754:	ae 81       	ldd	r26, Y+6	; 0x06
     756:	bf 81       	ldd	r27, Y+7	; 0x07
     758:	eb 01       	movw	r28, r22
     75a:	cc 0f       	add	r28, r28
     75c:	dd 1f       	adc	r29, r29
     75e:	c6 0f       	add	r28, r22
     760:	d7 1f       	adc	r29, r23
     762:	ca 0f       	add	r28, r26
     764:	db 1f       	adc	r29, r27
     766:	fa 80       	ldd	r15, Y+2	; 0x02
     768:	fc 01       	movw	r30, r24
     76a:	44 81       	ldd	r20, Z+4	; 0x04
     76c:	55 81       	ldd	r21, Z+5	; 0x05
     76e:	e6 e0       	ldi	r30, 0x06	; 6
     770:	e6 9f       	mul	r30, r22
     772:	90 01       	movw	r18, r0
     774:	e7 9f       	mul	r30, r23
     776:	30 0d       	add	r19, r0
     778:	11 24       	eor	r1, r1
     77a:	8a 01       	movw	r16, r20
     77c:	02 0f       	add	r16, r18
     77e:	13 1f       	adc	r17, r19
     780:	f8 01       	movw	r30, r16
     782:	22 81       	ldd	r18, Z+2	; 0x02
     784:	33 81       	ldd	r19, Z+3	; 0x03
     786:	f9 01       	movw	r30, r18
     788:	21 81       	ldd	r18, Z+1	; 0x01
     78a:	32 81       	ldd	r19, Z+2	; 0x02
     78c:	f8 01       	movw	r30, r16
     78e:	04 81       	ldd	r16, Z+4	; 0x04
     790:	15 81       	ldd	r17, Z+5	; 0x05
     792:	20 1b       	sub	r18, r16
     794:	31 0b       	sbc	r19, r17
     796:	e8 81       	ld	r30, Y
     798:	2e 1b       	sub	r18, r30
     79a:	31 09       	sbc	r19, r1
     79c:	ec 01       	movw	r28, r24
     79e:	ea 81       	ldd	r30, Y+2	; 0x02
     7a0:	fb 81       	ldd	r31, Y+3	; 0x03
     7a2:	00 81       	ld	r16, Z
     7a4:	11 81       	ldd	r17, Z+1	; 0x01
     7a6:	fa 01       	movw	r30, r20
     7a8:	40 e0       	ldi	r20, 0x00	; 0
     7aa:	50 e0       	ldi	r21, 0x00	; 0
     7ac:	40 17       	cp	r20, r16
     7ae:	51 07       	cpc	r21, r17
     7b0:	39 f1       	breq	.+78     	; 0x800 <check_for_aks_block+0xbc>
     7b2:	46 17       	cp	r20, r22
     7b4:	57 07       	cpc	r21, r23
     7b6:	f9 f0       	breq	.+62     	; 0x7f6 <check_for_aks_block+0xb2>
     7b8:	12 96       	adiw	r26, 0x02	; 2
     7ba:	8c 91       	ld	r24, X
     7bc:	12 97       	sbiw	r26, 0x02	; 2
     7be:	f8 12       	cpse	r15, r24
     7c0:	1a c0       	rjmp	.+52     	; 0x7f6 <check_for_aks_block+0xb2>
     7c2:	80 81       	ld	r24, Z
     7c4:	85 58       	subi	r24, 0x85	; 133
     7c6:	82 30       	cpi	r24, 0x02	; 2
     7c8:	e8 f0       	brcs	.+58     	; 0x804 <check_for_aks_block+0xc0>
     7ca:	c4 80       	ldd	r12, Z+4	; 0x04
     7cc:	d5 80       	ldd	r13, Z+5	; 0x05
     7ce:	82 81       	ldd	r24, Z+2	; 0x02
     7d0:	93 81       	ldd	r25, Z+3	; 0x03
     7d2:	ec 01       	movw	r28, r24
     7d4:	89 81       	ldd	r24, Y+1	; 0x01
     7d6:	9a 81       	ldd	r25, Y+2	; 0x02
     7d8:	c8 16       	cp	r12, r24
     7da:	d9 06       	cpc	r13, r25
     7dc:	60 f4       	brcc	.+24     	; 0x7f6 <check_for_aks_block+0xb2>
     7de:	8c 19       	sub	r24, r12
     7e0:	9d 09       	sbc	r25, r13
     7e2:	cc 91       	ld	r28, X
     7e4:	d0 e0       	ldi	r29, 0x00	; 0
     7e6:	c8 17       	cp	r28, r24
     7e8:	d9 07       	cpc	r29, r25
     7ea:	28 f4       	brcc	.+10     	; 0x7f6 <check_for_aks_block+0xb2>
     7ec:	8c 1b       	sub	r24, r28
     7ee:	9d 0b       	sbc	r25, r29
     7f0:	28 17       	cp	r18, r24
     7f2:	39 07       	cpc	r19, r25
     7f4:	38 f0       	brcs	.+14     	; 0x804 <check_for_aks_block+0xc0>
     7f6:	4f 5f       	subi	r20, 0xFF	; 255
     7f8:	5f 4f       	sbci	r21, 0xFF	; 255
     7fa:	13 96       	adiw	r26, 0x03	; 3
     7fc:	36 96       	adiw	r30, 0x06	; 6
     7fe:	d6 cf       	rjmp	.-84     	; 0x7ac <check_for_aks_block+0x68>
     800:	80 e0       	ldi	r24, 0x00	; 0
     802:	01 c0       	rjmp	.+2      	; 0x806 <check_for_aks_block+0xc2>
     804:	81 e0       	ldi	r24, 0x01	; 1
     806:	df 91       	pop	r29
     808:	cf 91       	pop	r28
     80a:	1f 91       	pop	r17
     80c:	0f 91       	pop	r16
     80e:	ff 90       	pop	r15
     810:	df 90       	pop	r13
     812:	cf 90       	pop	r12
     814:	08 95       	ret

00000816 <qtm_update_qtlib_timer>:
     816:	20 91 63 01 	lds	r18, 0x0163	; 0x800163 <qtm_local_ms_timecount>
     81a:	30 91 64 01 	lds	r19, 0x0164	; 0x800164 <qtm_local_ms_timecount+0x1>
     81e:	82 0f       	add	r24, r18
     820:	93 1f       	adc	r25, r19
     822:	90 93 64 01 	sts	0x0164, r25	; 0x800164 <qtm_local_ms_timecount+0x1>
     826:	80 93 63 01 	sts	0x0163, r24	; 0x800163 <qtm_local_ms_timecount>
     82a:	08 95       	ret

0000082c <qtm_init_sensor_key>:
     82c:	00 97       	sbiw	r24, 0x00	; 0
     82e:	d9 f0       	breq	.+54     	; 0x866 <qtm_init_sensor_key+0x3a>
     830:	41 15       	cp	r20, r1
     832:	51 05       	cpc	r21, r1
     834:	c1 f0       	breq	.+48     	; 0x866 <qtm_init_sensor_key+0x3a>
     836:	26 e0       	ldi	r18, 0x06	; 6
     838:	62 9f       	mul	r22, r18
     83a:	b0 01       	movw	r22, r0
     83c:	11 24       	eor	r1, r1
     83e:	dc 01       	movw	r26, r24
     840:	14 96       	adiw	r26, 0x04	; 4
     842:	ed 91       	ld	r30, X+
     844:	fc 91       	ld	r31, X
     846:	15 97       	sbiw	r26, 0x05	; 5
     848:	e6 0f       	add	r30, r22
     84a:	f7 1f       	adc	r31, r23
     84c:	21 e0       	ldi	r18, 0x01	; 1
     84e:	20 83       	st	Z, r18
     850:	14 96       	adiw	r26, 0x04	; 4
     852:	8d 91       	ld	r24, X+
     854:	9c 91       	ld	r25, X
     856:	15 97       	sbiw	r26, 0x05	; 5
     858:	fc 01       	movw	r30, r24
     85a:	e6 0f       	add	r30, r22
     85c:	f7 1f       	adc	r31, r23
     85e:	53 83       	std	Z+3, r21	; 0x03
     860:	42 83       	std	Z+2, r20	; 0x02
     862:	80 e0       	ldi	r24, 0x00	; 0
     864:	08 95       	ret
     866:	8b e0       	ldi	r24, 0x0B	; 11
     868:	08 95       	ret

0000086a <qtm_key_sensors_process>:
     86a:	2f 92       	push	r2
     86c:	3f 92       	push	r3
     86e:	4f 92       	push	r4
     870:	5f 92       	push	r5
     872:	6f 92       	push	r6
     874:	7f 92       	push	r7
     876:	8f 92       	push	r8
     878:	9f 92       	push	r9
     87a:	af 92       	push	r10
     87c:	bf 92       	push	r11
     87e:	cf 92       	push	r12
     880:	df 92       	push	r13
     882:	ef 92       	push	r14
     884:	ff 92       	push	r15
     886:	0f 93       	push	r16
     888:	1f 93       	push	r17
     88a:	cf 93       	push	r28
     88c:	df 93       	push	r29
     88e:	00 97       	sbiw	r24, 0x00	; 0
     890:	09 f4       	brne	.+2      	; 0x894 <qtm_key_sensors_process+0x2a>
     892:	7d c3       	rjmp	.+1786   	; 0xf8e <__stack+0x68f>
     894:	ec 01       	movw	r28, r24
     896:	a1 2c       	mov	r10, r1
     898:	b1 2c       	mov	r11, r1
     89a:	81 2c       	mov	r8, r1
     89c:	91 2c       	mov	r9, r1
     89e:	21 2c       	mov	r2, r1
     8a0:	d1 2c       	mov	r13, r1
     8a2:	33 e0       	ldi	r19, 0x03	; 3
     8a4:	c3 2e       	mov	r12, r19
     8a6:	45 e8       	ldi	r20, 0x85	; 133
     8a8:	64 2e       	mov	r6, r20
     8aa:	56 e8       	ldi	r21, 0x86	; 134
     8ac:	75 2e       	mov	r7, r21
     8ae:	67 e0       	ldi	r22, 0x07	; 7
     8b0:	36 2e       	mov	r3, r22
     8b2:	72 e0       	ldi	r23, 0x02	; 2
     8b4:	47 2e       	mov	r4, r23
     8b6:	e8 e0       	ldi	r30, 0x08	; 8
     8b8:	5e 2e       	mov	r5, r30
     8ba:	ea 81       	ldd	r30, Y+2	; 0x02
     8bc:	fb 81       	ldd	r31, Y+3	; 0x03
     8be:	80 81       	ld	r24, Z
     8c0:	91 81       	ldd	r25, Z+1	; 0x01
     8c2:	88 16       	cp	r8, r24
     8c4:	99 06       	cpc	r9, r25
     8c6:	08 f0       	brcs	.+2      	; 0x8ca <qtm_key_sensors_process+0x60>
     8c8:	a5 c1       	rjmp	.+842    	; 0xc14 <__stack+0x315>
     8ca:	75 01       	movw	r14, r10
     8cc:	ee 0c       	add	r14, r14
     8ce:	ff 1c       	adc	r15, r15
     8d0:	0c 81       	ldd	r16, Y+4	; 0x04
     8d2:	1d 81       	ldd	r17, Y+5	; 0x05
     8d4:	0e 0d       	add	r16, r14
     8d6:	1f 1d       	adc	r17, r15
     8d8:	d8 01       	movw	r26, r16
     8da:	8c 91       	ld	r24, X
     8dc:	84 30       	cpi	r24, 0x04	; 4
     8de:	09 f4       	brne	.+2      	; 0x8e2 <qtm_key_sensors_process+0x78>
     8e0:	a2 c0       	rjmp	.+324    	; 0xa26 <__stack+0x127>
     8e2:	38 f4       	brcc	.+14     	; 0x8f2 <qtm_key_sensors_process+0x88>
     8e4:	82 30       	cpi	r24, 0x02	; 2
     8e6:	01 f1       	breq	.+64     	; 0x928 <__stack+0x29>
     8e8:	08 f0       	brcs	.+2      	; 0x8ec <qtm_key_sensors_process+0x82>
     8ea:	49 c0       	rjmp	.+146    	; 0x97e <__stack+0x7f>
     8ec:	81 30       	cpi	r24, 0x01	; 1
     8ee:	59 f0       	breq	.+22     	; 0x906 <__stack+0x7>
     8f0:	8a c1       	rjmp	.+788    	; 0xc06 <__stack+0x307>
     8f2:	85 38       	cpi	r24, 0x85	; 133
     8f4:	09 f4       	brne	.+2      	; 0x8f8 <qtm_key_sensors_process+0x8e>
     8f6:	c4 c0       	rjmp	.+392    	; 0xa80 <__stack+0x181>
     8f8:	86 38       	cpi	r24, 0x86	; 134
     8fa:	09 f4       	brne	.+2      	; 0x8fe <qtm_key_sensors_process+0x94>
     8fc:	f8 c0       	rjmp	.+496    	; 0xaee <__stack+0x1ef>
     8fe:	87 30       	cpi	r24, 0x07	; 7
     900:	09 f0       	breq	.+2      	; 0x904 <__stack+0x5>
     902:	81 c1       	rjmp	.+770    	; 0xc06 <__stack+0x307>
     904:	39 c1       	rjmp	.+626    	; 0xb78 <__stack+0x279>
     906:	d8 01       	movw	r26, r16
     908:	12 96       	adiw	r26, 0x02	; 2
     90a:	ed 91       	ld	r30, X+
     90c:	fc 91       	ld	r31, X
     90e:	13 97       	sbiw	r26, 0x03	; 3
     910:	80 81       	ld	r24, Z
     912:	8e 71       	andi	r24, 0x1E	; 30
     914:	09 f0       	breq	.+2      	; 0x918 <__stack+0x19>
     916:	69 c1       	rjmp	.+722    	; 0xbea <__stack+0x2eb>
     918:	4c 92       	st	X, r4
     91a:	8c 81       	ldd	r24, Y+4	; 0x04
     91c:	9d 81       	ldd	r25, Y+5	; 0x05
     91e:	fc 01       	movw	r30, r24
     920:	ee 0d       	add	r30, r14
     922:	ff 1d       	adc	r31, r15
     924:	51 82       	std	Z+1, r5	; 0x01
     926:	61 c1       	rjmp	.+706    	; 0xbea <__stack+0x2eb>
     928:	f8 01       	movw	r30, r16
     92a:	21 81       	ldd	r18, Z+1	; 0x01
     92c:	22 23       	and	r18, r18
     92e:	29 f1       	breq	.+74     	; 0x97a <__stack+0x7b>
     930:	02 80       	ldd	r0, Z+2	; 0x02
     932:	f3 81       	ldd	r31, Z+3	; 0x03
     934:	e0 2d       	mov	r30, r0
     936:	25 30       	cpi	r18, 0x05	; 5
     938:	20 f0       	brcs	.+8      	; 0x942 <__stack+0x43>
     93a:	81 81       	ldd	r24, Z+1	; 0x01
     93c:	92 81       	ldd	r25, Z+2	; 0x02
     93e:	d8 01       	movw	r26, r16
     940:	0e c0       	rjmp	.+28     	; 0x95e <__stack+0x5f>
     942:	d8 01       	movw	r26, r16
     944:	14 96       	adiw	r26, 0x04	; 4
     946:	8d 91       	ld	r24, X+
     948:	9c 91       	ld	r25, X
     94a:	15 97       	sbiw	r26, 0x05	; 5
     94c:	41 81       	ldd	r20, Z+1	; 0x01
     94e:	52 81       	ldd	r21, Z+2	; 0x02
     950:	84 17       	cp	r24, r20
     952:	95 07       	cpc	r25, r21
     954:	69 f0       	breq	.+26     	; 0x970 <__stack+0x71>
     956:	48 17       	cp	r20, r24
     958:	59 07       	cpc	r21, r25
     95a:	30 f4       	brcc	.+12     	; 0x968 <__stack+0x69>
     95c:	01 97       	sbiw	r24, 0x01	; 1
     95e:	15 96       	adiw	r26, 0x05	; 5
     960:	9c 93       	st	X, r25
     962:	8e 93       	st	-X, r24
     964:	14 97       	sbiw	r26, 0x04	; 4
     966:	04 c0       	rjmp	.+8      	; 0x970 <__stack+0x71>
     968:	01 96       	adiw	r24, 0x01	; 1
     96a:	f8 01       	movw	r30, r16
     96c:	95 83       	std	Z+5, r25	; 0x05
     96e:	84 83       	std	Z+4, r24	; 0x04
     970:	21 50       	subi	r18, 0x01	; 1
     972:	d8 01       	movw	r26, r16
     974:	11 96       	adiw	r26, 0x01	; 1
     976:	2c 93       	st	X, r18
     978:	38 c1       	rjmp	.+624    	; 0xbea <__stack+0x2eb>
     97a:	f8 01       	movw	r30, r16
     97c:	30 c1       	rjmp	.+608    	; 0xbde <__stack+0x2df>
     97e:	d8 01       	movw	r26, r16
     980:	14 96       	adiw	r26, 0x04	; 4
     982:	2d 91       	ld	r18, X+
     984:	3c 91       	ld	r19, X
     986:	15 97       	sbiw	r26, 0x05	; 5
     988:	12 96       	adiw	r26, 0x02	; 2
     98a:	8d 91       	ld	r24, X+
     98c:	9c 91       	ld	r25, X
     98e:	13 97       	sbiw	r26, 0x03	; 3
     990:	dc 01       	movw	r26, r24
     992:	11 96       	adiw	r26, 0x01	; 1
     994:	4d 91       	ld	r20, X+
     996:	5c 91       	ld	r21, X
     998:	12 97       	sbiw	r26, 0x02	; 2
     99a:	24 17       	cp	r18, r20
     99c:	35 07       	cpc	r19, r21
     99e:	09 f4       	brne	.+2      	; 0x9a2 <__stack+0xa3>
     9a0:	32 c1       	rjmp	.+612    	; 0xc06 <__stack+0x307>
     9a2:	8e 81       	ldd	r24, Y+6	; 0x06
     9a4:	9f 81       	ldd	r25, Y+7	; 0x07
     9a6:	42 17       	cp	r20, r18
     9a8:	53 07       	cpc	r21, r19
     9aa:	e0 f4       	brcc	.+56     	; 0x9e4 <__stack+0xe5>
     9ac:	24 1b       	sub	r18, r20
     9ae:	35 0b       	sbc	r19, r21
     9b0:	dc 01       	movw	r26, r24
     9b2:	aa 0d       	add	r26, r10
     9b4:	bb 1d       	adc	r27, r11
     9b6:	8c 91       	ld	r24, X
     9b8:	90 e0       	ldi	r25, 0x00	; 0
     9ba:	05 80       	ldd	r0, Z+5	; 0x05
     9bc:	02 c0       	rjmp	.+4      	; 0x9c2 <__stack+0xc3>
     9be:	95 95       	asr	r25
     9c0:	87 95       	ror	r24
     9c2:	0a 94       	dec	r0
     9c4:	e2 f7       	brpl	.-8      	; 0x9be <__stack+0xbf>
     9c6:	99 27       	eor	r25, r25
     9c8:	28 17       	cp	r18, r24
     9ca:	39 07       	cpc	r19, r25
     9cc:	08 f4       	brcc	.+2      	; 0x9d0 <__stack+0xd1>
     9ce:	1b c1       	rjmp	.+566    	; 0xc06 <__stack+0x307>
     9d0:	84 81       	ldd	r24, Z+4	; 0x04
     9d2:	88 23       	and	r24, r24
     9d4:	09 f4       	brne	.+2      	; 0x9d8 <__stack+0xd9>
     9d6:	17 c1       	rjmp	.+558    	; 0xc06 <__stack+0x307>
     9d8:	f8 01       	movw	r30, r16
     9da:	30 82       	st	Z, r3
     9dc:	ea 81       	ldd	r30, Y+2	; 0x02
     9de:	fb 81       	ldd	r31, Y+3	; 0x03
     9e0:	24 81       	ldd	r18, Z+4	; 0x04
     9e2:	1a c0       	rjmp	.+52     	; 0xa18 <__stack+0x119>
     9e4:	fc 01       	movw	r30, r24
     9e6:	ea 0d       	add	r30, r10
     9e8:	fb 1d       	adc	r31, r11
     9ea:	42 1b       	sub	r20, r18
     9ec:	53 0b       	sbc	r21, r19
     9ee:	80 81       	ld	r24, Z
     9f0:	90 e0       	ldi	r25, 0x00	; 0
     9f2:	48 17       	cp	r20, r24
     9f4:	59 07       	cpc	r21, r25
     9f6:	08 f4       	brcc	.+2      	; 0x9fa <__stack+0xfb>
     9f8:	06 c1       	rjmp	.+524    	; 0xc06 <__stack+0x307>
     9fa:	82 81       	ldd	r24, Z+2	; 0x02
     9fc:	88 23       	and	r24, r24
     9fe:	31 f0       	breq	.+12     	; 0xa0c <__stack+0x10d>
     a00:	b4 01       	movw	r22, r8
     a02:	ce 01       	movw	r24, r28
     a04:	0e 94 a2 03 	call	0x744	; 0x744 <check_for_aks_block>
     a08:	81 11       	cpse	r24, r1
     a0a:	fd c0       	rjmp	.+506    	; 0xc06 <__stack+0x307>
     a0c:	e4 e0       	ldi	r30, 0x04	; 4
     a0e:	d8 01       	movw	r26, r16
     a10:	ec 93       	st	X, r30
     a12:	ea 81       	ldd	r30, Y+2	; 0x02
     a14:	fb 81       	ldd	r31, Y+3	; 0x03
     a16:	22 81       	ldd	r18, Z+2	; 0x02
     a18:	8c 81       	ldd	r24, Y+4	; 0x04
     a1a:	9d 81       	ldd	r25, Y+5	; 0x05
     a1c:	fc 01       	movw	r30, r24
     a1e:	ee 0d       	add	r30, r14
     a20:	ff 1d       	adc	r31, r15
     a22:	21 83       	std	Z+1, r18	; 0x01
     a24:	e2 c0       	rjmp	.+452    	; 0xbea <__stack+0x2eb>
     a26:	d8 01       	movw	r26, r16
     a28:	14 96       	adiw	r26, 0x04	; 4
     a2a:	2d 91       	ld	r18, X+
     a2c:	3c 91       	ld	r19, X
     a2e:	15 97       	sbiw	r26, 0x05	; 5
     a30:	12 96       	adiw	r26, 0x02	; 2
     a32:	ed 91       	ld	r30, X+
     a34:	fc 91       	ld	r31, X
     a36:	13 97       	sbiw	r26, 0x03	; 3
     a38:	81 81       	ldd	r24, Z+1	; 0x01
     a3a:	92 81       	ldd	r25, Z+2	; 0x02
     a3c:	82 17       	cp	r24, r18
     a3e:	93 07       	cpc	r25, r19
     a40:	10 f4       	brcc	.+4      	; 0xa46 <__stack+0x147>
     a42:	cc 92       	st	X, r12
     a44:	d7 c0       	rjmp	.+430    	; 0xbf4 <__stack+0x2f5>
     a46:	ee 81       	ldd	r30, Y+6	; 0x06
     a48:	ff 81       	ldd	r31, Y+7	; 0x07
     a4a:	ea 0d       	add	r30, r10
     a4c:	fb 1d       	adc	r31, r11
     a4e:	82 1b       	sub	r24, r18
     a50:	93 0b       	sbc	r25, r19
     a52:	20 81       	ld	r18, Z
     a54:	30 e0       	ldi	r19, 0x00	; 0
     a56:	28 17       	cp	r18, r24
     a58:	39 07       	cpc	r19, r25
     a5a:	08 f0       	brcs	.+2      	; 0xa5e <__stack+0x15f>
     a5c:	c9 c0       	rjmp	.+402    	; 0xbf0 <__stack+0x2f1>
     a5e:	82 81       	ldd	r24, Z+2	; 0x02
     a60:	88 23       	and	r24, r24
     a62:	31 f0       	breq	.+12     	; 0xa70 <__stack+0x171>
     a64:	b4 01       	movw	r22, r8
     a66:	ce 01       	movw	r24, r28
     a68:	0e 94 a2 03 	call	0x744	; 0x744 <check_for_aks_block>
     a6c:	81 11       	cpse	r24, r1
     a6e:	cb c0       	rjmp	.+406    	; 0xc06 <__stack+0x307>
     a70:	f8 01       	movw	r30, r16
     a72:	81 81       	ldd	r24, Z+1	; 0x01
     a74:	88 23       	and	r24, r24
     a76:	09 f4       	brne	.+2      	; 0xa7a <__stack+0x17b>
     a78:	68 c0       	rjmp	.+208    	; 0xb4a <__stack+0x24b>
     a7a:	81 50       	subi	r24, 0x01	; 1
     a7c:	81 83       	std	Z+1, r24	; 0x01
     a7e:	b5 c0       	rjmp	.+362    	; 0xbea <__stack+0x2eb>
     a80:	a8 81       	ld	r26, Y
     a82:	b9 81       	ldd	r27, Y+1	; 0x01
     a84:	80 85       	ldd	r24, Z+8	; 0x08
     a86:	13 96       	adiw	r26, 0x03	; 3
     a88:	8c 93       	st	X, r24
     a8a:	ec 81       	ldd	r30, Y+4	; 0x04
     a8c:	fd 81       	ldd	r31, Y+5	; 0x05
     a8e:	ee 0d       	add	r30, r14
     a90:	ff 1d       	adc	r31, r15
     a92:	44 81       	ldd	r20, Z+4	; 0x04
     a94:	55 81       	ldd	r21, Z+5	; 0x05
     a96:	a2 81       	ldd	r26, Z+2	; 0x02
     a98:	b3 81       	ldd	r27, Z+3	; 0x03
     a9a:	11 96       	adiw	r26, 0x01	; 1
     a9c:	8d 91       	ld	r24, X+
     a9e:	9c 91       	ld	r25, X
     aa0:	12 97       	sbiw	r26, 0x02	; 2
     aa2:	84 17       	cp	r24, r20
     aa4:	95 07       	cpc	r25, r21
     aa6:	c0 f0       	brcs	.+48     	; 0xad8 <__stack+0x1d9>
     aa8:	ae 81       	ldd	r26, Y+6	; 0x06
     aaa:	bf 81       	ldd	r27, Y+7	; 0x07
     aac:	aa 0d       	add	r26, r10
     aae:	bb 1d       	adc	r27, r11
     ab0:	6c 91       	ld	r22, X
     ab2:	26 2f       	mov	r18, r22
     ab4:	30 e0       	ldi	r19, 0x00	; 0
     ab6:	11 96       	adiw	r26, 0x01	; 1
     ab8:	7c 91       	ld	r23, X
     aba:	7f 5f       	subi	r23, 0xFF	; 255
     abc:	02 c0       	rjmp	.+4      	; 0xac2 <__stack+0x1c3>
     abe:	35 95       	asr	r19
     ac0:	27 95       	ror	r18
     ac2:	7a 95       	dec	r23
     ac4:	e2 f7       	brpl	.-8      	; 0xabe <__stack+0x1bf>
     ac6:	84 1b       	sub	r24, r20
     ac8:	95 0b       	sbc	r25, r21
     aca:	62 1b       	sub	r22, r18
     acc:	26 2f       	mov	r18, r22
     ace:	30 e0       	ldi	r19, 0x00	; 0
     ad0:	28 17       	cp	r18, r24
     ad2:	39 07       	cpc	r19, r25
     ad4:	08 f4       	brcc	.+2      	; 0xad8 <__stack+0x1d9>
     ad6:	95 c0       	rjmp	.+298    	; 0xc02 <__stack+0x303>
     ad8:	70 82       	st	Z, r7
     ada:	ea 81       	ldd	r30, Y+2	; 0x02
     adc:	fb 81       	ldd	r31, Y+3	; 0x03
     ade:	22 81       	ldd	r18, Z+2	; 0x02
     ae0:	8c 81       	ldd	r24, Y+4	; 0x04
     ae2:	9d 81       	ldd	r25, Y+5	; 0x05
     ae4:	fc 01       	movw	r30, r24
     ae6:	ee 0d       	add	r30, r14
     ae8:	ff 1d       	adc	r31, r15
     aea:	21 83       	std	Z+1, r18	; 0x01
     aec:	42 c0       	rjmp	.+132    	; 0xb72 <__stack+0x273>
     aee:	d8 01       	movw	r26, r16
     af0:	14 96       	adiw	r26, 0x04	; 4
     af2:	6d 91       	ld	r22, X+
     af4:	7c 91       	ld	r23, X
     af6:	15 97       	sbiw	r26, 0x05	; 5
     af8:	12 96       	adiw	r26, 0x02	; 2
     afa:	ed 91       	ld	r30, X+
     afc:	fc 91       	ld	r31, X
     afe:	13 97       	sbiw	r26, 0x03	; 3
     b00:	21 81       	ldd	r18, Z+1	; 0x01
     b02:	32 81       	ldd	r19, Z+2	; 0x02
     b04:	26 17       	cp	r18, r22
     b06:	37 07       	cpc	r19, r23
     b08:	58 f4       	brcc	.+22     	; 0xb20 <__stack+0x221>
     b0a:	11 96       	adiw	r26, 0x01	; 1
     b0c:	8c 91       	ld	r24, X
     b0e:	11 97       	sbiw	r26, 0x01	; 1
     b10:	81 11       	cpse	r24, r1
     b12:	02 c0       	rjmp	.+4      	; 0xb18 <__stack+0x219>
     b14:	cc 92       	st	X, r12
     b16:	75 c0       	rjmp	.+234    	; 0xc02 <__stack+0x303>
     b18:	81 50       	subi	r24, 0x01	; 1
     b1a:	f8 01       	movw	r30, r16
     b1c:	81 83       	std	Z+1, r24	; 0x01
     b1e:	71 c0       	rjmp	.+226    	; 0xc02 <__stack+0x303>
     b20:	ee 81       	ldd	r30, Y+6	; 0x06
     b22:	ff 81       	ldd	r31, Y+7	; 0x07
     b24:	ea 0d       	add	r30, r10
     b26:	fb 1d       	adc	r31, r11
     b28:	80 81       	ld	r24, Z
     b2a:	48 2f       	mov	r20, r24
     b2c:	50 e0       	ldi	r21, 0x00	; 0
     b2e:	91 81       	ldd	r25, Z+1	; 0x01
     b30:	9f 5f       	subi	r25, 0xFF	; 255
     b32:	02 c0       	rjmp	.+4      	; 0xb38 <__stack+0x239>
     b34:	55 95       	asr	r21
     b36:	47 95       	ror	r20
     b38:	9a 95       	dec	r25
     b3a:	e2 f7       	brpl	.-8      	; 0xb34 <__stack+0x235>
     b3c:	26 1b       	sub	r18, r22
     b3e:	37 0b       	sbc	r19, r23
     b40:	84 1b       	sub	r24, r20
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	82 17       	cp	r24, r18
     b46:	93 07       	cpc	r25, r19
     b48:	60 f4       	brcc	.+24     	; 0xb62 <__stack+0x263>
     b4a:	d8 01       	movw	r26, r16
     b4c:	6c 92       	st	X, r6
     b4e:	ea 81       	ldd	r30, Y+2	; 0x02
     b50:	fb 81       	ldd	r31, Y+3	; 0x03
     b52:	23 81       	ldd	r18, Z+3	; 0x03
     b54:	8c 81       	ldd	r24, Y+4	; 0x04
     b56:	9d 81       	ldd	r25, Y+5	; 0x05
     b58:	fc 01       	movw	r30, r24
     b5a:	ee 0d       	add	r30, r14
     b5c:	ff 1d       	adc	r31, r15
     b5e:	21 83       	std	Z+1, r18	; 0x01
     b60:	50 c0       	rjmp	.+160    	; 0xc02 <__stack+0x303>
     b62:	f8 01       	movw	r30, r16
     b64:	81 81       	ldd	r24, Z+1	; 0x01
     b66:	81 11       	cpse	r24, r1
     b68:	02 c0       	rjmp	.+4      	; 0xb6e <__stack+0x26f>
     b6a:	c0 82       	st	Z, r12
     b6c:	4a c0       	rjmp	.+148    	; 0xc02 <__stack+0x303>
     b6e:	81 50       	subi	r24, 0x01	; 1
     b70:	81 83       	std	Z+1, r24	; 0x01
     b72:	22 24       	eor	r2, r2
     b74:	23 94       	inc	r2
     b76:	39 c0       	rjmp	.+114    	; 0xbea <__stack+0x2eb>
     b78:	d8 01       	movw	r26, r16
     b7a:	14 96       	adiw	r26, 0x04	; 4
     b7c:	2d 91       	ld	r18, X+
     b7e:	3c 91       	ld	r19, X
     b80:	15 97       	sbiw	r26, 0x05	; 5
     b82:	12 96       	adiw	r26, 0x02	; 2
     b84:	8d 91       	ld	r24, X+
     b86:	9c 91       	ld	r25, X
     b88:	13 97       	sbiw	r26, 0x03	; 3
     b8a:	dc 01       	movw	r26, r24
     b8c:	11 96       	adiw	r26, 0x01	; 1
     b8e:	8d 91       	ld	r24, X+
     b90:	9c 91       	ld	r25, X
     b92:	12 97       	sbiw	r26, 0x02	; 2
     b94:	82 17       	cp	r24, r18
     b96:	93 07       	cpc	r25, r19
     b98:	58 f5       	brcc	.+86     	; 0xbf0 <__stack+0x2f1>
     b9a:	28 1b       	sub	r18, r24
     b9c:	39 0b       	sbc	r19, r25
     b9e:	ae 81       	ldd	r26, Y+6	; 0x06
     ba0:	bf 81       	ldd	r27, Y+7	; 0x07
     ba2:	aa 0d       	add	r26, r10
     ba4:	bb 1d       	adc	r27, r11
     ba6:	8c 91       	ld	r24, X
     ba8:	90 e0       	ldi	r25, 0x00	; 0
     baa:	05 80       	ldd	r0, Z+5	; 0x05
     bac:	02 c0       	rjmp	.+4      	; 0xbb2 <__stack+0x2b3>
     bae:	95 95       	asr	r25
     bb0:	87 95       	ror	r24
     bb2:	0a 94       	dec	r0
     bb4:	e2 f7       	brpl	.-8      	; 0xbae <__stack+0x2af>
     bb6:	99 27       	eor	r25, r25
     bb8:	28 17       	cp	r18, r24
     bba:	39 07       	cpc	r19, r25
     bbc:	c8 f0       	brcs	.+50     	; 0xbf0 <__stack+0x2f1>
     bbe:	d8 01       	movw	r26, r16
     bc0:	11 96       	adiw	r26, 0x01	; 1
     bc2:	8c 91       	ld	r24, X
     bc4:	11 97       	sbiw	r26, 0x01	; 1
     bc6:	81 11       	cpse	r24, r1
     bc8:	0c c0       	rjmp	.+24     	; 0xbe2 <__stack+0x2e3>
     bca:	e1 e0       	ldi	r30, 0x01	; 1
     bcc:	ec 93       	st	X, r30
     bce:	8c 81       	ldd	r24, Y+4	; 0x04
     bd0:	9d 81       	ldd	r25, Y+5	; 0x05
     bd2:	fc 01       	movw	r30, r24
     bd4:	ee 0d       	add	r30, r14
     bd6:	ff 1d       	adc	r31, r15
     bd8:	02 80       	ldd	r0, Z+2	; 0x02
     bda:	f3 81       	ldd	r31, Z+3	; 0x03
     bdc:	e0 2d       	mov	r30, r0
     bde:	c0 82       	st	Z, r12
     be0:	12 c0       	rjmp	.+36     	; 0xc06 <__stack+0x307>
     be2:	81 50       	subi	r24, 0x01	; 1
     be4:	d8 01       	movw	r26, r16
     be6:	11 96       	adiw	r26, 0x01	; 1
     be8:	8c 93       	st	X, r24
     bea:	dd 24       	eor	r13, r13
     bec:	d3 94       	inc	r13
     bee:	0b c0       	rjmp	.+22     	; 0xc06 <__stack+0x307>
     bf0:	f8 01       	movw	r30, r16
     bf2:	c0 82       	st	Z, r12
     bf4:	8c 81       	ldd	r24, Y+4	; 0x04
     bf6:	9d 81       	ldd	r25, Y+5	; 0x05
     bf8:	fc 01       	movw	r30, r24
     bfa:	ee 0d       	add	r30, r14
     bfc:	ff 1d       	adc	r31, r15
     bfe:	11 82       	std	Z+1, r1	; 0x01
     c00:	02 c0       	rjmp	.+4      	; 0xc06 <__stack+0x307>
     c02:	22 24       	eor	r2, r2
     c04:	23 94       	inc	r2
     c06:	ff ef       	ldi	r31, 0xFF	; 255
     c08:	8f 1a       	sub	r8, r31
     c0a:	9f 0a       	sbc	r9, r31
     c0c:	83 e0       	ldi	r24, 0x03	; 3
     c0e:	a8 0e       	add	r10, r24
     c10:	b1 1c       	adc	r11, r1
     c12:	53 ce       	rjmp	.-858    	; 0x8ba <qtm_key_sensors_process+0x50>
     c14:	e8 81       	ld	r30, Y
     c16:	f9 81       	ldd	r31, Y+1	; 0x01
     c18:	80 81       	ld	r24, Z
     c1a:	87 ff       	sbrs	r24, 7
     c1c:	23 c0       	rjmp	.+70     	; 0xc64 <__stack+0x365>
     c1e:	40 e0       	ldi	r20, 0x00	; 0
     c20:	50 e0       	ldi	r21, 0x00	; 0
     c22:	20 e0       	ldi	r18, 0x00	; 0
     c24:	30 e0       	ldi	r19, 0x00	; 0
     c26:	ea 81       	ldd	r30, Y+2	; 0x02
     c28:	fb 81       	ldd	r31, Y+3	; 0x03
     c2a:	80 81       	ld	r24, Z
     c2c:	91 81       	ldd	r25, Z+1	; 0x01
     c2e:	28 17       	cp	r18, r24
     c30:	39 07       	cpc	r19, r25
     c32:	98 f4       	brcc	.+38     	; 0xc5a <__stack+0x35b>
     c34:	ec 81       	ldd	r30, Y+4	; 0x04
     c36:	fd 81       	ldd	r31, Y+5	; 0x05
     c38:	e4 0f       	add	r30, r20
     c3a:	f5 1f       	adc	r31, r21
     c3c:	a2 81       	ldd	r26, Z+2	; 0x02
     c3e:	b3 81       	ldd	r27, Z+3	; 0x03
     c40:	8c 91       	ld	r24, X
     c42:	80 fd       	sbrc	r24, 0
     c44:	05 c0       	rjmp	.+10     	; 0xc50 <__stack+0x351>
     c46:	90 81       	ld	r25, Z
     c48:	97 7f       	andi	r25, 0xF7	; 247
     c4a:	11 f0       	breq	.+4      	; 0xc50 <__stack+0x351>
     c4c:	81 60       	ori	r24, 0x01	; 1
     c4e:	8c 93       	st	X, r24
     c50:	2f 5f       	subi	r18, 0xFF	; 255
     c52:	3f 4f       	sbci	r19, 0xFF	; 255
     c54:	4a 5f       	subi	r20, 0xFA	; 250
     c56:	5f 4f       	sbci	r21, 0xFF	; 255
     c58:	e6 cf       	rjmp	.-52     	; 0xc26 <__stack+0x327>
     c5a:	e8 81       	ld	r30, Y
     c5c:	f9 81       	ldd	r31, Y+1	; 0x01
     c5e:	80 81       	ld	r24, Z
     c60:	8f 77       	andi	r24, 0x7F	; 127
     c62:	80 83       	st	Z, r24
     c64:	d1 10       	cpse	r13, r1
     c66:	07 c0       	rjmp	.+14     	; 0xc76 <__stack+0x377>
     c68:	e8 81       	ld	r30, Y
     c6a:	f9 81       	ldd	r31, Y+1	; 0x01
     c6c:	21 10       	cpse	r2, r1
     c6e:	6f c0       	rjmp	.+222    	; 0xd4e <__stack+0x44f>
     c70:	80 81       	ld	r24, Z
     c72:	8e 7f       	andi	r24, 0xFE	; 254
     c74:	6e c0       	rjmp	.+220    	; 0xd52 <__stack+0x453>
     c76:	ea 81       	ldd	r30, Y+2	; 0x02
     c78:	fb 81       	ldd	r31, Y+3	; 0x03
     c7a:	81 85       	ldd	r24, Z+9	; 0x09
     c7c:	88 23       	and	r24, r24
     c7e:	a1 f3       	breq	.-24     	; 0xc68 <__stack+0x369>
     c80:	e8 81       	ld	r30, Y
     c82:	f9 81       	ldd	r31, Y+1	; 0x01
     c84:	80 81       	ld	r24, Z
     c86:	80 68       	ori	r24, 0x80	; 128
     c88:	80 83       	st	Z, r24
     c8a:	ea 81       	ldd	r30, Y+2	; 0x02
     c8c:	fb 81       	ldd	r31, Y+3	; 0x03
     c8e:	81 85       	ldd	r24, Z+9	; 0x09
     c90:	81 30       	cpi	r24, 0x01	; 1
     c92:	51 f7       	brne	.-44     	; 0xc68 <__stack+0x369>
     c94:	40 e0       	ldi	r20, 0x00	; 0
     c96:	50 e0       	ldi	r21, 0x00	; 0
     c98:	20 e0       	ldi	r18, 0x00	; 0
     c9a:	30 e0       	ldi	r19, 0x00	; 0
     c9c:	96 e0       	ldi	r25, 0x06	; 6
     c9e:	d9 2e       	mov	r13, r25
     ca0:	ea 81       	ldd	r30, Y+2	; 0x02
     ca2:	fb 81       	ldd	r31, Y+3	; 0x03
     ca4:	60 81       	ld	r22, Z
     ca6:	71 81       	ldd	r23, Z+1	; 0x01
     ca8:	26 17       	cp	r18, r22
     caa:	37 07       	cpc	r19, r23
     cac:	e8 f6       	brcc	.-70     	; 0xc68 <__stack+0x369>
     cae:	0c 81       	ldd	r16, Y+4	; 0x04
     cb0:	1d 81       	ldd	r17, Y+5	; 0x05
     cb2:	fa 01       	movw	r30, r20
     cb4:	ee 0f       	add	r30, r30
     cb6:	ff 1f       	adc	r31, r31
     cb8:	e0 0f       	add	r30, r16
     cba:	f1 1f       	adc	r31, r17
     cbc:	80 81       	ld	r24, Z
     cbe:	98 2f       	mov	r25, r24
     cc0:	97 7f       	andi	r25, 0xF7	; 247
     cc2:	a1 f1       	breq	.+104    	; 0xd2c <__stack+0x42d>
     cc4:	85 38       	cpi	r24, 0x85	; 133
     cc6:	11 f0       	breq	.+4      	; 0xccc <__stack+0x3cd>
     cc8:	83 30       	cpi	r24, 0x03	; 3
     cca:	b1 f5       	brne	.+108    	; 0xd38 <__stack+0x439>
     ccc:	ee 80       	ldd	r14, Y+6	; 0x06
     cce:	ff 80       	ldd	r15, Y+7	; 0x07
     cd0:	d7 01       	movw	r26, r14
     cd2:	a4 0f       	add	r26, r20
     cd4:	b5 1f       	adc	r27, r21
     cd6:	12 96       	adiw	r26, 0x02	; 2
     cd8:	bc 90       	ld	r11, X
     cda:	bb 20       	and	r11, r11
     cdc:	39 f1       	breq	.+78     	; 0xd2c <__stack+0x42d>
     cde:	80 e0       	ldi	r24, 0x00	; 0
     ce0:	90 e0       	ldi	r25, 0x00	; 0
     ce2:	c1 2c       	mov	r12, r1
     ce4:	86 17       	cp	r24, r22
     ce6:	97 07       	cpc	r25, r23
     ce8:	f8 f4       	brcc	.+62     	; 0xd28 <__stack+0x429>
     cea:	28 17       	cp	r18, r24
     cec:	39 07       	cpc	r19, r25
     cee:	d1 f0       	breq	.+52     	; 0xd24 <__stack+0x425>
     cf0:	d8 9e       	mul	r13, r24
     cf2:	d0 01       	movw	r26, r0
     cf4:	d9 9e       	mul	r13, r25
     cf6:	b0 0d       	add	r27, r0
     cf8:	11 24       	eor	r1, r1
     cfa:	a0 0f       	add	r26, r16
     cfc:	b1 1f       	adc	r27, r17
     cfe:	ac 91       	ld	r26, X
     d00:	a4 30       	cpi	r26, 0x04	; 4
     d02:	11 f0       	breq	.+4      	; 0xd08 <__stack+0x409>
     d04:	a6 38       	cpi	r26, 0x86	; 134
     d06:	71 f4       	brne	.+28     	; 0xd24 <__stack+0x425>
     d08:	dc 01       	movw	r26, r24
     d0a:	aa 0f       	add	r26, r26
     d0c:	bb 1f       	adc	r27, r27
     d0e:	a8 0f       	add	r26, r24
     d10:	b9 1f       	adc	r27, r25
     d12:	ae 0d       	add	r26, r14
     d14:	bf 1d       	adc	r27, r15
     d16:	12 96       	adiw	r26, 0x02	; 2
     d18:	ac 91       	ld	r26, X
     d1a:	ba 12       	cpse	r11, r26
     d1c:	03 c0       	rjmp	.+6      	; 0xd24 <__stack+0x425>
     d1e:	cb 01       	movw	r24, r22
     d20:	cc 24       	eor	r12, r12
     d22:	c3 94       	inc	r12
     d24:	01 96       	adiw	r24, 0x01	; 1
     d26:	de cf       	rjmp	.-68     	; 0xce4 <__stack+0x3e5>
     d28:	c1 10       	cpse	r12, r1
     d2a:	06 c0       	rjmp	.+12     	; 0xd38 <__stack+0x439>
     d2c:	02 80       	ldd	r0, Z+2	; 0x02
     d2e:	f3 81       	ldd	r31, Z+3	; 0x03
     d30:	e0 2d       	mov	r30, r0
     d32:	80 81       	ld	r24, Z
     d34:	8e 7f       	andi	r24, 0xFE	; 254
     d36:	05 c0       	rjmp	.+10     	; 0xd42 <__stack+0x443>
     d38:	02 80       	ldd	r0, Z+2	; 0x02
     d3a:	f3 81       	ldd	r31, Z+3	; 0x03
     d3c:	e0 2d       	mov	r30, r0
     d3e:	80 81       	ld	r24, Z
     d40:	81 60       	ori	r24, 0x01	; 1
     d42:	80 83       	st	Z, r24
     d44:	2f 5f       	subi	r18, 0xFF	; 255
     d46:	3f 4f       	sbci	r19, 0xFF	; 255
     d48:	4d 5f       	subi	r20, 0xFD	; 253
     d4a:	5f 4f       	sbci	r21, 0xFF	; 255
     d4c:	a9 cf       	rjmp	.-174    	; 0xca0 <__stack+0x3a1>
     d4e:	80 81       	ld	r24, Z
     d50:	81 60       	ori	r24, 0x01	; 1
     d52:	80 83       	st	Z, r24
     d54:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <qtm_local_ms_timecount>
     d58:	90 91 64 01 	lds	r25, 0x0164	; 0x800164 <qtm_local_ms_timecount+0x1>
     d5c:	e8 81       	ld	r30, Y
     d5e:	f9 81       	ldd	r31, Y+1	; 0x01
     d60:	21 81       	ldd	r18, Z+1	; 0x01
     d62:	32 81       	ldd	r19, Z+2	; 0x02
     d64:	a9 01       	movw	r20, r18
     d66:	48 53       	subi	r20, 0x38	; 56
     d68:	5f 4f       	sbci	r21, 0xFF	; 255
     d6a:	48 17       	cp	r20, r24
     d6c:	59 07       	cpc	r21, r25
     d6e:	38 f4       	brcc	.+14     	; 0xd7e <__stack+0x47f>
     d70:	82 1b       	sub	r24, r18
     d72:	93 0b       	sbc	r25, r19
     d74:	aa 24       	eor	r10, r10
     d76:	a3 94       	inc	r10
     d78:	a3 e0       	ldi	r26, 0x03	; 3
     d7a:	ba 2e       	mov	r11, r26
     d7c:	44 c0       	rjmp	.+136    	; 0xe06 <__stack+0x507>
     d7e:	82 17       	cp	r24, r18
     d80:	93 07       	cpc	r25, r19
     d82:	10 f0       	brcs	.+4      	; 0xd88 <__stack+0x489>
     d84:	80 e0       	ldi	r24, 0x00	; 0
     d86:	04 c1       	rjmp	.+520    	; 0xf90 <__stack+0x691>
     d88:	82 1b       	sub	r24, r18
     d8a:	93 0b       	sbc	r25, r19
     d8c:	01 97       	sbiw	r24, 0x01	; 1
     d8e:	89 3c       	cpi	r24, 0xC9	; 201
     d90:	91 05       	cpc	r25, r1
     d92:	c0 f3       	brcs	.-16     	; 0xd84 <__stack+0x485>
     d94:	ef cf       	rjmp	.-34     	; 0xd74 <__stack+0x475>
     d96:	88 5c       	subi	r24, 0xC8	; 200
     d98:	91 09       	sbc	r25, r1
     d9a:	e8 81       	ld	r30, Y
     d9c:	f9 81       	ldd	r31, Y+1	; 0x01
     d9e:	21 81       	ldd	r18, Z+1	; 0x01
     da0:	32 81       	ldd	r19, Z+2	; 0x02
     da2:	28 53       	subi	r18, 0x38	; 56
     da4:	3f 4f       	sbci	r19, 0xFF	; 255
     da6:	32 83       	std	Z+2, r19	; 0x02
     da8:	21 83       	std	Z+1, r18	; 0x01
     daa:	23 81       	ldd	r18, Z+3	; 0x03
     dac:	21 11       	cpse	r18, r1
     dae:	96 c0       	rjmp	.+300    	; 0xedc <__stack+0x5dd>
     db0:	24 81       	ldd	r18, Z+4	; 0x04
     db2:	22 23       	and	r18, r18
     db4:	11 f0       	breq	.+4      	; 0xdba <__stack+0x4bb>
     db6:	21 50       	subi	r18, 0x01	; 1
     db8:	24 83       	std	Z+4, r18	; 0x04
     dba:	e8 81       	ld	r30, Y
     dbc:	f9 81       	ldd	r31, Y+1	; 0x01
     dbe:	25 81       	ldd	r18, Z+5	; 0x05
     dc0:	22 23       	and	r18, r18
     dc2:	11 f0       	breq	.+4      	; 0xdc8 <__stack+0x4c9>
     dc4:	21 50       	subi	r18, 0x01	; 1
     dc6:	25 83       	std	Z+5, r18	; 0x05
     dc8:	8a 80       	ldd	r8, Y+2	; 0x02
     dca:	9b 80       	ldd	r9, Y+3	; 0x03
     dcc:	d4 01       	movw	r26, r8
     dce:	16 96       	adiw	r26, 0x06	; 6
     dd0:	2c 91       	ld	r18, X
     dd2:	16 97       	sbiw	r26, 0x06	; 6
     dd4:	21 11       	cpse	r18, r1
     dd6:	1b c0       	rjmp	.+54     	; 0xe0e <__stack+0x50f>
     dd8:	8a 80       	ldd	r8, Y+2	; 0x02
     dda:	9b 80       	ldd	r9, Y+3	; 0x03
     ddc:	f4 01       	movw	r30, r8
     dde:	27 81       	ldd	r18, Z+7	; 0x07
     de0:	21 11       	cpse	r18, r1
     de2:	48 c0       	rjmp	.+144    	; 0xe74 <__stack+0x575>
     de4:	ea 81       	ldd	r30, Y+2	; 0x02
     de6:	fb 81       	ldd	r31, Y+3	; 0x03
     de8:	23 81       	ldd	r18, Z+3	; 0x03
     dea:	22 23       	and	r18, r18
     dec:	61 f0       	breq	.+24     	; 0xe06 <__stack+0x507>
     dee:	20 e0       	ldi	r18, 0x00	; 0
     df0:	30 e0       	ldi	r19, 0x00	; 0
     df2:	a0 e0       	ldi	r26, 0x00	; 0
     df4:	b0 e0       	ldi	r27, 0x00	; 0
     df6:	ea 81       	ldd	r30, Y+2	; 0x02
     df8:	fb 81       	ldd	r31, Y+3	; 0x03
     dfa:	40 81       	ld	r20, Z
     dfc:	51 81       	ldd	r21, Z+1	; 0x01
     dfe:	a4 17       	cp	r26, r20
     e00:	b5 07       	cpc	r27, r21
     e02:	08 f4       	brcc	.+2      	; 0xe06 <__stack+0x507>
     e04:	6e c0       	rjmp	.+220    	; 0xee2 <__stack+0x5e3>
     e06:	89 3c       	cpi	r24, 0xC9	; 201
     e08:	91 05       	cpc	r25, r1
     e0a:	28 f6       	brcc	.-118    	; 0xd96 <__stack+0x497>
     e0c:	bb cf       	rjmp	.-138    	; 0xd84 <__stack+0x485>
     e0e:	08 81       	ld	r16, Y
     e10:	19 81       	ldd	r17, Y+1	; 0x01
     e12:	f8 01       	movw	r30, r16
     e14:	24 81       	ldd	r18, Z+4	; 0x04
     e16:	21 11       	cpse	r18, r1
     e18:	df cf       	rjmp	.-66     	; 0xdd8 <__stack+0x4d9>
     e1a:	ed 90       	ld	r14, X+
     e1c:	fc 90       	ld	r15, X
     e1e:	60 e0       	ldi	r22, 0x00	; 0
     e20:	70 e0       	ldi	r23, 0x00	; 0
     e22:	40 e0       	ldi	r20, 0x00	; 0
     e24:	50 e0       	ldi	r21, 0x00	; 0
     e26:	4e 15       	cp	r20, r14
     e28:	5f 05       	cpc	r21, r15
     e2a:	f1 f0       	breq	.+60     	; 0xe68 <__stack+0x569>
     e2c:	ec 81       	ldd	r30, Y+4	; 0x04
     e2e:	fd 81       	ldd	r31, Y+5	; 0x05
     e30:	e6 0f       	add	r30, r22
     e32:	f7 1f       	adc	r31, r23
     e34:	20 81       	ld	r18, Z
     e36:	23 30       	cpi	r18, 0x03	; 3
     e38:	11 f0       	breq	.+4      	; 0xe3e <__stack+0x53f>
     e3a:	28 30       	cpi	r18, 0x08	; 8
     e3c:	81 f4       	brne	.+32     	; 0xe5e <__stack+0x55f>
     e3e:	24 81       	ldd	r18, Z+4	; 0x04
     e40:	35 81       	ldd	r19, Z+5	; 0x05
     e42:	c2 80       	ldd	r12, Z+2	; 0x02
     e44:	d3 80       	ldd	r13, Z+3	; 0x03
     e46:	d6 01       	movw	r26, r12
     e48:	11 96       	adiw	r26, 0x01	; 1
     e4a:	cd 90       	ld	r12, X+
     e4c:	dc 90       	ld	r13, X
     e4e:	12 97       	sbiw	r26, 0x02	; 2
     e50:	2c 15       	cp	r18, r12
     e52:	3d 05       	cpc	r19, r13
     e54:	20 f4       	brcc	.+8      	; 0xe5e <__stack+0x55f>
     e56:	2f 5f       	subi	r18, 0xFF	; 255
     e58:	3f 4f       	sbci	r19, 0xFF	; 255
     e5a:	35 83       	std	Z+5, r19	; 0x05
     e5c:	24 83       	std	Z+4, r18	; 0x04
     e5e:	4f 5f       	subi	r20, 0xFF	; 255
     e60:	5f 4f       	sbci	r21, 0xFF	; 255
     e62:	6a 5f       	subi	r22, 0xFA	; 250
     e64:	7f 4f       	sbci	r23, 0xFF	; 255
     e66:	df cf       	rjmp	.-66     	; 0xe26 <__stack+0x527>
     e68:	f4 01       	movw	r30, r8
     e6a:	26 81       	ldd	r18, Z+6	; 0x06
     e6c:	d8 01       	movw	r26, r16
     e6e:	14 96       	adiw	r26, 0x04	; 4
     e70:	2c 93       	st	X, r18
     e72:	b2 cf       	rjmp	.-156    	; 0xdd8 <__stack+0x4d9>
     e74:	08 81       	ld	r16, Y
     e76:	19 81       	ldd	r17, Y+1	; 0x01
     e78:	d8 01       	movw	r26, r16
     e7a:	15 96       	adiw	r26, 0x05	; 5
     e7c:	2c 91       	ld	r18, X
     e7e:	21 11       	cpse	r18, r1
     e80:	b1 cf       	rjmp	.-158    	; 0xde4 <__stack+0x4e5>
     e82:	e0 80       	ld	r14, Z
     e84:	f1 80       	ldd	r15, Z+1	; 0x01
     e86:	60 e0       	ldi	r22, 0x00	; 0
     e88:	70 e0       	ldi	r23, 0x00	; 0
     e8a:	40 e0       	ldi	r20, 0x00	; 0
     e8c:	50 e0       	ldi	r21, 0x00	; 0
     e8e:	4e 15       	cp	r20, r14
     e90:	5f 05       	cpc	r21, r15
     e92:	f1 f0       	breq	.+60     	; 0xed0 <__stack+0x5d1>
     e94:	ec 81       	ldd	r30, Y+4	; 0x04
     e96:	fd 81       	ldd	r31, Y+5	; 0x05
     e98:	e6 0f       	add	r30, r22
     e9a:	f7 1f       	adc	r31, r23
     e9c:	20 81       	ld	r18, Z
     e9e:	23 30       	cpi	r18, 0x03	; 3
     ea0:	11 f0       	breq	.+4      	; 0xea6 <__stack+0x5a7>
     ea2:	28 30       	cpi	r18, 0x08	; 8
     ea4:	81 f4       	brne	.+32     	; 0xec6 <__stack+0x5c7>
     ea6:	24 81       	ldd	r18, Z+4	; 0x04
     ea8:	35 81       	ldd	r19, Z+5	; 0x05
     eaa:	c2 80       	ldd	r12, Z+2	; 0x02
     eac:	d3 80       	ldd	r13, Z+3	; 0x03
     eae:	d6 01       	movw	r26, r12
     eb0:	11 96       	adiw	r26, 0x01	; 1
     eb2:	cd 90       	ld	r12, X+
     eb4:	dc 90       	ld	r13, X
     eb6:	12 97       	sbiw	r26, 0x02	; 2
     eb8:	c2 16       	cp	r12, r18
     eba:	d3 06       	cpc	r13, r19
     ebc:	20 f4       	brcc	.+8      	; 0xec6 <__stack+0x5c7>
     ebe:	21 50       	subi	r18, 0x01	; 1
     ec0:	31 09       	sbc	r19, r1
     ec2:	35 83       	std	Z+5, r19	; 0x05
     ec4:	24 83       	std	Z+4, r18	; 0x04
     ec6:	4f 5f       	subi	r20, 0xFF	; 255
     ec8:	5f 4f       	sbci	r21, 0xFF	; 255
     eca:	6a 5f       	subi	r22, 0xFA	; 250
     ecc:	7f 4f       	sbci	r23, 0xFF	; 255
     ece:	df cf       	rjmp	.-66     	; 0xe8e <__stack+0x58f>
     ed0:	f4 01       	movw	r30, r8
     ed2:	27 81       	ldd	r18, Z+7	; 0x07
     ed4:	d8 01       	movw	r26, r16
     ed6:	15 96       	adiw	r26, 0x05	; 5
     ed8:	2c 93       	st	X, r18
     eda:	84 cf       	rjmp	.-248    	; 0xde4 <__stack+0x4e5>
     edc:	21 50       	subi	r18, 0x01	; 1
     ede:	23 83       	std	Z+3, r18	; 0x03
     ee0:	81 cf       	rjmp	.-254    	; 0xde4 <__stack+0x4e5>
     ee2:	a9 01       	movw	r20, r18
     ee4:	44 0f       	add	r20, r20
     ee6:	55 1f       	adc	r21, r21
     ee8:	ec 81       	ldd	r30, Y+4	; 0x04
     eea:	fd 81       	ldd	r31, Y+5	; 0x05
     eec:	e4 0f       	add	r30, r20
     eee:	f5 1f       	adc	r31, r21
     ef0:	60 81       	ld	r22, Z
     ef2:	65 38       	cpi	r22, 0x85	; 133
     ef4:	09 f0       	breq	.+2      	; 0xef8 <__stack+0x5f9>
     ef6:	47 c0       	rjmp	.+142    	; 0xf86 <__stack+0x687>
     ef8:	61 81       	ldd	r22, Z+1	; 0x01
     efa:	66 23       	and	r22, r22
     efc:	19 f0       	breq	.+6      	; 0xf04 <__stack+0x605>
     efe:	61 50       	subi	r22, 0x01	; 1
     f00:	61 83       	std	Z+1, r22	; 0x01
     f02:	41 c0       	rjmp	.+130    	; 0xf86 <__stack+0x687>
     f04:	a0 82       	st	Z, r10
     f06:	6c 81       	ldd	r22, Y+4	; 0x04
     f08:	7d 81       	ldd	r23, Y+5	; 0x05
     f0a:	fb 01       	movw	r30, r22
     f0c:	e4 0f       	add	r30, r20
     f0e:	f5 1f       	adc	r31, r21
     f10:	02 80       	ldd	r0, Z+2	; 0x02
     f12:	f3 81       	ldd	r31, Z+3	; 0x03
     f14:	e0 2d       	mov	r30, r0
     f16:	b0 82       	st	Z, r11
     f18:	ee 81       	ldd	r30, Y+6	; 0x06
     f1a:	ff 81       	ldd	r31, Y+7	; 0x07
     f1c:	e2 0f       	add	r30, r18
     f1e:	f3 1f       	adc	r31, r19
     f20:	d2 80       	ldd	r13, Z+2	; 0x02
     f22:	dd 20       	and	r13, r13
     f24:	81 f1       	breq	.+96     	; 0xf86 <__stack+0x687>
     f26:	40 e0       	ldi	r20, 0x00	; 0
     f28:	50 e0       	ldi	r21, 0x00	; 0
     f2a:	00 e0       	ldi	r16, 0x00	; 0
     f2c:	10 e0       	ldi	r17, 0x00	; 0
     f2e:	ea 81       	ldd	r30, Y+2	; 0x02
     f30:	fb 81       	ldd	r31, Y+3	; 0x03
     f32:	60 81       	ld	r22, Z
     f34:	71 81       	ldd	r23, Z+1	; 0x01
     f36:	06 17       	cp	r16, r22
     f38:	17 07       	cpc	r17, r23
     f3a:	28 f5       	brcc	.+74     	; 0xf86 <__stack+0x687>
     f3c:	ee 81       	ldd	r30, Y+6	; 0x06
     f3e:	ff 81       	ldd	r31, Y+7	; 0x07
     f40:	e4 0f       	add	r30, r20
     f42:	f5 1f       	adc	r31, r21
     f44:	62 81       	ldd	r22, Z+2	; 0x02
     f46:	d6 12       	cpse	r13, r22
     f48:	19 c0       	rjmp	.+50     	; 0xf7c <__stack+0x67d>
     f4a:	ba 01       	movw	r22, r20
     f4c:	66 0f       	add	r22, r22
     f4e:	77 1f       	adc	r23, r23
     f50:	ec 81       	ldd	r30, Y+4	; 0x04
     f52:	fd 81       	ldd	r31, Y+5	; 0x05
     f54:	4f 01       	movw	r8, r30
     f56:	86 0e       	add	r8, r22
     f58:	97 1e       	adc	r9, r23
     f5a:	f4 01       	movw	r30, r8
     f5c:	e2 80       	ldd	r14, Z+2	; 0x02
     f5e:	f3 80       	ldd	r15, Z+3	; 0x03
     f60:	f7 01       	movw	r30, r14
     f62:	f0 80       	ld	r15, Z
     f64:	f0 fe       	sbrs	r15, 0
     f66:	0a c0       	rjmp	.+20     	; 0xf7c <__stack+0x67d>
     f68:	f4 01       	movw	r30, r8
     f6a:	a0 82       	st	Z, r10
     f6c:	ec 81       	ldd	r30, Y+4	; 0x04
     f6e:	fd 81       	ldd	r31, Y+5	; 0x05
     f70:	e6 0f       	add	r30, r22
     f72:	f7 1f       	adc	r31, r23
     f74:	02 80       	ldd	r0, Z+2	; 0x02
     f76:	f3 81       	ldd	r31, Z+3	; 0x03
     f78:	e0 2d       	mov	r30, r0
     f7a:	b0 82       	st	Z, r11
     f7c:	0f 5f       	subi	r16, 0xFF	; 255
     f7e:	1f 4f       	sbci	r17, 0xFF	; 255
     f80:	4d 5f       	subi	r20, 0xFD	; 253
     f82:	5f 4f       	sbci	r21, 0xFF	; 255
     f84:	d4 cf       	rjmp	.-88     	; 0xf2e <__stack+0x62f>
     f86:	11 96       	adiw	r26, 0x01	; 1
     f88:	2d 5f       	subi	r18, 0xFD	; 253
     f8a:	3f 4f       	sbci	r19, 0xFF	; 255
     f8c:	34 cf       	rjmp	.-408    	; 0xdf6 <__stack+0x4f7>
     f8e:	8b e0       	ldi	r24, 0x0B	; 11
     f90:	df 91       	pop	r29
     f92:	cf 91       	pop	r28
     f94:	1f 91       	pop	r17
     f96:	0f 91       	pop	r16
     f98:	ff 90       	pop	r15
     f9a:	ef 90       	pop	r14
     f9c:	df 90       	pop	r13
     f9e:	cf 90       	pop	r12
     fa0:	bf 90       	pop	r11
     fa2:	af 90       	pop	r10
     fa4:	9f 90       	pop	r9
     fa6:	8f 90       	pop	r8
     fa8:	7f 90       	pop	r7
     faa:	6f 90       	pop	r6
     fac:	5f 90       	pop	r5
     fae:	4f 90       	pop	r4
     fb0:	3f 90       	pop	r3
     fb2:	2f 90       	pop	r2
     fb4:	08 95       	ret

00000fb6 <select_next_channel_to_measure>:
     fb6:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <current_measure_channel>
     fba:	90 91 6d 01 	lds	r25, 0x016D	; 0x80016d <current_measure_channel+0x1>
     fbe:	a0 91 86 01 	lds	r26, 0x0186	; 0x800186 <qtm_acquisition_control_working_set_ptr>
     fc2:	b0 91 87 01 	lds	r27, 0x0187	; 0x800187 <qtm_acquisition_control_working_set_ptr+0x1>
     fc6:	ed 91       	ld	r30, X+
     fc8:	fc 91       	ld	r31, X
     fca:	11 97       	sbiw	r26, 0x01	; 1
     fcc:	40 81       	ld	r20, Z
     fce:	51 81       	ldd	r21, Z+1	; 0x01
     fd0:	25 e0       	ldi	r18, 0x05	; 5
     fd2:	28 9f       	mul	r18, r24
     fd4:	b0 01       	movw	r22, r0
     fd6:	29 9f       	mul	r18, r25
     fd8:	70 0d       	add	r23, r0
     fda:	11 24       	eor	r1, r1
     fdc:	20 e0       	ldi	r18, 0x00	; 0
     fde:	30 e0       	ldi	r19, 0x00	; 0
     fe0:	84 17       	cp	r24, r20
     fe2:	95 07       	cpc	r25, r21
     fe4:	a8 f4       	brcc	.+42     	; 0x1010 <select_next_channel_to_measure+0x5a>
     fe6:	14 96       	adiw	r26, 0x04	; 4
     fe8:	ed 91       	ld	r30, X+
     fea:	fc 91       	ld	r31, X
     fec:	15 97       	sbiw	r26, 0x05	; 5
     fee:	e2 0f       	add	r30, r18
     ff0:	f3 1f       	adc	r31, r19
     ff2:	e6 0f       	add	r30, r22
     ff4:	f7 1f       	adc	r31, r23
     ff6:	e0 81       	ld	r30, Z
     ff8:	2b 5f       	subi	r18, 0xFB	; 251
     ffa:	3f 4f       	sbci	r19, 0xFF	; 255
     ffc:	e0 fd       	sbrc	r30, 0
     ffe:	02 c0       	rjmp	.+4      	; 0x1004 <select_next_channel_to_measure+0x4e>
    1000:	01 96       	adiw	r24, 0x01	; 1
    1002:	ee cf       	rjmp	.-36     	; 0xfe0 <select_next_channel_to_measure+0x2a>
    1004:	90 93 6d 01 	sts	0x016D, r25	; 0x80016d <current_measure_channel+0x1>
    1008:	80 93 6c 01 	sts	0x016C, r24	; 0x80016c <current_measure_channel>
    100c:	80 e0       	ldi	r24, 0x00	; 0
    100e:	08 95       	ret
    1010:	10 92 6d 01 	sts	0x016D, r1	; 0x80016d <current_measure_channel+0x1>
    1014:	10 92 6c 01 	sts	0x016C, r1	; 0x80016c <current_measure_channel>
    1018:	81 e0       	ldi	r24, 0x01	; 1
    101a:	08 95       	ret

0000101c <qtm_measure_node>:
    101c:	4a e0       	ldi	r20, 0x0A	; 10
    101e:	48 9f       	mul	r20, r24
    1020:	90 01       	movw	r18, r0
    1022:	49 9f       	mul	r20, r25
    1024:	30 0d       	add	r19, r0
    1026:	11 24       	eor	r1, r1
    1028:	e0 91 86 01 	lds	r30, 0x0186	; 0x800186 <qtm_acquisition_control_working_set_ptr>
    102c:	f0 91 87 01 	lds	r31, 0x0187	; 0x800187 <qtm_acquisition_control_working_set_ptr+0x1>
    1030:	02 80       	ldd	r0, Z+2	; 0x02
    1032:	f3 81       	ldd	r31, Z+3	; 0x03
    1034:	e0 2d       	mov	r30, r0
    1036:	e2 0f       	add	r30, r18
    1038:	f3 1f       	adc	r31, r19
    103a:	42 81       	ldd	r20, Z+2	; 0x02
    103c:	40 93 f8 00 	sts	0x00F8, r20	; 0x8000f8 <__TEXT_REGION_LENGTH__+0x7e00f8>
    1040:	e0 91 86 01 	lds	r30, 0x0186	; 0x800186 <qtm_acquisition_control_working_set_ptr>
    1044:	f0 91 87 01 	lds	r31, 0x0187	; 0x800187 <qtm_acquisition_control_working_set_ptr+0x1>
    1048:	02 80       	ldd	r0, Z+2	; 0x02
    104a:	f3 81       	ldd	r31, Z+3	; 0x03
    104c:	e0 2d       	mov	r30, r0
    104e:	e2 0f       	add	r30, r18
    1050:	f3 1f       	adc	r31, r19
    1052:	43 81       	ldd	r20, Z+3	; 0x03
    1054:	40 93 f9 00 	sts	0x00F9, r20	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7e00f9>
    1058:	e0 91 86 01 	lds	r30, 0x0186	; 0x800186 <qtm_acquisition_control_working_set_ptr>
    105c:	f0 91 87 01 	lds	r31, 0x0187	; 0x800187 <qtm_acquisition_control_working_set_ptr+0x1>
    1060:	02 80       	ldd	r0, Z+2	; 0x02
    1062:	f3 81       	ldd	r31, Z+3	; 0x03
    1064:	e0 2d       	mov	r30, r0
    1066:	e2 0f       	add	r30, r18
    1068:	f3 1f       	adc	r31, r19
    106a:	44 81       	ldd	r20, Z+4	; 0x04
    106c:	40 93 fa 00 	sts	0x00FA, r20	; 0x8000fa <__TEXT_REGION_LENGTH__+0x7e00fa>
    1070:	e0 91 86 01 	lds	r30, 0x0186	; 0x800186 <qtm_acquisition_control_working_set_ptr>
    1074:	f0 91 87 01 	lds	r31, 0x0187	; 0x800187 <qtm_acquisition_control_working_set_ptr+0x1>
    1078:	02 80       	ldd	r0, Z+2	; 0x02
    107a:	f3 81       	ldd	r31, Z+3	; 0x03
    107c:	e0 2d       	mov	r30, r0
    107e:	e2 0f       	add	r30, r18
    1080:	f3 1f       	adc	r31, r19
    1082:	40 81       	ld	r20, Z
    1084:	40 93 f2 00 	sts	0x00F2, r20	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    1088:	e0 91 86 01 	lds	r30, 0x0186	; 0x800186 <qtm_acquisition_control_working_set_ptr>
    108c:	f0 91 87 01 	lds	r31, 0x0187	; 0x800187 <qtm_acquisition_control_working_set_ptr+0x1>
    1090:	02 80       	ldd	r0, Z+2	; 0x02
    1092:	f3 81       	ldd	r31, Z+3	; 0x03
    1094:	e0 2d       	mov	r30, r0
    1096:	e2 0f       	add	r30, r18
    1098:	f3 1f       	adc	r31, r19
    109a:	41 81       	ldd	r20, Z+1	; 0x01
    109c:	40 93 f3 00 	sts	0x00F3, r20	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
    10a0:	65 e0       	ldi	r22, 0x05	; 5
    10a2:	68 9f       	mul	r22, r24
    10a4:	a0 01       	movw	r20, r0
    10a6:	69 9f       	mul	r22, r25
    10a8:	50 0d       	add	r21, r0
    10aa:	11 24       	eor	r1, r1
    10ac:	e0 91 86 01 	lds	r30, 0x0186	; 0x800186 <qtm_acquisition_control_working_set_ptr>
    10b0:	f0 91 87 01 	lds	r31, 0x0187	; 0x800187 <qtm_acquisition_control_working_set_ptr+0x1>
    10b4:	04 80       	ldd	r0, Z+4	; 0x04
    10b6:	f5 81       	ldd	r31, Z+5	; 0x05
    10b8:	e0 2d       	mov	r30, r0
    10ba:	e4 0f       	add	r30, r20
    10bc:	f5 1f       	adc	r31, r21
    10be:	83 81       	ldd	r24, Z+3	; 0x03
    10c0:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
    10c4:	e0 91 86 01 	lds	r30, 0x0186	; 0x800186 <qtm_acquisition_control_working_set_ptr>
    10c8:	f0 91 87 01 	lds	r31, 0x0187	; 0x800187 <qtm_acquisition_control_working_set_ptr+0x1>
    10cc:	04 80       	ldd	r0, Z+4	; 0x04
    10ce:	f5 81       	ldd	r31, Z+5	; 0x05
    10d0:	e0 2d       	mov	r30, r0
    10d2:	e4 0f       	add	r30, r20
    10d4:	f5 1f       	adc	r31, r21
    10d6:	83 81       	ldd	r24, Z+3	; 0x03
    10d8:	94 81       	ldd	r25, Z+4	; 0x04
    10da:	88 27       	eor	r24, r24
    10dc:	9f 73       	andi	r25, 0x3F	; 63
    10de:	90 93 e6 00 	sts	0x00E6, r25	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7e00e6>
    10e2:	a0 91 86 01 	lds	r26, 0x0186	; 0x800186 <qtm_acquisition_control_working_set_ptr>
    10e6:	b0 91 87 01 	lds	r27, 0x0187	; 0x800187 <qtm_acquisition_control_working_set_ptr+0x1>
    10ea:	14 96       	adiw	r26, 0x04	; 4
    10ec:	ed 91       	ld	r30, X+
    10ee:	fc 91       	ld	r31, X
    10f0:	15 97       	sbiw	r26, 0x05	; 5
    10f2:	e4 0f       	add	r30, r20
    10f4:	f5 1f       	adc	r31, r21
    10f6:	80 81       	ld	r24, Z
    10f8:	81 fd       	sbrc	r24, 1
    10fa:	60 83       	st	Z, r22
    10fc:	14 96       	adiw	r26, 0x04	; 4
    10fe:	8d 91       	ld	r24, X+
    1100:	9c 91       	ld	r25, X
    1102:	15 97       	sbiw	r26, 0x05	; 5
    1104:	fc 01       	movw	r30, r24
    1106:	e4 0f       	add	r30, r20
    1108:	f5 1f       	adc	r31, r21
    110a:	80 81       	ld	r24, Z
    110c:	8c 71       	andi	r24, 0x1C	; 28
    110e:	71 f4       	brne	.+28     	; 0x112c <qtm_measure_node+0x110>
    1110:	12 96       	adiw	r26, 0x02	; 2
    1112:	ed 91       	ld	r30, X+
    1114:	fc 91       	ld	r31, X
    1116:	13 97       	sbiw	r26, 0x03	; 3
    1118:	e2 0f       	add	r30, r18
    111a:	f3 1f       	adc	r31, r19
    111c:	e0 85       	ldd	r30, Z+8	; 0x08
    111e:	e2 95       	swap	r30
    1120:	ef 70       	andi	r30, 0x0F	; 15
    1122:	f0 e0       	ldi	r31, 0x00	; 0
    1124:	ef 5a       	subi	r30, 0xAF	; 175
    1126:	fe 4f       	sbci	r31, 0xFE	; 254
    1128:	80 81       	ld	r24, Z
    112a:	01 c0       	rjmp	.+2      	; 0x112e <qtm_measure_node+0x112>
    112c:	8f e3       	ldi	r24, 0x3F	; 63
    112e:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7e00e7>
    1132:	e0 91 86 01 	lds	r30, 0x0186	; 0x800186 <qtm_acquisition_control_working_set_ptr>
    1136:	f0 91 87 01 	lds	r31, 0x0187	; 0x800187 <qtm_acquisition_control_working_set_ptr+0x1>
    113a:	02 80       	ldd	r0, Z+2	; 0x02
    113c:	f3 81       	ldd	r31, Z+3	; 0x03
    113e:	e0 2d       	mov	r30, r0
    1140:	e2 0f       	add	r30, r18
    1142:	f3 1f       	adc	r31, r19
    1144:	86 81       	ldd	r24, Z+6	; 0x06
    1146:	8b 3f       	cpi	r24, 0xFB	; 251
    1148:	10 f4       	brcc	.+4      	; 0x114e <qtm_measure_node+0x132>
    114a:	8c 5f       	subi	r24, 0xFC	; 252
    114c:	01 c0       	rjmp	.+2      	; 0x1150 <qtm_measure_node+0x134>
    114e:	8f ef       	ldi	r24, 0xFF	; 255
    1150:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1154:	e0 91 86 01 	lds	r30, 0x0186	; 0x800186 <qtm_acquisition_control_working_set_ptr>
    1158:	f0 91 87 01 	lds	r31, 0x0187	; 0x800187 <qtm_acquisition_control_working_set_ptr+0x1>
    115c:	02 80       	ldd	r0, Z+2	; 0x02
    115e:	f3 81       	ldd	r31, Z+3	; 0x03
    1160:	e0 2d       	mov	r30, r0
    1162:	e2 0f       	add	r30, r18
    1164:	f3 1f       	adc	r31, r19
    1166:	87 81       	ldd	r24, Z+7	; 0x07
    1168:	80 7f       	andi	r24, 0xF0	; 240
    116a:	91 85       	ldd	r25, Z+9	; 0x09
    116c:	89 2b       	or	r24, r25
    116e:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
    1172:	e0 91 86 01 	lds	r30, 0x0186	; 0x800186 <qtm_acquisition_control_working_set_ptr>
    1176:	f0 91 87 01 	lds	r31, 0x0187	; 0x800187 <qtm_acquisition_control_working_set_ptr+0x1>
    117a:	82 81       	ldd	r24, Z+2	; 0x02
    117c:	93 81       	ldd	r25, Z+3	; 0x03
    117e:	fc 01       	movw	r30, r24
    1180:	e2 0f       	add	r30, r18
    1182:	f3 1f       	adc	r31, r19
    1184:	87 81       	ldd	r24, Z+7	; 0x07
    1186:	8f 70       	andi	r24, 0x0F	; 15
    1188:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    118c:	82 e1       	ldi	r24, 0x12	; 18
    118e:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7e00e0>
    1192:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    1196:	81 60       	ori	r24, 0x01	; 1
    1198:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    119c:	08 95       	ret

0000119e <qtm_acquisition_process>:
    119e:	4f 92       	push	r4
    11a0:	5f 92       	push	r5
    11a2:	6f 92       	push	r6
    11a4:	7f 92       	push	r7
    11a6:	8f 92       	push	r8
    11a8:	9f 92       	push	r9
    11aa:	af 92       	push	r10
    11ac:	bf 92       	push	r11
    11ae:	cf 92       	push	r12
    11b0:	df 92       	push	r13
    11b2:	ef 92       	push	r14
    11b4:	ff 92       	push	r15
    11b6:	0f 93       	push	r16
    11b8:	1f 93       	push	r17
    11ba:	cf 93       	push	r28
    11bc:	df 93       	push	r29
    11be:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <touch_seq_lib_state>
    11c2:	88 23       	and	r24, r24
    11c4:	09 f4       	brne	.+2      	; 0x11c8 <qtm_acquisition_process+0x2a>
    11c6:	31 c1       	rjmp	.+610    	; 0x142a <qtm_acquisition_process+0x28c>
    11c8:	a0 91 86 01 	lds	r26, 0x0186	; 0x800186 <qtm_acquisition_control_working_set_ptr>
    11cc:	b0 91 87 01 	lds	r27, 0x0187	; 0x800187 <qtm_acquisition_control_working_set_ptr+0x1>
    11d0:	e0 90 88 01 	lds	r14, 0x0188	; 0x800188 <qtm_raw_data_measurements_ptr>
    11d4:	f0 90 89 01 	lds	r15, 0x0189	; 0x800189 <qtm_raw_data_measurements_ptr+0x1>
    11d8:	41 2c       	mov	r4, r1
    11da:	51 2c       	mov	r5, r1
    11dc:	60 e0       	ldi	r22, 0x00	; 0
    11de:	70 e0       	ldi	r23, 0x00	; 0
    11e0:	00 e0       	ldi	r16, 0x00	; 0
    11e2:	10 e0       	ldi	r17, 0x00	; 0
    11e4:	80 e0       	ldi	r24, 0x00	; 0
    11e6:	66 24       	eor	r6, r6
    11e8:	63 94       	inc	r6
    11ea:	91 e8       	ldi	r25, 0x81	; 129
    11ec:	79 2e       	mov	r7, r25
    11ee:	aa 24       	eor	r10, r10
    11f0:	aa 94       	dec	r10
    11f2:	bb 24       	eor	r11, r11
    11f4:	b3 94       	inc	r11
    11f6:	cd 90       	ld	r12, X+
    11f8:	dc 90       	ld	r13, X
    11fa:	11 97       	sbiw	r26, 0x01	; 1
    11fc:	f6 01       	movw	r30, r12
    11fe:	20 81       	ld	r18, Z
    1200:	31 81       	ldd	r19, Z+1	; 0x01
    1202:	02 17       	cp	r16, r18
    1204:	13 07       	cpc	r17, r19
    1206:	08 f0       	brcs	.+2      	; 0x120a <qtm_acquisition_process+0x6c>
    1208:	0c c1       	rjmp	.+536    	; 0x1422 <qtm_acquisition_process+0x284>
    120a:	e7 01       	movw	r28, r14
    120c:	29 91       	ld	r18, Y+
    120e:	39 91       	ld	r19, Y+
    1210:	7e 01       	movw	r14, r28
    1212:	14 96       	adiw	r26, 0x04	; 4
    1214:	ed 91       	ld	r30, X+
    1216:	fc 91       	ld	r31, X
    1218:	15 97       	sbiw	r26, 0x05	; 5
    121a:	e6 0f       	add	r30, r22
    121c:	f7 1f       	adc	r31, r23
    121e:	40 81       	ld	r20, Z
    1220:	4c 71       	andi	r20, 0x1C	; 28
    1222:	50 e0       	ldi	r21, 0x00	; 0
    1224:	56 95       	lsr	r21
    1226:	47 95       	ror	r20
    1228:	56 95       	lsr	r21
    122a:	47 95       	ror	r20
    122c:	41 15       	cp	r20, r1
    122e:	51 05       	cpc	r21, r1
    1230:	21 f0       	breq	.+8      	; 0x123a <qtm_acquisition_process+0x9c>
    1232:	41 30       	cpi	r20, 0x01	; 1
    1234:	51 05       	cpc	r21, r1
    1236:	c1 f0       	breq	.+48     	; 0x1268 <qtm_acquisition_process+0xca>
    1238:	eb c0       	rjmp	.+470    	; 0x1410 <qtm_acquisition_process+0x272>
    123a:	12 96       	adiw	r26, 0x02	; 2
    123c:	4d 91       	ld	r20, X+
    123e:	5c 91       	ld	r21, X
    1240:	13 97       	sbiw	r26, 0x03	; 3
    1242:	44 0d       	add	r20, r4
    1244:	55 1d       	adc	r21, r5
    1246:	ea 01       	movw	r28, r20
    1248:	98 85       	ldd	r25, Y+8	; 0x08
    124a:	9f 70       	andi	r25, 0x0F	; 15
    124c:	49 85       	ldd	r20, Y+9	; 0x09
    124e:	94 17       	cp	r25, r20
    1250:	10 f4       	brcc	.+4      	; 0x1256 <qtm_acquisition_process+0xb8>
    1252:	49 1b       	sub	r20, r25
    1254:	01 c0       	rjmp	.+2      	; 0x1258 <qtm_acquisition_process+0xba>
    1256:	40 e0       	ldi	r20, 0x00	; 0
    1258:	02 c0       	rjmp	.+4      	; 0x125e <qtm_acquisition_process+0xc0>
    125a:	36 95       	lsr	r19
    125c:	27 95       	ror	r18
    125e:	4a 95       	dec	r20
    1260:	e2 f7       	brpl	.-8      	; 0x125a <qtm_acquisition_process+0xbc>
    1262:	32 83       	std	Z+2, r19	; 0x02
    1264:	21 83       	std	Z+1, r18	; 0x01
    1266:	d5 c0       	rjmp	.+426    	; 0x1412 <qtm_acquisition_process+0x274>
    1268:	12 96       	adiw	r26, 0x02	; 2
    126a:	4d 91       	ld	r20, X+
    126c:	5c 91       	ld	r21, X
    126e:	13 97       	sbiw	r26, 0x03	; 3
    1270:	44 0d       	add	r20, r4
    1272:	55 1d       	adc	r21, r5
    1274:	ea 01       	movw	r28, r20
    1276:	09 84       	ldd	r0, Y+9	; 0x09
    1278:	02 c0       	rjmp	.+4      	; 0x127e <qtm_acquisition_process+0xe0>
    127a:	36 95       	lsr	r19
    127c:	27 95       	ror	r18
    127e:	0a 94       	dec	r0
    1280:	e2 f7       	brpl	.-8      	; 0x127a <qtm_acquisition_process+0xdc>
    1282:	32 83       	std	Z+2, r19	; 0x02
    1284:	21 83       	std	Z+1, r18	; 0x01
    1286:	43 81       	ldd	r20, Z+3	; 0x03
    1288:	54 81       	ldd	r21, Z+4	; 0x04
    128a:	21 15       	cp	r18, r1
    128c:	d2 e0       	ldi	r29, 0x02	; 2
    128e:	3d 07       	cpc	r19, r29
    1290:	20 f0       	brcs	.+8      	; 0x129a <qtm_acquisition_process+0xfc>
    1292:	2f 5f       	subi	r18, 0xFF	; 255
    1294:	31 40       	sbci	r19, 0x01	; 1
    1296:	91 e0       	ldi	r25, 0x01	; 1
    1298:	05 c0       	rjmp	.+10     	; 0x12a4 <qtm_acquisition_process+0x106>
    129a:	e5 01       	movw	r28, r10
    129c:	c2 1b       	sub	r28, r18
    129e:	d3 0b       	sbc	r29, r19
    12a0:	9e 01       	movw	r18, r28
    12a2:	90 e0       	ldi	r25, 0x00	; 0
    12a4:	e6 01       	movw	r28, r12
    12a6:	da 80       	ldd	r13, Y+2	; 0x02
    12a8:	d0 e4       	ldi	r29, 0x40	; 64
    12aa:	dd 12       	cpse	r13, r29
    12ac:	05 c0       	rjmp	.+10     	; 0x12b8 <qtm_acquisition_process+0x11a>
    12ae:	36 95       	lsr	r19
    12b0:	27 95       	ror	r18
    12b2:	99 23       	and	r25, r25
    12b4:	19 f0       	breq	.+6      	; 0x12bc <qtm_acquisition_process+0x11e>
    12b6:	09 c0       	rjmp	.+18     	; 0x12ca <qtm_acquisition_process+0x12c>
    12b8:	99 23       	and	r25, r25
    12ba:	39 f0       	breq	.+14     	; 0x12ca <qtm_acquisition_process+0x12c>
    12bc:	4f 3f       	cpi	r20, 0xFF	; 255
    12be:	9f e3       	ldi	r25, 0x3F	; 63
    12c0:	59 07       	cpc	r21, r25
    12c2:	31 f4       	brne	.+12     	; 0x12d0 <qtm_acquisition_process+0x132>
    12c4:	70 82       	st	Z, r7
    12c6:	8e e0       	ldi	r24, 0x0E	; 14
    12c8:	07 c0       	rjmp	.+14     	; 0x12d8 <qtm_acquisition_process+0x13a>
    12ca:	88 24       	eor	r8, r8
    12cc:	83 94       	inc	r8
    12ce:	01 c0       	rjmp	.+2      	; 0x12d2 <qtm_acquisition_process+0x134>
    12d0:	81 2c       	mov	r8, r1
    12d2:	2a 30       	cpi	r18, 0x0A	; 10
    12d4:	31 05       	cpc	r19, r1
    12d6:	98 f4       	brcc	.+38     	; 0x12fe <qtm_acquisition_process+0x160>
    12d8:	14 96       	adiw	r26, 0x04	; 4
    12da:	ed 91       	ld	r30, X+
    12dc:	fc 91       	ld	r31, X
    12de:	15 97       	sbiw	r26, 0x05	; 5
    12e0:	e6 0f       	add	r30, r22
    12e2:	f7 1f       	adc	r31, r23
    12e4:	20 81       	ld	r18, Z
    12e6:	27 ff       	sbrs	r18, 7
    12e8:	60 82       	st	Z, r6
    12ea:	14 96       	adiw	r26, 0x04	; 4
    12ec:	ed 91       	ld	r30, X+
    12ee:	fc 91       	ld	r31, X
    12f0:	15 97       	sbiw	r26, 0x05	; 5
    12f2:	e6 0f       	add	r30, r22
    12f4:	f7 1f       	adc	r31, r23
    12f6:	5f 73       	andi	r21, 0x3F	; 63
    12f8:	54 83       	std	Z+4, r21	; 0x04
    12fa:	43 83       	std	Z+3, r20	; 0x03
    12fc:	8a c0       	rjmp	.+276    	; 0x1412 <qtm_acquisition_process+0x274>
    12fe:	6a 01       	movw	r12, r20
    1300:	cc 24       	eor	r12, r12
    1302:	c0 e3       	ldi	r28, 0x30	; 48
    1304:	dc 22       	and	r13, r28
    1306:	9d 2c       	mov	r9, r13
    1308:	92 94       	swap	r9
    130a:	df e0       	ldi	r29, 0x0F	; 15
    130c:	9d 22       	and	r9, r29
    130e:	6a 01       	movw	r12, r20
    1310:	cc 24       	eor	r12, r12
    1312:	df e0       	ldi	r29, 0x0F	; 15
    1314:	dd 22       	and	r13, r29
    1316:	9d 2d       	mov	r25, r13
    1318:	6a 01       	movw	r12, r20
    131a:	c0 ef       	ldi	r28, 0xF0	; 240
    131c:	cc 22       	and	r12, r28
    131e:	dd 24       	eor	r13, r13
    1320:	54 e0       	ldi	r21, 0x04	; 4
    1322:	d6 94       	lsr	r13
    1324:	c7 94       	ror	r12
    1326:	5a 95       	dec	r21
    1328:	e1 f7       	brne	.-8      	; 0x1322 <qtm_acquisition_process+0x184>
    132a:	5c 2d       	mov	r21, r12
    132c:	4f 70       	andi	r20, 0x0F	; 15
    132e:	81 10       	cpse	r8, r1
    1330:	32 c0       	rjmp	.+100    	; 0x1396 <qtm_acquisition_process+0x1f8>
    1332:	20 3d       	cpi	r18, 0xD0	; 208
    1334:	31 05       	cpc	r19, r1
    1336:	60 f0       	brcs	.+24     	; 0x1350 <qtm_acquisition_process+0x1b2>
    1338:	d3 e0       	ldi	r29, 0x03	; 3
    133a:	9d 16       	cp	r9, r29
    133c:	49 f0       	breq	.+18     	; 0x1350 <qtm_acquisition_process+0x1b2>
    133e:	93 94       	inc	r9
    1340:	2f 5c       	subi	r18, 0xCF	; 207
    1342:	31 09       	sbc	r19, r1
    1344:	f6 cf       	rjmp	.-20     	; 0x1332 <qtm_acquisition_process+0x194>
    1346:	9f 30       	cpi	r25, 0x0F	; 15
    1348:	41 f0       	breq	.+16     	; 0x135a <qtm_acquisition_process+0x1bc>
    134a:	9f 5f       	subi	r25, 0xFF	; 255
    134c:	25 51       	subi	r18, 0x15	; 21
    134e:	31 09       	sbc	r19, r1
    1350:	26 31       	cpi	r18, 0x16	; 22
    1352:	31 05       	cpc	r19, r1
    1354:	c0 f7       	brcc	.-16     	; 0x1346 <qtm_acquisition_process+0x1a8>
    1356:	9f 30       	cpi	r25, 0x0F	; 15
    1358:	69 f4       	brne	.+26     	; 0x1374 <qtm_acquisition_process+0x1d6>
    135a:	93 e0       	ldi	r25, 0x03	; 3
    135c:	99 12       	cpse	r9, r25
    135e:	02 c0       	rjmp	.+4      	; 0x1364 <qtm_acquisition_process+0x1c6>
    1360:	9f e0       	ldi	r25, 0x0F	; 15
    1362:	08 c0       	rjmp	.+16     	; 0x1374 <qtm_acquisition_process+0x1d6>
    1364:	93 94       	inc	r9
    1366:	95 e0       	ldi	r25, 0x05	; 5
    1368:	05 c0       	rjmp	.+10     	; 0x1374 <qtm_acquisition_process+0x1d6>
    136a:	5f 30       	cpi	r21, 0x0F	; 15
    136c:	49 f0       	breq	.+18     	; 0x1380 <qtm_acquisition_process+0x1e2>
    136e:	5f 5f       	subi	r21, 0xFF	; 255
    1370:	22 50       	subi	r18, 0x02	; 2
    1372:	31 09       	sbc	r19, r1
    1374:	23 30       	cpi	r18, 0x03	; 3
    1376:	31 05       	cpc	r19, r1
    1378:	c0 f7       	brcc	.-16     	; 0x136a <qtm_acquisition_process+0x1cc>
    137a:	5f 30       	cpi	r21, 0x0F	; 15
    137c:	09 f0       	breq	.+2      	; 0x1380 <qtm_acquisition_process+0x1e2>
    137e:	5b c0       	rjmp	.+182    	; 0x1436 <qtm_acquisition_process+0x298>
    1380:	9f 30       	cpi	r25, 0x0F	; 15
    1382:	09 f4       	brne	.+2      	; 0x1386 <qtm_acquisition_process+0x1e8>
    1384:	54 c0       	rjmp	.+168    	; 0x142e <qtm_acquisition_process+0x290>
    1386:	9f 5f       	subi	r25, 0xFF	; 255
    1388:	55 e0       	ldi	r21, 0x05	; 5
    138a:	55 c0       	rjmp	.+170    	; 0x1436 <qtm_acquisition_process+0x298>
    138c:	99 20       	and	r9, r9
    138e:	61 f0       	breq	.+24     	; 0x13a8 <qtm_acquisition_process+0x20a>
    1390:	9a 94       	dec	r9
    1392:	2f 5c       	subi	r18, 0xCF	; 207
    1394:	31 09       	sbc	r19, r1
    1396:	20 3d       	cpi	r18, 0xD0	; 208
    1398:	31 05       	cpc	r19, r1
    139a:	c0 f7       	brcc	.-16     	; 0x138c <qtm_acquisition_process+0x1ee>
    139c:	05 c0       	rjmp	.+10     	; 0x13a8 <qtm_acquisition_process+0x20a>
    139e:	99 23       	and	r25, r25
    13a0:	41 f0       	breq	.+16     	; 0x13b2 <qtm_acquisition_process+0x214>
    13a2:	91 50       	subi	r25, 0x01	; 1
    13a4:	25 51       	subi	r18, 0x15	; 21
    13a6:	31 09       	sbc	r19, r1
    13a8:	26 31       	cpi	r18, 0x16	; 22
    13aa:	31 05       	cpc	r19, r1
    13ac:	c0 f7       	brcc	.-16     	; 0x139e <qtm_acquisition_process+0x200>
    13ae:	91 11       	cpse	r25, r1
    13b0:	0c c0       	rjmp	.+24     	; 0x13ca <qtm_acquisition_process+0x22c>
    13b2:	91 10       	cpse	r9, r1
    13b4:	02 c0       	rjmp	.+4      	; 0x13ba <qtm_acquisition_process+0x21c>
    13b6:	90 e0       	ldi	r25, 0x00	; 0
    13b8:	08 c0       	rjmp	.+16     	; 0x13ca <qtm_acquisition_process+0x22c>
    13ba:	9a 94       	dec	r9
    13bc:	9a e0       	ldi	r25, 0x0A	; 10
    13be:	05 c0       	rjmp	.+10     	; 0x13ca <qtm_acquisition_process+0x22c>
    13c0:	55 23       	and	r21, r21
    13c2:	41 f0       	breq	.+16     	; 0x13d4 <qtm_acquisition_process+0x236>
    13c4:	51 50       	subi	r21, 0x01	; 1
    13c6:	22 50       	subi	r18, 0x02	; 2
    13c8:	31 09       	sbc	r19, r1
    13ca:	23 30       	cpi	r18, 0x03	; 3
    13cc:	31 05       	cpc	r19, r1
    13ce:	c0 f7       	brcc	.-16     	; 0x13c0 <qtm_acquisition_process+0x222>
    13d0:	51 11       	cpse	r21, r1
    13d2:	0d c0       	rjmp	.+26     	; 0x13ee <qtm_acquisition_process+0x250>
    13d4:	99 23       	and	r25, r25
    13d6:	b9 f1       	breq	.+110    	; 0x1446 <qtm_acquisition_process+0x2a8>
    13d8:	91 50       	subi	r25, 0x01	; 1
    13da:	5a e0       	ldi	r21, 0x0A	; 10
    13dc:	23 30       	cpi	r18, 0x03	; 3
    13de:	31 05       	cpc	r19, r1
    13e0:	d0 f6       	brcc	.-76     	; 0x1396 <qtm_acquisition_process+0x1f8>
    13e2:	05 c0       	rjmp	.+10     	; 0x13ee <qtm_acquisition_process+0x250>
    13e4:	23 30       	cpi	r18, 0x03	; 3
    13e6:	31 05       	cpc	r19, r1
    13e8:	58 f1       	brcs	.+86     	; 0x1440 <qtm_acquisition_process+0x2a2>
    13ea:	4f e0       	ldi	r20, 0x0F	; 15
    13ec:	5f e0       	ldi	r21, 0x0F	; 15
    13ee:	29 2d       	mov	r18, r9
    13f0:	30 e0       	ldi	r19, 0x00	; 0
    13f2:	32 2f       	mov	r19, r18
    13f4:	22 27       	eor	r18, r18
    13f6:	32 95       	swap	r19
    13f8:	30 7f       	andi	r19, 0xF0	; 240
    13fa:	39 2b       	or	r19, r25
    13fc:	24 2b       	or	r18, r20
    13fe:	c0 e1       	ldi	r28, 0x10	; 16
    1400:	5c 9f       	mul	r21, r28
    1402:	60 01       	movw	r12, r0
    1404:	11 24       	eor	r1, r1
    1406:	c2 2a       	or	r12, r18
    1408:	d3 2a       	or	r13, r19
    140a:	d4 82       	std	Z+4, r13	; 0x04
    140c:	c3 82       	std	Z+3, r12	; 0x03
    140e:	01 c0       	rjmp	.+2      	; 0x1412 <qtm_acquisition_process+0x274>
    1410:	ff cf       	rjmp	.-2      	; 0x1410 <qtm_acquisition_process+0x272>
    1412:	0f 5f       	subi	r16, 0xFF	; 255
    1414:	1f 4f       	sbci	r17, 0xFF	; 255
    1416:	6b 5f       	subi	r22, 0xFB	; 251
    1418:	7f 4f       	sbci	r23, 0xFF	; 255
    141a:	da e0       	ldi	r29, 0x0A	; 10
    141c:	4d 0e       	add	r4, r29
    141e:	51 1c       	adc	r5, r1
    1420:	ea ce       	rjmp	.-556    	; 0x11f6 <qtm_acquisition_process+0x58>
    1422:	92 e0       	ldi	r25, 0x02	; 2
    1424:	90 93 6b 01 	sts	0x016B, r25	; 0x80016b <touch_seq_lib_state>
    1428:	10 c0       	rjmp	.+32     	; 0x144a <qtm_acquisition_process+0x2ac>
    142a:	83 e0       	ldi	r24, 0x03	; 3
    142c:	0e c0       	rjmp	.+28     	; 0x144a <qtm_acquisition_process+0x2ac>
    142e:	53 e0       	ldi	r21, 0x03	; 3
    1430:	95 16       	cp	r9, r21
    1432:	c1 f2       	breq	.-80     	; 0x13e4 <qtm_acquisition_process+0x246>
    1434:	5f e0       	ldi	r21, 0x0F	; 15
    1436:	23 30       	cpi	r18, 0x03	; 3
    1438:	31 05       	cpc	r19, r1
    143a:	08 f0       	brcs	.+2      	; 0x143e <qtm_acquisition_process+0x2a0>
    143c:	7a cf       	rjmp	.-268    	; 0x1332 <qtm_acquisition_process+0x194>
    143e:	d7 cf       	rjmp	.-82     	; 0x13ee <qtm_acquisition_process+0x250>
    1440:	5f e0       	ldi	r21, 0x0F	; 15
    1442:	4f e0       	ldi	r20, 0x0F	; 15
    1444:	d4 cf       	rjmp	.-88     	; 0x13ee <qtm_acquisition_process+0x250>
    1446:	50 e0       	ldi	r21, 0x00	; 0
    1448:	d2 cf       	rjmp	.-92     	; 0x13ee <qtm_acquisition_process+0x250>
    144a:	df 91       	pop	r29
    144c:	cf 91       	pop	r28
    144e:	1f 91       	pop	r17
    1450:	0f 91       	pop	r16
    1452:	ff 90       	pop	r15
    1454:	ef 90       	pop	r14
    1456:	df 90       	pop	r13
    1458:	cf 90       	pop	r12
    145a:	bf 90       	pop	r11
    145c:	af 90       	pop	r10
    145e:	9f 90       	pop	r9
    1460:	8f 90       	pop	r8
    1462:	7f 90       	pop	r7
    1464:	6f 90       	pop	r6
    1466:	5f 90       	pop	r5
    1468:	4f 90       	pop	r4
    146a:	08 95       	ret

0000146c <qtm_ptc_init_acquisition_module>:
    146c:	8f 92       	push	r8
    146e:	9f 92       	push	r9
    1470:	af 92       	push	r10
    1472:	bf 92       	push	r11
    1474:	cf 92       	push	r12
    1476:	df 92       	push	r13
    1478:	ef 92       	push	r14
    147a:	ff 92       	push	r15
    147c:	cf 93       	push	r28
    147e:	df 93       	push	r29
    1480:	00 97       	sbiw	r24, 0x00	; 0
    1482:	09 f4       	brne	.+2      	; 0x1486 <qtm_ptc_init_acquisition_module+0x1a>
    1484:	6c c0       	rjmp	.+216    	; 0x155e <qtm_ptc_init_acquisition_module+0xf2>
    1486:	dc 01       	movw	r26, r24
    1488:	ed 91       	ld	r30, X+
    148a:	fc 91       	ld	r31, X
    148c:	c0 80       	ld	r12, Z
    148e:	d1 80       	ldd	r13, Z+1	; 0x01
    1490:	e1 2c       	mov	r14, r1
    1492:	f1 2c       	mov	r15, r1
    1494:	a0 e0       	ldi	r26, 0x00	; 0
    1496:	b0 e0       	ldi	r27, 0x00	; 0
    1498:	40 e0       	ldi	r20, 0x00	; 0
    149a:	50 e0       	ldi	r21, 0x00	; 0
    149c:	ba 01       	movw	r22, r20
    149e:	20 e0       	ldi	r18, 0x00	; 0
    14a0:	30 e0       	ldi	r19, 0x00	; 0
    14a2:	ac 15       	cp	r26, r12
    14a4:	bd 05       	cpc	r27, r13
    14a6:	b1 f0       	breq	.+44     	; 0x14d4 <qtm_ptc_init_acquisition_module+0x68>
    14a8:	ec 01       	movw	r28, r24
    14aa:	ea 81       	ldd	r30, Y+2	; 0x02
    14ac:	fb 81       	ldd	r31, Y+3	; 0x03
    14ae:	ee 0d       	add	r30, r14
    14b0:	ff 1d       	adc	r31, r15
    14b2:	a0 80       	ld	r10, Z
    14b4:	b1 80       	ldd	r11, Z+1	; 0x01
    14b6:	2a 29       	or	r18, r10
    14b8:	3b 29       	or	r19, r11
    14ba:	82 80       	ldd	r8, Z+2	; 0x02
    14bc:	93 80       	ldd	r9, Z+3	; 0x03
    14be:	a4 80       	ldd	r10, Z+4	; 0x04
    14c0:	b5 80       	ldd	r11, Z+5	; 0x05
    14c2:	48 29       	or	r20, r8
    14c4:	59 29       	or	r21, r9
    14c6:	6a 29       	or	r22, r10
    14c8:	7b 29       	or	r23, r11
    14ca:	11 96       	adiw	r26, 0x01	; 1
    14cc:	da e0       	ldi	r29, 0x0A	; 10
    14ce:	ed 0e       	add	r14, r29
    14d0:	f1 1c       	adc	r15, r1
    14d2:	e7 cf       	rjmp	.-50     	; 0x14a2 <qtm_ptc_init_acquisition_module+0x36>
    14d4:	41 15       	cp	r20, r1
    14d6:	51 05       	cpc	r21, r1
    14d8:	61 05       	cpc	r22, r1
    14da:	71 05       	cpc	r23, r1
    14dc:	09 f4       	brne	.+2      	; 0x14e0 <qtm_ptc_init_acquisition_module+0x74>
    14de:	41 c0       	rjmp	.+130    	; 0x1562 <qtm_ptc_init_acquisition_module+0xf6>
    14e0:	e0 91 6b 01 	lds	r30, 0x016B	; 0x80016b <touch_seq_lib_state>
    14e4:	6a 01       	movw	r12, r20
    14e6:	7b 01       	movw	r14, r22
    14e8:	cc 24       	eor	r12, r12
    14ea:	ee 24       	eor	r14, r14
    14ec:	ff 24       	eor	r15, r15
    14ee:	db 01       	movw	r26, r22
    14f0:	ca 01       	movw	r24, r20
    14f2:	88 27       	eor	r24, r24
    14f4:	99 27       	eor	r25, r25
    14f6:	bb 27       	eor	r27, r27
    14f8:	e1 11       	cpse	r30, r1
    14fa:	15 c0       	rjmp	.+42     	; 0x1526 <qtm_ptc_init_acquisition_module+0xba>
    14fc:	20 93 f0 00 	sts	0x00F0, r18	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    1500:	30 93 f1 00 	sts	0x00F1, r19	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    1504:	40 93 f4 00 	sts	0x00F4, r20	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7e00f4>
    1508:	cd 2c       	mov	r12, r13
    150a:	de 2c       	mov	r13, r14
    150c:	ef 2c       	mov	r14, r15
    150e:	ff 24       	eor	r15, r15
    1510:	c0 92 f5 00 	sts	0x00F5, r12	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7e00f5>
    1514:	cd 01       	movw	r24, r26
    1516:	aa 27       	eor	r26, r26
    1518:	bb 27       	eor	r27, r27
    151a:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7e00f6>
    151e:	81 e0       	ldi	r24, 0x01	; 1
    1520:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <touch_seq_lib_state>
    1524:	1a c0       	rjmp	.+52     	; 0x155a <qtm_ptc_init_acquisition_module+0xee>
    1526:	e0 91 f0 00 	lds	r30, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    152a:	2e 2b       	or	r18, r30
    152c:	20 93 f0 00 	sts	0x00F0, r18	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    1530:	20 91 f1 00 	lds	r18, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    1534:	23 2b       	or	r18, r19
    1536:	20 93 f1 00 	sts	0x00F1, r18	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    153a:	20 91 f4 00 	lds	r18, 0x00F4	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7e00f4>
    153e:	42 2b       	or	r20, r18
    1540:	40 93 f4 00 	sts	0x00F4, r20	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7e00f4>
    1544:	20 91 f5 00 	lds	r18, 0x00F5	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7e00f5>
    1548:	2d 29       	or	r18, r13
    154a:	20 93 f5 00 	sts	0x00F5, r18	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7e00f5>
    154e:	20 91 f6 00 	lds	r18, 0x00F6	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7e00f6>
    1552:	82 2f       	mov	r24, r18
    1554:	8a 2b       	or	r24, r26
    1556:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7e00f6>
    155a:	80 e0       	ldi	r24, 0x00	; 0
    155c:	03 c0       	rjmp	.+6      	; 0x1564 <qtm_ptc_init_acquisition_module+0xf8>
    155e:	8b e0       	ldi	r24, 0x0B	; 11
    1560:	01 c0       	rjmp	.+2      	; 0x1564 <qtm_ptc_init_acquisition_module+0xf8>
    1562:	82 e0       	ldi	r24, 0x02	; 2
    1564:	df 91       	pop	r29
    1566:	cf 91       	pop	r28
    1568:	ff 90       	pop	r15
    156a:	ef 90       	pop	r14
    156c:	df 90       	pop	r13
    156e:	cf 90       	pop	r12
    1570:	bf 90       	pop	r11
    1572:	af 90       	pop	r10
    1574:	9f 90       	pop	r9
    1576:	8f 90       	pop	r8
    1578:	08 95       	ret

0000157a <qtm_ptc_qtlib_assign_signal_memory>:
    157a:	00 97       	sbiw	r24, 0x00	; 0
    157c:	31 f0       	breq	.+12     	; 0x158a <qtm_ptc_qtlib_assign_signal_memory+0x10>
    157e:	90 93 89 01 	sts	0x0189, r25	; 0x800189 <qtm_raw_data_measurements_ptr+0x1>
    1582:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <qtm_raw_data_measurements_ptr>
    1586:	80 e0       	ldi	r24, 0x00	; 0
    1588:	08 95       	ret
    158a:	8b e0       	ldi	r24, 0x0B	; 11
    158c:	08 95       	ret

0000158e <qtm_ptc_start_measurement_seq>:
    158e:	cf 93       	push	r28
    1590:	df 93       	push	r29
    1592:	00 d0       	rcall	.+0      	; 0x1594 <qtm_ptc_start_measurement_seq+0x6>
    1594:	00 d0       	rcall	.+0      	; 0x1596 <qtm_ptc_start_measurement_seq+0x8>
    1596:	cd b7       	in	r28, 0x3d	; 61
    1598:	de b7       	in	r29, 0x3e	; 62
    159a:	10 92 6f 01 	sts	0x016F, r1	; 0x80016f <max_conversion_cycles>
    159e:	10 92 70 01 	sts	0x0170, r1	; 0x800170 <max_conversion_cycles+0x1>
    15a2:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <max_conversion_cycles+0x2>
    15a6:	10 92 72 01 	sts	0x0172, r1	; 0x800172 <max_conversion_cycles+0x3>
    15aa:	61 15       	cp	r22, r1
    15ac:	71 05       	cpc	r23, r1
    15ae:	09 f4       	brne	.+2      	; 0x15b2 <qtm_ptc_start_measurement_seq+0x24>
    15b0:	db c0       	rjmp	.+438    	; 0x1768 <qtm_ptc_start_measurement_seq+0x1da>
    15b2:	00 97       	sbiw	r24, 0x00	; 0
    15b4:	09 f4       	brne	.+2      	; 0x15b8 <qtm_ptc_start_measurement_seq+0x2a>
    15b6:	d8 c0       	rjmp	.+432    	; 0x1768 <qtm_ptc_start_measurement_seq+0x1da>
    15b8:	20 91 6b 01 	lds	r18, 0x016B	; 0x80016b <touch_seq_lib_state>
    15bc:	22 23       	and	r18, r18
    15be:	09 f4       	brne	.+2      	; 0x15c2 <qtm_ptc_start_measurement_seq+0x34>
    15c0:	d5 c0       	rjmp	.+426    	; 0x176c <qtm_ptc_start_measurement_seq+0x1de>
    15c2:	24 30       	cpi	r18, 0x04	; 4
    15c4:	09 f0       	breq	.+2      	; 0x15c8 <qtm_ptc_start_measurement_seq+0x3a>
    15c6:	93 c0       	rjmp	.+294    	; 0x16ee <qtm_ptc_start_measurement_seq+0x160>
    15c8:	10 92 6e 01 	sts	0x016E, r1	; 0x80016e <ptc_eoc_ok_flag>
    15cc:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    15d0:	80 ff       	sbrs	r24, 0
    15d2:	8b c0       	rjmp	.+278    	; 0x16ea <qtm_ptc_start_measurement_seq+0x15c>
    15d4:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    15d8:	30 e0       	ldi	r19, 0x00	; 0
    15da:	a6 e0       	ldi	r26, 0x06	; 6
    15dc:	b0 e0       	ldi	r27, 0x00	; 0
    15de:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <__umulhisi3>
    15e2:	60 93 6f 01 	sts	0x016F, r22	; 0x80016f <max_conversion_cycles>
    15e6:	70 93 70 01 	sts	0x0170, r23	; 0x800170 <max_conversion_cycles+0x1>
    15ea:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <max_conversion_cycles+0x2>
    15ee:	90 93 72 01 	sts	0x0172, r25	; 0x800172 <max_conversion_cycles+0x3>
    15f2:	20 91 e3 00 	lds	r18, 0x00E3	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
    15f6:	2f 70       	andi	r18, 0x0F	; 15
    15f8:	dc 01       	movw	r26, r24
    15fa:	cb 01       	movw	r24, r22
    15fc:	82 0f       	add	r24, r18
    15fe:	91 1d       	adc	r25, r1
    1600:	a1 1d       	adc	r26, r1
    1602:	b1 1d       	adc	r27, r1
    1604:	80 93 6f 01 	sts	0x016F, r24	; 0x80016f <max_conversion_cycles>
    1608:	90 93 70 01 	sts	0x0170, r25	; 0x800170 <max_conversion_cycles+0x1>
    160c:	a0 93 71 01 	sts	0x0171, r26	; 0x800171 <max_conversion_cycles+0x2>
    1610:	b0 93 72 01 	sts	0x0172, r27	; 0x800172 <max_conversion_cycles+0x3>
    1614:	20 91 e4 00 	lds	r18, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
    1618:	27 70       	andi	r18, 0x07	; 7
    161a:	04 c0       	rjmp	.+8      	; 0x1624 <qtm_ptc_start_measurement_seq+0x96>
    161c:	88 0f       	add	r24, r24
    161e:	99 1f       	adc	r25, r25
    1620:	aa 1f       	adc	r26, r26
    1622:	bb 1f       	adc	r27, r27
    1624:	2a 95       	dec	r18
    1626:	d2 f7       	brpl	.-12     	; 0x161c <qtm_ptc_start_measurement_seq+0x8e>
    1628:	0e 96       	adiw	r24, 0x0e	; 14
    162a:	a1 1d       	adc	r26, r1
    162c:	b1 1d       	adc	r27, r1
    162e:	80 93 6f 01 	sts	0x016F, r24	; 0x80016f <max_conversion_cycles>
    1632:	90 93 70 01 	sts	0x0170, r25	; 0x800170 <max_conversion_cycles+0x1>
    1636:	a0 93 71 01 	sts	0x0171, r26	; 0x800171 <max_conversion_cycles+0x2>
    163a:	b0 93 72 01 	sts	0x0172, r27	; 0x800172 <max_conversion_cycles+0x3>
    163e:	20 91 e1 00 	lds	r18, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    1642:	23 70       	andi	r18, 0x03	; 3
    1644:	04 c0       	rjmp	.+8      	; 0x164e <qtm_ptc_start_measurement_seq+0xc0>
    1646:	88 0f       	add	r24, r24
    1648:	99 1f       	adc	r25, r25
    164a:	aa 1f       	adc	r26, r26
    164c:	bb 1f       	adc	r27, r27
    164e:	2a 95       	dec	r18
    1650:	d2 f7       	brpl	.-12     	; 0x1646 <qtm_ptc_start_measurement_seq+0xb8>
    1652:	22 e0       	ldi	r18, 0x02	; 2
    1654:	b6 95       	lsr	r27
    1656:	a7 95       	ror	r26
    1658:	97 95       	ror	r25
    165a:	87 95       	ror	r24
    165c:	2a 95       	dec	r18
    165e:	d1 f7       	brne	.-12     	; 0x1654 <qtm_ptc_start_measurement_seq+0xc6>
    1660:	80 93 6f 01 	sts	0x016F, r24	; 0x80016f <max_conversion_cycles>
    1664:	90 93 70 01 	sts	0x0170, r25	; 0x800170 <max_conversion_cycles+0x1>
    1668:	a0 93 71 01 	sts	0x0171, r26	; 0x800171 <max_conversion_cycles+0x2>
    166c:	b0 93 72 01 	sts	0x0172, r27	; 0x800172 <max_conversion_cycles+0x3>
    1670:	19 82       	std	Y+1, r1	; 0x01
    1672:	1a 82       	std	Y+2, r1	; 0x02
    1674:	1b 82       	std	Y+3, r1	; 0x03
    1676:	1c 82       	std	Y+4, r1	; 0x04
    1678:	21 e0       	ldi	r18, 0x01	; 1
    167a:	49 81       	ldd	r20, Y+1	; 0x01
    167c:	5a 81       	ldd	r21, Y+2	; 0x02
    167e:	6b 81       	ldd	r22, Y+3	; 0x03
    1680:	7c 81       	ldd	r23, Y+4	; 0x04
    1682:	48 17       	cp	r20, r24
    1684:	59 07       	cpc	r21, r25
    1686:	6a 07       	cpc	r22, r26
    1688:	7b 07       	cpc	r23, r27
    168a:	b0 f4       	brcc	.+44     	; 0x16b8 <qtm_ptc_start_measurement_seq+0x12a>
    168c:	30 91 6e 01 	lds	r19, 0x016E	; 0x80016e <ptc_eoc_ok_flag>
    1690:	33 23       	and	r19, r19
    1692:	29 f0       	breq	.+10     	; 0x169e <qtm_ptc_start_measurement_seq+0x110>
    1694:	89 83       	std	Y+1, r24	; 0x01
    1696:	9a 83       	std	Y+2, r25	; 0x02
    1698:	ab 83       	std	Y+3, r26	; 0x03
    169a:	bc 83       	std	Y+4, r27	; 0x04
    169c:	20 e0       	ldi	r18, 0x00	; 0
    169e:	49 81       	ldd	r20, Y+1	; 0x01
    16a0:	5a 81       	ldd	r21, Y+2	; 0x02
    16a2:	6b 81       	ldd	r22, Y+3	; 0x03
    16a4:	7c 81       	ldd	r23, Y+4	; 0x04
    16a6:	4f 5f       	subi	r20, 0xFF	; 255
    16a8:	5f 4f       	sbci	r21, 0xFF	; 255
    16aa:	6f 4f       	sbci	r22, 0xFF	; 255
    16ac:	7f 4f       	sbci	r23, 0xFF	; 255
    16ae:	49 83       	std	Y+1, r20	; 0x01
    16b0:	5a 83       	std	Y+2, r21	; 0x02
    16b2:	6b 83       	std	Y+3, r22	; 0x03
    16b4:	7c 83       	std	Y+4, r23	; 0x04
    16b6:	e1 cf       	rjmp	.-62     	; 0x167a <qtm_ptc_start_measurement_seq+0xec>
    16b8:	22 23       	and	r18, r18
    16ba:	b9 f0       	breq	.+46     	; 0x16ea <qtm_ptc_start_measurement_seq+0x15c>
    16bc:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    16c0:	80 ff       	sbrs	r24, 0
    16c2:	13 c0       	rjmp	.+38     	; 0x16ea <qtm_ptc_start_measurement_seq+0x15c>
    16c4:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7e00e0>
    16c8:	00 00       	nop
    16ca:	82 e1       	ldi	r24, 0x12	; 18
    16cc:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7e00e0>
    16d0:	00 00       	nop
    16d2:	81 e0       	ldi	r24, 0x01	; 1
    16d4:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    16d8:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <ptc_lockups>
    16dc:	90 91 68 01 	lds	r25, 0x0168	; 0x800168 <ptc_lockups+0x1>
    16e0:	01 96       	adiw	r24, 0x01	; 1
    16e2:	90 93 68 01 	sts	0x0168, r25	; 0x800168 <ptc_lockups+0x1>
    16e6:	80 93 67 01 	sts	0x0167, r24	; 0x800167 <ptc_lockups>
    16ea:	81 e0       	ldi	r24, 0x01	; 1
    16ec:	42 c0       	rjmp	.+132    	; 0x1772 <qtm_ptc_start_measurement_seq+0x1e4>
    16ee:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <qtm_acquisition_control_working_set_ptr+0x1>
    16f2:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <qtm_acquisition_control_working_set_ptr>
    16f6:	70 93 66 01 	sts	0x0166, r23	; 0x800166 <ptc_seq_measure_complete_pointer+0x1>
    16fa:	60 93 65 01 	sts	0x0165, r22	; 0x800165 <ptc_seq_measure_complete_pointer>
    16fe:	dc 01       	movw	r26, r24
    1700:	ed 91       	ld	r30, X+
    1702:	fc 91       	ld	r31, X
    1704:	82 81       	ldd	r24, Z+2	; 0x02
    1706:	80 34       	cpi	r24, 0x40	; 64
    1708:	11 f4       	brne	.+4      	; 0x170e <qtm_ptc_start_measurement_seq+0x180>
    170a:	88 e0       	ldi	r24, 0x08	; 8
    170c:	03 c0       	rjmp	.+6      	; 0x1714 <qtm_ptc_start_measurement_seq+0x186>
    170e:	80 38       	cpi	r24, 0x80	; 128
    1710:	79 f5       	brne	.+94     	; 0x1770 <qtm_ptc_start_measurement_seq+0x1e2>
    1712:	8a e0       	ldi	r24, 0x0A	; 10
    1714:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    1718:	e0 91 86 01 	lds	r30, 0x0186	; 0x800186 <qtm_acquisition_control_working_set_ptr>
    171c:	f0 91 87 01 	lds	r31, 0x0187	; 0x800187 <qtm_acquisition_control_working_set_ptr+0x1>
    1720:	01 90       	ld	r0, Z+
    1722:	f0 81       	ld	r31, Z
    1724:	e0 2d       	mov	r30, r0
    1726:	84 81       	ldd	r24, Z+4	; 0x04
    1728:	80 31       	cpi	r24, 0x10	; 16
    172a:	08 f0       	brcs	.+2      	; 0x172e <qtm_ptc_start_measurement_seq+0x1a0>
    172c:	80 e1       	ldi	r24, 0x10	; 16
    172e:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
    1732:	81 e0       	ldi	r24, 0x01	; 1
    1734:	84 bb       	out	0x14, r24	; 20
    1736:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
    173a:	10 92 6d 01 	sts	0x016D, r1	; 0x80016d <current_measure_channel+0x1>
    173e:	10 92 6c 01 	sts	0x016C, r1	; 0x80016c <current_measure_channel>
    1742:	0e 94 db 07 	call	0xfb6	; 0xfb6 <select_next_channel_to_measure>
    1746:	81 11       	cpse	r24, r1
    1748:	0b c0       	rjmp	.+22     	; 0x1760 <qtm_ptc_start_measurement_seq+0x1d2>
    174a:	84 e0       	ldi	r24, 0x04	; 4
    174c:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <touch_seq_lib_state>
    1750:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <current_measure_channel>
    1754:	90 91 6d 01 	lds	r25, 0x016D	; 0x80016d <current_measure_channel+0x1>
    1758:	0e 94 0e 08 	call	0x101c	; 0x101c <qtm_measure_node>
    175c:	80 e0       	ldi	r24, 0x00	; 0
    175e:	09 c0       	rjmp	.+18     	; 0x1772 <qtm_ptc_start_measurement_seq+0x1e4>
    1760:	82 e0       	ldi	r24, 0x02	; 2
    1762:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <touch_seq_lib_state>
    1766:	05 c0       	rjmp	.+10     	; 0x1772 <qtm_ptc_start_measurement_seq+0x1e4>
    1768:	8b e0       	ldi	r24, 0x0B	; 11
    176a:	03 c0       	rjmp	.+6      	; 0x1772 <qtm_ptc_start_measurement_seq+0x1e4>
    176c:	83 e0       	ldi	r24, 0x03	; 3
    176e:	01 c0       	rjmp	.+2      	; 0x1772 <qtm_ptc_start_measurement_seq+0x1e4>
    1770:	82 e0       	ldi	r24, 0x02	; 2
    1772:	0f 90       	pop	r0
    1774:	0f 90       	pop	r0
    1776:	0f 90       	pop	r0
    1778:	0f 90       	pop	r0
    177a:	df 91       	pop	r29
    177c:	cf 91       	pop	r28
    177e:	08 95       	ret

00001780 <qtm_enable_sensor_node>:
    1780:	00 97       	sbiw	r24, 0x00	; 0
    1782:	c9 f0       	breq	.+50     	; 0x17b6 <qtm_enable_sensor_node+0x36>
    1784:	dc 01       	movw	r26, r24
    1786:	ed 91       	ld	r30, X+
    1788:	fc 91       	ld	r31, X
    178a:	11 97       	sbiw	r26, 0x01	; 1
    178c:	20 81       	ld	r18, Z
    178e:	31 81       	ldd	r19, Z+1	; 0x01
    1790:	26 17       	cp	r18, r22
    1792:	37 07       	cpc	r19, r23
    1794:	90 f0       	brcs	.+36     	; 0x17ba <qtm_enable_sensor_node+0x3a>
    1796:	45 e0       	ldi	r20, 0x05	; 5
    1798:	46 9f       	mul	r20, r22
    179a:	90 01       	movw	r18, r0
    179c:	47 9f       	mul	r20, r23
    179e:	30 0d       	add	r19, r0
    17a0:	11 24       	eor	r1, r1
    17a2:	14 96       	adiw	r26, 0x04	; 4
    17a4:	ed 91       	ld	r30, X+
    17a6:	fc 91       	ld	r31, X
    17a8:	15 97       	sbiw	r26, 0x05	; 5
    17aa:	e2 0f       	add	r30, r18
    17ac:	f3 1f       	adc	r31, r19
    17ae:	81 e0       	ldi	r24, 0x01	; 1
    17b0:	80 83       	st	Z, r24
    17b2:	80 e0       	ldi	r24, 0x00	; 0
    17b4:	08 95       	ret
    17b6:	8b e0       	ldi	r24, 0x0B	; 11
    17b8:	08 95       	ret
    17ba:	82 e0       	ldi	r24, 0x02	; 2
    17bc:	08 95       	ret

000017be <qtm_calibrate_sensor_node>:
    17be:	00 97       	sbiw	r24, 0x00	; 0
    17c0:	d1 f1       	breq	.+116    	; 0x1836 <qtm_calibrate_sensor_node+0x78>
    17c2:	dc 01       	movw	r26, r24
    17c4:	ed 91       	ld	r30, X+
    17c6:	fc 91       	ld	r31, X
    17c8:	11 97       	sbiw	r26, 0x01	; 1
    17ca:	20 81       	ld	r18, Z
    17cc:	31 81       	ldd	r19, Z+1	; 0x01
    17ce:	26 17       	cp	r18, r22
    17d0:	37 07       	cpc	r19, r23
    17d2:	98 f1       	brcs	.+102    	; 0x183a <qtm_calibrate_sensor_node+0x7c>
    17d4:	22 81       	ldd	r18, Z+2	; 0x02
    17d6:	14 96       	adiw	r26, 0x04	; 4
    17d8:	ed 91       	ld	r30, X+
    17da:	fc 91       	ld	r31, X
    17dc:	15 97       	sbiw	r26, 0x05	; 5
    17de:	20 34       	cpi	r18, 0x40	; 64
    17e0:	59 f4       	brne	.+22     	; 0x17f8 <qtm_calibrate_sensor_node+0x3a>
    17e2:	85 e0       	ldi	r24, 0x05	; 5
    17e4:	86 9f       	mul	r24, r22
    17e6:	d0 01       	movw	r26, r0
    17e8:	87 9f       	mul	r24, r23
    17ea:	b0 0d       	add	r27, r0
    17ec:	11 24       	eor	r1, r1
    17ee:	ae 0f       	add	r26, r30
    17f0:	bf 1f       	adc	r27, r31
    17f2:	84 e3       	ldi	r24, 0x34	; 52
    17f4:	92 e0       	ldi	r25, 0x02	; 2
    17f6:	0c c0       	rjmp	.+24     	; 0x1810 <qtm_calibrate_sensor_node+0x52>
    17f8:	20 38       	cpi	r18, 0x80	; 128
    17fa:	81 f4       	brne	.+32     	; 0x181c <qtm_calibrate_sensor_node+0x5e>
    17fc:	85 e0       	ldi	r24, 0x05	; 5
    17fe:	86 9f       	mul	r24, r22
    1800:	d0 01       	movw	r26, r0
    1802:	87 9f       	mul	r24, r23
    1804:	b0 0d       	add	r27, r0
    1806:	11 24       	eor	r1, r1
    1808:	ae 0f       	add	r26, r30
    180a:	bf 1f       	adc	r27, r31
    180c:	87 e6       	ldi	r24, 0x67	; 103
    180e:	95 e0       	ldi	r25, 0x05	; 5
    1810:	14 96       	adiw	r26, 0x04	; 4
    1812:	9c 93       	st	X, r25
    1814:	8e 93       	st	-X, r24
    1816:	13 97       	sbiw	r26, 0x03	; 3
    1818:	80 e0       	ldi	r24, 0x00	; 0
    181a:	01 c0       	rjmp	.+2      	; 0x181e <qtm_calibrate_sensor_node+0x60>
    181c:	82 e0       	ldi	r24, 0x02	; 2
    181e:	95 e0       	ldi	r25, 0x05	; 5
    1820:	96 9f       	mul	r25, r22
    1822:	90 01       	movw	r18, r0
    1824:	97 9f       	mul	r25, r23
    1826:	30 0d       	add	r19, r0
    1828:	11 24       	eor	r1, r1
    182a:	e2 0f       	add	r30, r18
    182c:	f3 1f       	adc	r31, r19
    182e:	90 81       	ld	r25, Z
    1830:	92 60       	ori	r25, 0x02	; 2
    1832:	90 83       	st	Z, r25
    1834:	08 95       	ret
    1836:	8b e0       	ldi	r24, 0x0B	; 11
    1838:	08 95       	ret
    183a:	82 e0       	ldi	r24, 0x02	; 2
    183c:	08 95       	ret

0000183e <qtm_m328pb_ptc_handler_eoc>:
    183e:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7e00e0>
    1842:	81 e0       	ldi	r24, 0x01	; 1
    1844:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <ptc_eoc_ok_flag>
    1848:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
    184c:	60 91 ef 00 	lds	r22, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
    1850:	20 91 6c 01 	lds	r18, 0x016C	; 0x80016c <current_measure_channel>
    1854:	30 91 6d 01 	lds	r19, 0x016D	; 0x80016d <current_measure_channel+0x1>
    1858:	a9 01       	movw	r20, r18
    185a:	44 0f       	add	r20, r20
    185c:	55 1f       	adc	r21, r21
    185e:	e0 91 88 01 	lds	r30, 0x0188	; 0x800188 <qtm_raw_data_measurements_ptr>
    1862:	f0 91 89 01 	lds	r31, 0x0189	; 0x800189 <qtm_raw_data_measurements_ptr+0x1>
    1866:	e4 0f       	add	r30, r20
    1868:	f5 1f       	adc	r31, r21
    186a:	90 e0       	ldi	r25, 0x00	; 0
    186c:	96 2b       	or	r25, r22
    186e:	91 83       	std	Z+1, r25	; 0x01
    1870:	80 83       	st	Z, r24
    1872:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <good_eocs>
    1876:	90 91 6a 01 	lds	r25, 0x016A	; 0x80016a <good_eocs+0x1>
    187a:	01 96       	adiw	r24, 0x01	; 1
    187c:	90 93 6a 01 	sts	0x016A, r25	; 0x80016a <good_eocs+0x1>
    1880:	80 93 69 01 	sts	0x0169, r24	; 0x800169 <good_eocs>
    1884:	89 2b       	or	r24, r25
    1886:	21 f4       	brne	.+8      	; 0x1890 <qtm_m328pb_ptc_handler_eoc+0x52>
    1888:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <ptc_lockups+0x1>
    188c:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <ptc_lockups>
    1890:	2f 5f       	subi	r18, 0xFF	; 255
    1892:	3f 4f       	sbci	r19, 0xFF	; 255
    1894:	30 93 6d 01 	sts	0x016D, r19	; 0x80016d <current_measure_channel+0x1>
    1898:	20 93 6c 01 	sts	0x016C, r18	; 0x80016c <current_measure_channel>
    189c:	0e 94 db 07 	call	0xfb6	; 0xfb6 <select_next_channel_to_measure>
    18a0:	81 11       	cpse	r24, r1
    18a2:	09 c0       	rjmp	.+18     	; 0x18b6 <qtm_m328pb_ptc_handler_eoc+0x78>
    18a4:	84 e0       	ldi	r24, 0x04	; 4
    18a6:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <touch_seq_lib_state>
    18aa:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <current_measure_channel>
    18ae:	90 91 6d 01 	lds	r25, 0x016D	; 0x80016d <current_measure_channel+0x1>
    18b2:	0c 94 0e 08 	jmp	0x101c	; 0x101c <qtm_measure_node>
    18b6:	e0 91 65 01 	lds	r30, 0x0165	; 0x800165 <ptc_seq_measure_complete_pointer>
    18ba:	f0 91 66 01 	lds	r31, 0x0166	; 0x800166 <ptc_seq_measure_complete_pointer+0x1>
    18be:	09 94       	ijmp

000018c0 <__umulhisi3>:
    18c0:	a2 9f       	mul	r26, r18
    18c2:	b0 01       	movw	r22, r0
    18c4:	b3 9f       	mul	r27, r19
    18c6:	c0 01       	movw	r24, r0
    18c8:	a3 9f       	mul	r26, r19
    18ca:	70 0d       	add	r23, r0
    18cc:	81 1d       	adc	r24, r1
    18ce:	11 24       	eor	r1, r1
    18d0:	91 1d       	adc	r25, r1
    18d2:	b2 9f       	mul	r27, r18
    18d4:	70 0d       	add	r23, r0
    18d6:	81 1d       	adc	r24, r1
    18d8:	11 24       	eor	r1, r1
    18da:	91 1d       	adc	r25, r1
    18dc:	08 95       	ret

000018de <_exit>:
    18de:	f8 94       	cli

000018e0 <__stop_program>:
    18e0:	ff cf       	rjmp	.-2      	; 0x18e0 <__stop_program>
