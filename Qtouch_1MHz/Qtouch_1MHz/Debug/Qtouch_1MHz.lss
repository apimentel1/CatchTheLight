
Qtouch_1MHz.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000052  00800100  00001874  00001908  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001874  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000034  00800152  00800152  0000195a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000195a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000198c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000178  00000000  00000000  000019cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d4e  00000000  00000000  00001b44  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ee6  00000000  00000000  00003892  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bb0  00000000  00000000  00004778  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000340  00000000  00000000  00005328  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000012f7  00000000  00000000  00005668  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000690  00000000  00000000  0000695f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  00006fef  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
       4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
       8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
       c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__vector_4>
      14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      2c:	0c 94 8a 01 	jmp	0x314	; 0x314 <__vector_11>
      30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      38:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__vector_14>
      3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      94:	0c 94 37 03 	jmp	0x66e	; 0x66e <__vector_37>
      98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
      b4:	11 24       	eor	r1, r1
      b6:	1f be       	out	0x3f, r1	; 63
      b8:	cf ef       	ldi	r28, 0xFF	; 255
      ba:	d8 e0       	ldi	r29, 0x08	; 8
      bc:	de bf       	out	0x3e, r29	; 62
      be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
      c0:	11 e0       	ldi	r17, 0x01	; 1
      c2:	a0 e0       	ldi	r26, 0x00	; 0
      c4:	b1 e0       	ldi	r27, 0x01	; 1
      c6:	e4 e7       	ldi	r30, 0x74	; 116
      c8:	f8 e1       	ldi	r31, 0x18	; 24
      ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
      cc:	05 90       	lpm	r0, Z+
      ce:	0d 92       	st	X+, r0
      d0:	a2 35       	cpi	r26, 0x52	; 82
      d2:	b1 07       	cpc	r27, r17
      d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
      d6:	21 e0       	ldi	r18, 0x01	; 1
      d8:	a2 e5       	ldi	r26, 0x52	; 82
      da:	b1 e0       	ldi	r27, 0x01	; 1
      dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
      de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
      e0:	a6 38       	cpi	r26, 0x86	; 134
      e2:	b2 07       	cpc	r27, r18
      e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
      e6:	0e 94 52 02 	call	0x4a4	; 0x4a4 <main>
      ea:	0c 94 38 0c 	jmp	0x1870	; 0x1870 <_exit>

000000ee <__bad_interrupt>:
      ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
      f2:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <system_init>

	touch_init();
      f6:	0e 94 b1 02 	call	0x562	; 0x562 <touch_init>
      fa:	08 95       	ret

000000fc <__vector_14>:

#include <driver_init.h>
#include <compiler.h>

ISR(TIMER0_COMPA_vect)
{
      fc:	1f 92       	push	r1
      fe:	0f 92       	push	r0
     100:	0f b6       	in	r0, 0x3f	; 63
     102:	0f 92       	push	r0
     104:	11 24       	eor	r1, r1
     106:	2f 93       	push	r18
     108:	3f 93       	push	r19
     10a:	4f 93       	push	r20
     10c:	5f 93       	push	r21
     10e:	6f 93       	push	r22
     110:	7f 93       	push	r23
     112:	8f 93       	push	r24
     114:	9f 93       	push	r25
     116:	af 93       	push	r26
     118:	bf 93       	push	r27
     11a:	ef 93       	push	r30
     11c:	ff 93       	push	r31

	mega_touch_timer();
     11e:	0e 94 11 03 	call	0x622	; 0x622 <mega_touch_timer>

	/* Clear the timer flag */
	TIFR0 |= OCF0A;
     122:	a8 9a       	sbi	0x15, 0	; 21
}
     124:	ff 91       	pop	r31
     126:	ef 91       	pop	r30
     128:	bf 91       	pop	r27
     12a:	af 91       	pop	r26
     12c:	9f 91       	pop	r25
     12e:	8f 91       	pop	r24
     130:	7f 91       	pop	r23
     132:	6f 91       	pop	r22
     134:	5f 91       	pop	r21
     136:	4f 91       	pop	r20
     138:	3f 91       	pop	r19
     13a:	2f 91       	pop	r18
     13c:	0f 90       	pop	r0
     13e:	0f be       	out	0x3f, r0	; 63
     140:	0f 90       	pop	r0
     142:	1f 90       	pop	r1
     144:	18 95       	reti

00000146 <is_touched>:
	}
}

uint8_t is_touched()
{	
	touch_process();
     146:	0e 94 d5 02 	call	0x5aa	; 0x5aa <touch_process>
	return (get_sensor_state(0) & 0x80) != 0;//return 1 if touched
     14a:	80 e0       	ldi	r24, 0x00	; 0
     14c:	90 e0       	ldi	r25, 0x00	; 0
     14e:	0e 94 28 03 	call	0x650	; 0x650 <get_sensor_state>
											//return 0 if not touched
}
     152:	88 1f       	adc	r24, r24
     154:	88 27       	eor	r24, r24
     156:	88 1f       	adc	r24, r24
     158:	08 95       	ret

0000015a <FlashPort>:
	}
}

void FlashPort(int Led)
{
	PORTD &= 0x0; //turn off all led
     15a:	2b b1       	in	r18, 0x0b	; 11
     15c:	1b b8       	out	0x0b, r1	; 11
	PORTB &= 0x0;
     15e:	25 b1       	in	r18, 0x05	; 5
     160:	15 b8       	out	0x05, r1	; 5
	PORTC &= 0x0;
     162:	28 b1       	in	r18, 0x08	; 8
     164:	18 b8       	out	0x08, r1	; 8
	//Flashreg is the index into array Ledtab
	//Ex Led # |1|2|3|...|15|16|
	//Ledtab # |0|1|2|...|14|15|
	if(Led < 4 || Led > 12)
     166:	9c 01       	movw	r18, r24
     168:	24 50       	subi	r18, 0x04	; 4
     16a:	31 09       	sbc	r19, r1
     16c:	29 30       	cpi	r18, 0x09	; 9
     16e:	31 05       	cpc	r19, r1
     170:	80 f0       	brcs	.+32     	; 0x192 <FlashPort+0x38>
	{
		PORTD |= (1<< Ledtab[Led]);
     172:	4b b1       	in	r20, 0x0b	; 11
     174:	fc 01       	movw	r30, r24
     176:	ef 5e       	subi	r30, 0xEF	; 239
     178:	fe 4f       	sbci	r31, 0xFE	; 254
     17a:	21 e0       	ldi	r18, 0x01	; 1
     17c:	30 e0       	ldi	r19, 0x00	; 0
     17e:	c9 01       	movw	r24, r18
     180:	00 80       	ld	r0, Z
     182:	02 c0       	rjmp	.+4      	; 0x188 <FlashPort+0x2e>
     184:	88 0f       	add	r24, r24
     186:	99 1f       	adc	r25, r25
     188:	0a 94       	dec	r0
     18a:	e2 f7       	brpl	.-8      	; 0x184 <FlashPort+0x2a>
     18c:	84 2b       	or	r24, r20
     18e:	8b b9       	out	0x0b, r24	; 11
     190:	08 95       	ret
	}
	else if(Led < 8)
     192:	88 30       	cpi	r24, 0x08	; 8
     194:	91 05       	cpc	r25, r1
     196:	84 f4       	brge	.+32     	; 0x1b8 <FlashPort+0x5e>
	{
		PORTC |= (1<< Ledtab[Led]);
     198:	48 b1       	in	r20, 0x08	; 8
     19a:	fc 01       	movw	r30, r24
     19c:	ef 5e       	subi	r30, 0xEF	; 239
     19e:	fe 4f       	sbci	r31, 0xFE	; 254
     1a0:	21 e0       	ldi	r18, 0x01	; 1
     1a2:	30 e0       	ldi	r19, 0x00	; 0
     1a4:	c9 01       	movw	r24, r18
     1a6:	00 80       	ld	r0, Z
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <FlashPort+0x54>
     1aa:	88 0f       	add	r24, r24
     1ac:	99 1f       	adc	r25, r25
     1ae:	0a 94       	dec	r0
     1b0:	e2 f7       	brpl	.-8      	; 0x1aa <FlashPort+0x50>
     1b2:	84 2b       	or	r24, r20
     1b4:	88 b9       	out	0x08, r24	; 8
     1b6:	08 95       	ret
	}
	else
	{
		PORTB |= (1<< Ledtab[Led]);
     1b8:	45 b1       	in	r20, 0x05	; 5
     1ba:	fc 01       	movw	r30, r24
     1bc:	ef 5e       	subi	r30, 0xEF	; 239
     1be:	fe 4f       	sbci	r31, 0xFE	; 254
     1c0:	21 e0       	ldi	r18, 0x01	; 1
     1c2:	30 e0       	ldi	r19, 0x00	; 0
     1c4:	c9 01       	movw	r24, r18
     1c6:	00 80       	ld	r0, Z
     1c8:	02 c0       	rjmp	.+4      	; 0x1ce <FlashPort+0x74>
     1ca:	88 0f       	add	r24, r24
     1cc:	99 1f       	adc	r25, r25
     1ce:	0a 94       	dec	r0
     1d0:	e2 f7       	brpl	.-8      	; 0x1ca <FlashPort+0x70>
     1d2:	84 2b       	or	r24, r20
     1d4:	85 b9       	out	0x05, r24	; 5
     1d6:	08 95       	ret

000001d8 <All_On>:
	}
}

void All_On (int Flashtime)
{
     1d8:	ac 01       	movw	r20, r24
	int Count = 0;
	while (Count < Flashtime)
     1da:	18 16       	cp	r1, r24
     1dc:	19 06       	cpc	r1, r25
     1de:	1c f5       	brge	.+70     	; 0x226 <All_On+0x4e>
     1e0:	20 e0       	ldi	r18, 0x00	; 0
     1e2:	30 e0       	ldi	r19, 0x00	; 0
	{
		PORTB |= 0x1F; //all on
     1e4:	95 b1       	in	r25, 0x05	; 5
     1e6:	9f 61       	ori	r25, 0x1F	; 31
     1e8:	95 b9       	out	0x05, r25	; 5
		PORTD |= 0xEF;
     1ea:	9b b1       	in	r25, 0x0b	; 11
     1ec:	9f 6e       	ori	r25, 0xEF	; 239
     1ee:	9b b9       	out	0x0b, r25	; 11
		PORTC |= 0x3C;
     1f0:	98 b1       	in	r25, 0x08	; 8
     1f2:	9c 63       	ori	r25, 0x3C	; 60
     1f4:	98 b9       	out	0x08, r25	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1f6:	87 ea       	ldi	r24, 0xA7	; 167
     1f8:	91 e6       	ldi	r25, 0x61	; 97
     1fa:	01 97       	sbiw	r24, 0x01	; 1
     1fc:	f1 f7       	brne	.-4      	; 0x1fa <All_On+0x22>
     1fe:	00 c0       	rjmp	.+0      	; 0x200 <All_On+0x28>
     200:	00 00       	nop
		_delay_ms(100);
		
		PORTB &= 0x0;
     202:	85 b1       	in	r24, 0x05	; 5
     204:	15 b8       	out	0x05, r1	; 5
		PORTD &= 0x08; //all off but PD3 the target led
     206:	9b b1       	in	r25, 0x0b	; 11
     208:	98 70       	andi	r25, 0x08	; 8
     20a:	9b b9       	out	0x0b, r25	; 11
		PORTC &= 0x0;
     20c:	88 b1       	in	r24, 0x08	; 8
     20e:	18 b8       	out	0x08, r1	; 8
     210:	87 ea       	ldi	r24, 0xA7	; 167
     212:	91 e6       	ldi	r25, 0x61	; 97
     214:	01 97       	sbiw	r24, 0x01	; 1
     216:	f1 f7       	brne	.-4      	; 0x214 <All_On+0x3c>
     218:	00 c0       	rjmp	.+0      	; 0x21a <All_On+0x42>
     21a:	00 00       	nop
		_delay_ms(100);
		Count++;
     21c:	2f 5f       	subi	r18, 0xFF	; 255
     21e:	3f 4f       	sbci	r19, 0xFF	; 255
}

void All_On (int Flashtime)
{
	int Count = 0;
	while (Count < Flashtime)
     220:	42 17       	cp	r20, r18
     222:	53 07       	cpc	r21, r19
     224:	f9 f6       	brne	.-66     	; 0x1e4 <All_On+0xc>
     226:	08 95       	ret

00000228 <Did_you_catch_the_light>:
											//return 0 if not touched
}

void Did_you_catch_the_light()
{
	if(Flashreg == 0) //is led 1 on
     228:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <Flashreg>
     22c:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <Flashreg+0x1>
     230:	89 2b       	or	r24, r25
     232:	69 f5       	brne	.+90     	; 0x28e <Did_you_catch_the_light+0x66>
	{
		All_On(5); //flash all leds to show that you won
     234:	85 e0       	ldi	r24, 0x05	; 5
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <All_On>
		Direction ^= 1; //change direction
     23c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <Direction>
     240:	81 e0       	ldi	r24, 0x01	; 1
     242:	89 27       	eor	r24, r25
     244:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <Direction>
		if(Win_time > 2)//if you win twice
     248:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     24c:	83 30       	cpi	r24, 0x03	; 3
     24e:	c8 f0       	brcs	.+50     	; 0x282 <Did_you_catch_the_light+0x5a>
		{
			Delayreg++; //increase the speed
     250:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <Delayreg>
     254:	8f 5f       	subi	r24, 0xFF	; 255
			if(Delayreg > MaxDelay) //if delayreg is greater then the Maxdelay 
     256:	85 30       	cpi	r24, 0x05	; 5
     258:	18 f4       	brcc	.+6      	; 0x260 <Did_you_catch_the_light+0x38>
	{
		All_On(5); //flash all leds to show that you won
		Direction ^= 1; //change direction
		if(Win_time > 2)//if you win twice
		{
			Delayreg++; //increase the speed
     25a:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <Delayreg>
     25e:	04 c0       	rjmp	.+8      	; 0x268 <Did_you_catch_the_light+0x40>
			if(Delayreg > MaxDelay) //if delayreg is greater then the Maxdelay 
			{
				Delayreg = 0; //you beat the game and reset
     260:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <Delayreg>
				Win_time = 0;
     264:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
			}
			OCR1A = DelayTimes[Delayreg]; //update CTC register 
     268:	e0 91 58 01 	lds	r30, 0x0158	; 0x800158 <Delayreg>
     26c:	f0 e0       	ldi	r31, 0x00	; 0
     26e:	ee 0f       	add	r30, r30
     270:	ff 1f       	adc	r31, r31
     272:	e9 5f       	subi	r30, 0xF9	; 249
     274:	fe 4f       	sbci	r31, 0xFE	; 254
     276:	80 81       	ld	r24, Z
     278:	91 81       	ldd	r25, Z+1	; 0x01
     27a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     27e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
		}
		Win_time++;
     282:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     286:	8f 5f       	subi	r24, 0xFF	; 255
     288:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     28c:	08 95       	ret
	}
	else
	{
		FlashPort(Flashreg);
     28e:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <Flashreg>
     292:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <Flashreg+0x1>
     296:	0e 94 ad 00 	call	0x15a	; 0x15a <FlashPort>
		if(Direction & (Flashreg>12) || !Direction & (Flashreg<4)) //stop you from cheating!!!!!
     29a:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <Direction>
     29e:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <Flashreg>
     2a2:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <Flashreg+0x1>
     2a6:	41 e0       	ldi	r20, 0x01	; 1
     2a8:	50 e0       	ldi	r21, 0x00	; 0
     2aa:	0d 97       	sbiw	r24, 0x0d	; 13
     2ac:	14 f4       	brge	.+4      	; 0x2b2 <Did_you_catch_the_light+0x8a>
     2ae:	40 e0       	ldi	r20, 0x00	; 0
     2b0:	50 e0       	ldi	r21, 0x00	; 0
     2b2:	82 2f       	mov	r24, r18
     2b4:	90 e0       	ldi	r25, 0x00	; 0
     2b6:	84 23       	and	r24, r20
     2b8:	95 23       	and	r25, r21
     2ba:	89 2b       	or	r24, r25
     2bc:	81 f4       	brne	.+32     	; 0x2de <Did_you_catch_the_light+0xb6>
     2be:	40 91 56 01 	lds	r20, 0x0156	; 0x800156 <Flashreg>
     2c2:	50 91 57 01 	lds	r21, 0x0157	; 0x800157 <Flashreg+0x1>
     2c6:	81 e0       	ldi	r24, 0x01	; 1
     2c8:	21 11       	cpse	r18, r1
     2ca:	80 e0       	ldi	r24, 0x00	; 0
     2cc:	88 23       	and	r24, r24
     2ce:	59 f0       	breq	.+22     	; 0x2e6 <Did_you_catch_the_light+0xbe>
     2d0:	81 e0       	ldi	r24, 0x01	; 1
     2d2:	44 30       	cpi	r20, 0x04	; 4
     2d4:	51 05       	cpc	r21, r1
     2d6:	0c f0       	brlt	.+2      	; 0x2da <Did_you_catch_the_light+0xb2>
     2d8:	80 e0       	ldi	r24, 0x00	; 0
     2da:	88 23       	and	r24, r24
     2dc:	21 f0       	breq	.+8      	; 0x2e6 <Did_you_catch_the_light+0xbe>
			Direction ^=1; //change the direction if you are 3 leds before reaching led 1
     2de:	81 e0       	ldi	r24, 0x01	; 1
     2e0:	28 27       	eor	r18, r24
     2e2:	20 93 01 01 	sts	0x0101, r18	; 0x800101 <Direction>
		Delayreg = 0; //reset to start speed
     2e6:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <Delayreg>
		OCR1A = DelayTimes[0]; //update CTC register 
     2ea:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <DelayTimes>
     2ee:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <DelayTimes+0x1>
     2f2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     2f6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
     2fa:	2f e9       	ldi	r18, 0x9F	; 159
     2fc:	86 e8       	ldi	r24, 0x86	; 134
     2fe:	91 e0       	ldi	r25, 0x01	; 1
     300:	21 50       	subi	r18, 0x01	; 1
     302:	80 40       	sbci	r24, 0x00	; 0
     304:	90 40       	sbci	r25, 0x00	; 0
     306:	e1 f7       	brne	.-8      	; 0x300 <Did_you_catch_the_light+0xd8>
     308:	00 c0       	rjmp	.+0      	; 0x30a <Did_you_catch_the_light+0xe2>
     30a:	00 00       	nop
		_delay_ms(500); //wait
		Win_time = 1; //reset win times
     30c:	81 e0       	ldi	r24, 0x01	; 1
     30e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     312:	08 95       	ret

00000314 <__vector_11>:
		Count++;
	}
}

ISR(TIMER1_COMPA_vect)
{
     314:	1f 92       	push	r1
     316:	0f 92       	push	r0
     318:	0f b6       	in	r0, 0x3f	; 63
     31a:	0f 92       	push	r0
     31c:	11 24       	eor	r1, r1
     31e:	8f 93       	push	r24
     320:	9f 93       	push	r25
	if (!StopGame)
     322:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <StopGame>
     326:	81 11       	cpse	r24, r1
     328:	35 c0       	rjmp	.+106    	; 0x394 <__vector_11+0x80>
	{
		if (Direction)
     32a:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <Direction>
     32e:	88 23       	and	r24, r24
     330:	b9 f0       	breq	.+46     	; 0x360 <__vector_11+0x4c>
		{
			Flashreg = (Flashreg + 1) & 15; //Increment Flashreg until 15 then reset to 0
     332:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <Flashreg>
     336:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <Flashreg+0x1>
     33a:	01 96       	adiw	r24, 0x01	; 1
     33c:	8f 70       	andi	r24, 0x0F	; 15
     33e:	99 27       	eor	r25, r25
     340:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <Flashreg+0x1>
     344:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <Flashreg>
			if (Flashreg == 0)
     348:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <Flashreg>
     34c:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <Flashreg+0x1>
     350:	89 2b       	or	r24, r25
     352:	01 f5       	brne	.+64     	; 0x394 <__vector_11+0x80>
			{
				Cyclecount++;
     354:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <Cyclecount>
     358:	8f 5f       	subi	r24, 0xFF	; 255
     35a:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <Cyclecount>
     35e:	1a c0       	rjmp	.+52     	; 0x394 <__vector_11+0x80>
			}
		}
		else
		{
			Flashreg--; //Decrement Flashreg
     360:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <Flashreg>
     364:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <Flashreg+0x1>
     368:	01 97       	sbiw	r24, 0x01	; 1
     36a:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <Flashreg+0x1>
     36e:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <Flashreg>
			
			if (Flashreg < 0) //when below 0
     372:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <Flashreg>
     376:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <Flashreg+0x1>
     37a:	99 23       	and	r25, r25
     37c:	5c f4       	brge	.+22     	; 0x394 <__vector_11+0x80>
			{
				Flashreg = 15; //reset to 15
     37e:	8f e0       	ldi	r24, 0x0F	; 15
     380:	90 e0       	ldi	r25, 0x00	; 0
     382:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <Flashreg+0x1>
     386:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <Flashreg>
				Cyclecount++;
     38a:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <Cyclecount>
     38e:	8f 5f       	subi	r24, 0xFF	; 255
     390:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <Cyclecount>
			}
		}
	}
}
     394:	9f 91       	pop	r25
     396:	8f 91       	pop	r24
     398:	0f 90       	pop	r0
     39a:	0f be       	out	0x3f, r0	; 63
     39c:	0f 90       	pop	r0
     39e:	1f 90       	pop	r1
     3a0:	18 95       	reti

000003a2 <__vector_4>:

ISR(PCINT1_vect)
{
     3a2:	1f 92       	push	r1
     3a4:	0f 92       	push	r0
     3a6:	0f b6       	in	r0, 0x3f	; 63
     3a8:	0f 92       	push	r0
     3aa:	11 24       	eor	r1, r1
     3ac:	2f 93       	push	r18
     3ae:	3f 93       	push	r19
     3b0:	4f 93       	push	r20
     3b2:	5f 93       	push	r21
     3b4:	6f 93       	push	r22
     3b6:	7f 93       	push	r23
     3b8:	8f 93       	push	r24
     3ba:	9f 93       	push	r25
     3bc:	af 93       	push	r26
     3be:	bf 93       	push	r27
     3c0:	ef 93       	push	r30
     3c2:	ff 93       	push	r31
	if(((PINC & (1<<Button)) == 0) && is_Button)
     3c4:	31 99       	sbic	0x06, 1	; 6
     3c6:	12 c0       	rjmp	.+36     	; 0x3ec <__vector_4+0x4a>
     3c8:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <__data_end>
     3cc:	88 23       	and	r24, r24
     3ce:	71 f0       	breq	.+28     	; 0x3ec <__vector_4+0x4a>
	{
		StopGame = 1; //stop the interrupt from going off and change the led value
     3d0:	81 e0       	ldi	r24, 0x01	; 1
     3d2:	80 93 55 01 	sts	0x0155, r24	; 0x800155 <StopGame>
		Did_you_catch_the_light(); //check to see if you won
     3d6:	0e 94 14 01 	call	0x228	; 0x228 <Did_you_catch_the_light>
		TCNT1 = 0; //reset time
     3da:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
     3de:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
		StopGame = 0; //enable interrupt to change led
     3e2:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <StopGame>
		Cyclecount = 0; //reset time count
     3e6:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <Cyclecount>
     3ea:	05 c0       	rjmp	.+10     	; 0x3f6 <__vector_4+0x54>
	}
	else
	{
		if(((PINC & (1<<Pulluppin)) == 0))
     3ec:	30 99       	sbic	0x06, 0	; 6
     3ee:	03 c0       	rjmp	.+6      	; 0x3f6 <__vector_4+0x54>
		{
			is_Button = 1;
     3f0:	81 e0       	ldi	r24, 0x01	; 1
     3f2:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <__data_end>
		{
			is_Button == 0;
		}
	}
	
}
     3f6:	ff 91       	pop	r31
     3f8:	ef 91       	pop	r30
     3fa:	bf 91       	pop	r27
     3fc:	af 91       	pop	r26
     3fe:	9f 91       	pop	r25
     400:	8f 91       	pop	r24
     402:	7f 91       	pop	r23
     404:	6f 91       	pop	r22
     406:	5f 91       	pop	r21
     408:	4f 91       	pop	r20
     40a:	3f 91       	pop	r19
     40c:	2f 91       	pop	r18
     40e:	0f 90       	pop	r0
     410:	0f be       	out	0x3f, r0	; 63
     412:	0f 90       	pop	r0
     414:	1f 90       	pop	r1
     416:	18 95       	reti

00000418 <Enter_sleep>:

void Enter_sleep()
{
	//add code to go to sleep
	PORTD &= 0x00; //turn off all led
     418:	8b b1       	in	r24, 0x0b	; 11
     41a:	1b b8       	out	0x0b, r1	; 11
	PORTB &= 0x00;
     41c:	85 b1       	in	r24, 0x05	; 5
     41e:	15 b8       	out	0x05, r1	; 5
	PORTC &= 0x00;
     420:	88 b1       	in	r24, 0x08	; 8
     422:	18 b8       	out	0x08, r1	; 8
	TIMSK1 &= ~(1<<OCIE1A);
     424:	ef e6       	ldi	r30, 0x6F	; 111
     426:	f0 e0       	ldi	r31, 0x00	; 0
     428:	80 81       	ld	r24, Z
     42a:	8d 7f       	andi	r24, 0xFD	; 253
     42c:	80 83       	st	Z, r24
	StopGame = 1;
     42e:	81 e0       	ldi	r24, 0x01	; 1
     430:	80 93 55 01 	sts	0x0155, r24	; 0x800155 <StopGame>
	sleep = 1;
     434:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <sleep>
	
	if(Direction & (Flashreg>12) || !Direction & (Flashreg<4)) //stop you from cheating!!!!!
     438:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <Direction>
     43c:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <Flashreg>
     440:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <Flashreg+0x1>
     444:	41 e0       	ldi	r20, 0x01	; 1
     446:	50 e0       	ldi	r21, 0x00	; 0
     448:	0d 97       	sbiw	r24, 0x0d	; 13
     44a:	14 f4       	brge	.+4      	; 0x450 <Enter_sleep+0x38>
     44c:	40 e0       	ldi	r20, 0x00	; 0
     44e:	50 e0       	ldi	r21, 0x00	; 0
     450:	82 2f       	mov	r24, r18
     452:	90 e0       	ldi	r25, 0x00	; 0
     454:	84 23       	and	r24, r20
     456:	95 23       	and	r25, r21
     458:	89 2b       	or	r24, r25
     45a:	81 f4       	brne	.+32     	; 0x47c <Enter_sleep+0x64>
     45c:	40 91 56 01 	lds	r20, 0x0156	; 0x800156 <Flashreg>
     460:	50 91 57 01 	lds	r21, 0x0157	; 0x800157 <Flashreg+0x1>
     464:	81 e0       	ldi	r24, 0x01	; 1
     466:	21 11       	cpse	r18, r1
     468:	80 e0       	ldi	r24, 0x00	; 0
     46a:	88 23       	and	r24, r24
     46c:	59 f0       	breq	.+22     	; 0x484 <Enter_sleep+0x6c>
     46e:	81 e0       	ldi	r24, 0x01	; 1
     470:	44 30       	cpi	r20, 0x04	; 4
     472:	51 05       	cpc	r21, r1
     474:	0c f0       	brlt	.+2      	; 0x478 <Enter_sleep+0x60>
     476:	80 e0       	ldi	r24, 0x00	; 0
     478:	88 23       	and	r24, r24
     47a:	21 f0       	breq	.+8      	; 0x484 <Enter_sleep+0x6c>
	Direction ^=1; //change the direction if you are 3 leds before reaching led 1
     47c:	81 e0       	ldi	r24, 0x01	; 1
     47e:	28 27       	eor	r18, r24
     480:	20 93 01 01 	sts	0x0101, r18	; 0x800101 <Direction>
	
	while(!is_touched())
     484:	0e 94 a3 00 	call	0x146	; 0x146 <is_touched>
     488:	88 23       	and	r24, r24
     48a:	e1 f3       	breq	.-8      	; 0x484 <Enter_sleep+0x6c>
	;//wait until touched
	TIMSK1 |= (1<<OCIE1A);
     48c:	ef e6       	ldi	r30, 0x6F	; 111
     48e:	f0 e0       	ldi	r31, 0x00	; 0
     490:	80 81       	ld	r24, Z
     492:	82 60       	ori	r24, 0x02	; 2
     494:	80 83       	st	Z, r24
	StopGame = 0; //enable interrupt to change led
     496:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <StopGame>
	Cyclecount = 0; //reset time count
     49a:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <Cyclecount>
	sleep = 0;
     49e:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <sleep>
     4a2:	08 95       	ret

000004a4 <main>:
uint8_t sleep =0;
uint8_t is_Button = 0;

int main(void)
{	
	DDRD = 0xFF;
     4a4:	8f ef       	ldi	r24, 0xFF	; 255
     4a6:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0xFF;
     4a8:	84 b9       	out	0x04, r24	; 4
	DDRC = 0xFF & ~(1<<Button) & ~(1<<Pulluppin);
     4aa:	8c ef       	ldi	r24, 0xFC	; 252
     4ac:	87 b9       	out	0x07, r24	; 7
	
	PORTB |= 0x0;
     4ae:	85 b1       	in	r24, 0x05	; 5
     4b0:	85 b9       	out	0x05, r24	; 5
	PORTD |= 0x0; //Turn off leds
     4b2:	8b b1       	in	r24, 0x0b	; 11
     4b4:	8b b9       	out	0x0b, r24	; 11
	PORTC |= 0x0 |(1<<Button) | (1<<Pulluppin);
     4b6:	88 b1       	in	r24, 0x08	; 8
     4b8:	83 60       	ori	r24, 0x03	; 3
     4ba:	88 b9       	out	0x08, r24	; 8
	
	atmel_start_init();
     4bc:	0e 94 79 00 	call	0xf2	; 0xf2 <atmel_start_init>
	cpu_irq_enable();
     4c0:	78 94       	sei
	cli();
     4c2:	f8 94       	cli
	TCCR1A = (0<<COM1A1)|(0<<COM1B1)|(0<<COM1A0)|(0<<COM1B0)|(0<<WGM11)|(0<<WGM10);//0x2; // This is in CTC Mode
     4c4:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	TCCR1B = (0<<ICNC1)|(0<<ICES1)|(0<<WGM13)|(1<<WGM12)|(1<<CS12)|(0<<CS11)|(0<<CS10); //256 pre)
     4c8:	8c e0       	ldi	r24, 0x0C	; 12
     4ca:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	TCCR1C = (0<<FOC1A)|(0<<FOC1B); //disable force output compare
     4ce:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7f8082>
	TIMSK1 = (0<<ICIE1)|(0<<OCIE1B)|(1<<OCIE1A)|(0<<TOIE1);
     4d2:	82 e0       	ldi	r24, 0x02	; 2
     4d4:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
	OCR1A = DelayTimes[0];
     4d8:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <DelayTimes>
     4dc:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <DelayTimes+0x1>
     4e0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     4e4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	
	PCICR |= (1 << PCIE1); //enable pin change interrupt for port c
     4e8:	e8 e6       	ldi	r30, 0x68	; 104
     4ea:	f0 e0       	ldi	r31, 0x00	; 0
     4ec:	80 81       	ld	r24, Z
     4ee:	82 60       	ori	r24, 0x02	; 2
     4f0:	80 83       	st	Z, r24
	PCMSK1 |= (1 << PCINT9)|(1<<PCINT8); //PCINT9 -> Push Button PCINT8 -> Pullup/Pulldown pin
     4f2:	ec e6       	ldi	r30, 0x6C	; 108
     4f4:	f0 e0       	ldi	r31, 0x00	; 0
     4f6:	80 81       	ld	r24, Z
     4f8:	83 60       	ori	r24, 0x03	; 3
     4fa:	80 83       	st	Z, r24
	
	All_On(5);//Flash all the lights on
     4fc:	85 e0       	ldi	r24, 0x05	; 5
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <All_On>
	sei();
     504:	78 94       	sei
	
	while( 1)
	{
		if(is_touched() && !is_Button) //check and see if the button was touched, if push button is not enable 
		{
			StopGame = 1; //stop the interrupt from going off and change the led value
     506:	11 e0       	ldi	r17, 0x01	; 1
			Did_you_catch_the_light(); //check to see if you won
			while (is_touched()) 
			;//wait until released
			TCNT1 = 0; //reset time
     508:	c4 e8       	ldi	r28, 0x84	; 132
     50a:	d0 e0       	ldi	r29, 0x00	; 0
	All_On(5);//Flash all the lights on
	sei();
	
	while( 1)
	{
		if(is_touched() && !is_Button) //check and see if the button was touched, if push button is not enable 
     50c:	0e 94 a3 00 	call	0x146	; 0x146 <is_touched>
     510:	88 23       	and	r24, r24
     512:	81 f0       	breq	.+32     	; 0x534 <main+0x90>
     514:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <__data_end>
     518:	81 11       	cpse	r24, r1
     51a:	0c c0       	rjmp	.+24     	; 0x534 <main+0x90>
		{
			StopGame = 1; //stop the interrupt from going off and change the led value
     51c:	10 93 55 01 	sts	0x0155, r17	; 0x800155 <StopGame>
			Did_you_catch_the_light(); //check to see if you won
     520:	0e 94 14 01 	call	0x228	; 0x228 <Did_you_catch_the_light>
			while (is_touched()) 
     524:	0e 94 a3 00 	call	0x146	; 0x146 <is_touched>
     528:	81 11       	cpse	r24, r1
     52a:	fc cf       	rjmp	.-8      	; 0x524 <main+0x80>
			;//wait until released
			TCNT1 = 0; //reset time
     52c:	19 82       	std	Y+1, r1	; 0x01
     52e:	18 82       	st	Y, r1
			StopGame = 0; //enable interrupt to change led
     530:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <StopGame>
		}
		if (Cyclecount >= Cyclestosleep[Delayreg])
     534:	e0 91 58 01 	lds	r30, 0x0158	; 0x800158 <Delayreg>
     538:	f0 e0       	ldi	r31, 0x00	; 0
     53a:	ee 5f       	subi	r30, 0xFE	; 254
     53c:	fe 4f       	sbci	r31, 0xFE	; 254
     53e:	90 81       	ld	r25, Z
     540:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <Cyclecount>
     544:	89 17       	cp	r24, r25
     546:	10 f0       	brcs	.+4      	; 0x54c <main+0xa8>
		{
			Enter_sleep();
     548:	0e 94 0c 02 	call	0x418	; 0x418 <Enter_sleep>
		}
		FlashPort(Flashreg); //strobe the led
     54c:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <Flashreg>
     550:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <Flashreg+0x1>
     554:	0e 94 ad 00 	call	0x15a	; 0x15a <FlashPort>
	}
     558:	d9 cf       	rjmp	.-78     	; 0x50c <main+0x68>

0000055a <qtm_measure_complete_callback>:
{
	/* Calibrate Node */
	qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_node);
	/* Initialize key */
	qtm_init_sensor_key(&qtlib_key_set1, sensor_node, &ptc_qtlib_node_stat1[sensor_node]);
}
     55a:	81 e0       	ldi	r24, 0x01	; 1
     55c:	80 93 5d 01 	sts	0x015D, r24	; 0x80015d <touch_postprocess_request>
     560:	08 95       	ret

00000562 <touch_init>:
     562:	88 e0       	ldi	r24, 0x08	; 8
     564:	87 bd       	out	0x27, r24	; 39
     566:	e5 e6       	ldi	r30, 0x65	; 101
     568:	f0 e0       	ldi	r31, 0x00	; 0
     56a:	80 81       	ld	r24, Z
     56c:	8f 7e       	andi	r24, 0xEF	; 239
     56e:	80 83       	st	Z, r24
     570:	73 98       	cbi	0x0e, 3	; 14
     572:	86 e3       	ldi	r24, 0x36	; 54
     574:	91 e0       	ldi	r25, 0x01	; 1
     576:	0e 94 ff 09 	call	0x13fe	; 0x13fe <qtm_ptc_init_acquisition_module>
     57a:	8a e7       	ldi	r24, 0x7A	; 122
     57c:	91 e0       	ldi	r25, 0x01	; 1
     57e:	0e 94 86 0a 	call	0x150c	; 0x150c <qtm_ptc_qtlib_assign_signal_memory>
     582:	60 e0       	ldi	r22, 0x00	; 0
     584:	70 e0       	ldi	r23, 0x00	; 0
     586:	86 e3       	ldi	r24, 0x36	; 54
     588:	91 e0       	ldi	r25, 0x01	; 1
     58a:	0e 94 89 0b 	call	0x1712	; 0x1712 <qtm_enable_sensor_node>
     58e:	60 e0       	ldi	r22, 0x00	; 0
     590:	70 e0       	ldi	r23, 0x00	; 0
     592:	86 e3       	ldi	r24, 0x36	; 54
     594:	91 e0       	ldi	r25, 0x01	; 1
     596:	0e 94 a8 0b 	call	0x1750	; 0x1750 <qtm_calibrate_sensor_node>
     59a:	45 e7       	ldi	r20, 0x75	; 117
     59c:	51 e0       	ldi	r21, 0x01	; 1
     59e:	60 e0       	ldi	r22, 0x00	; 0
     5a0:	81 e2       	ldi	r24, 0x21	; 33
     5a2:	91 e0       	ldi	r25, 0x01	; 1
     5a4:	0e 94 df 03 	call	0x7be	; 0x7be <qtm_init_sensor_key>
     5a8:	08 95       	ret

000005aa <touch_process>:
     5aa:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <time_to_measure_touch_flag>
     5ae:	81 30       	cpi	r24, 0x01	; 1
     5b0:	51 f4       	brne	.+20     	; 0x5c6 <touch_process+0x1c>
     5b2:	6d ea       	ldi	r22, 0xAD	; 173
     5b4:	72 e0       	ldi	r23, 0x02	; 2
     5b6:	86 e3       	ldi	r24, 0x36	; 54
     5b8:	91 e0       	ldi	r25, 0x01	; 1
     5ba:	0e 94 90 0a 	call	0x1520	; 0x1520 <qtm_ptc_start_measurement_seq>
     5be:	81 11       	cpse	r24, r1
     5c0:	02 c0       	rjmp	.+4      	; 0x5c6 <touch_process+0x1c>
     5c2:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <time_to_measure_touch_flag>
     5c6:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <touch_postprocess_request>
     5ca:	81 30       	cpi	r24, 0x01	; 1
     5cc:	09 f5       	brne	.+66     	; 0x610 <touch_process+0x66>
     5ce:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <touch_postprocess_request>
     5d2:	0e 94 98 08 	call	0x1130	; 0x1130 <qtm_acquisition_process>
     5d6:	81 11       	cpse	r24, r1
     5d8:	0a c0       	rjmp	.+20     	; 0x5ee <touch_process+0x44>
     5da:	81 e2       	ldi	r24, 0x21	; 33
     5dc:	91 e0       	ldi	r25, 0x01	; 1
     5de:	0e 94 fe 03 	call	0x7fc	; 0x7fc <qtm_key_sensors_process>
     5e2:	88 23       	and	r24, r24
     5e4:	39 f0       	breq	.+14     	; 0x5f4 <touch_process+0x4a>
     5e6:	82 e0       	ldi	r24, 0x02	; 2
     5e8:	80 93 5b 01 	sts	0x015B, r24	; 0x80015b <module_error_code>
     5ec:	03 c0       	rjmp	.+6      	; 0x5f4 <touch_process+0x4a>
     5ee:	81 e0       	ldi	r24, 0x01	; 1
     5f0:	80 93 5b 01 	sts	0x015B, r24	; 0x80015b <module_error_code>
     5f4:	e0 91 21 01 	lds	r30, 0x0121	; 0x800121 <qtlib_key_set1>
     5f8:	f0 91 22 01 	lds	r31, 0x0122	; 0x800122 <qtlib_key_set1+0x1>
     5fc:	80 81       	ld	r24, Z
     5fe:	88 23       	and	r24, r24
     600:	24 f4       	brge	.+8      	; 0x60a <touch_process+0x60>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <time_to_measure_touch_flag>
     608:	08 95       	ret
     60a:	81 e0       	ldi	r24, 0x01	; 1
     60c:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <measurement_done_touch>
     610:	08 95       	ret

00000612 <touch_timer_handler>:
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <time_to_measure_touch_flag>
     618:	84 e1       	ldi	r24, 0x14	; 20
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <qtm_update_qtlib_timer>
     620:	08 95       	ret

00000622 <mega_touch_timer>:
     622:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <touch_time_counter.2360>
     626:	90 91 5a 01 	lds	r25, 0x015A	; 0x80015a <touch_time_counter.2360+0x1>
     62a:	44 97       	sbiw	r24, 0x14	; 20
     62c:	39 f4       	brne	.+14     	; 0x63c <mega_touch_timer+0x1a>
     62e:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <touch_time_counter.2360+0x1>
     632:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <touch_time_counter.2360>
     636:	0e 94 09 03 	call	0x612	; 0x612 <touch_timer_handler>
     63a:	08 95       	ret
     63c:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <touch_time_counter.2360>
     640:	90 91 5a 01 	lds	r25, 0x015A	; 0x80015a <touch_time_counter.2360+0x1>
     644:	01 96       	adiw	r24, 0x01	; 1
     646:	90 93 5a 01 	sts	0x015A, r25	; 0x80015a <touch_time_counter.2360+0x1>
     64a:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <touch_time_counter.2360>
     64e:	08 95       	ret

00000650 <get_sensor_state>:
     650:	9c 01       	movw	r18, r24
     652:	22 0f       	add	r18, r18
     654:	33 1f       	adc	r19, r19
     656:	82 0f       	add	r24, r18
     658:	93 1f       	adc	r25, r19
     65a:	88 0f       	add	r24, r24
     65c:	99 1f       	adc	r25, r25
     65e:	e0 91 25 01 	lds	r30, 0x0125	; 0x800125 <qtlib_key_set1+0x4>
     662:	f0 91 26 01 	lds	r31, 0x0126	; 0x800126 <qtlib_key_set1+0x5>
     666:	e8 0f       	add	r30, r24
     668:	f9 1f       	adc	r31, r25
     66a:	80 81       	ld	r24, Z
     66c:	08 95       	ret

0000066e <__vector_37>:
Input  : none
Output : none
Notes  : none
============================================================================*/
ISR(PTC_EOC_vect)
{
     66e:	1f 92       	push	r1
     670:	0f 92       	push	r0
     672:	0f b6       	in	r0, 0x3f	; 63
     674:	0f 92       	push	r0
     676:	11 24       	eor	r1, r1
     678:	2f 93       	push	r18
     67a:	3f 93       	push	r19
     67c:	4f 93       	push	r20
     67e:	5f 93       	push	r21
     680:	6f 93       	push	r22
     682:	7f 93       	push	r23
     684:	8f 93       	push	r24
     686:	9f 93       	push	r25
     688:	af 93       	push	r26
     68a:	bf 93       	push	r27
     68c:	ef 93       	push	r30
     68e:	ff 93       	push	r31
	qtm_m328pb_ptc_handler_eoc();
     690:	0e 94 e8 0b 	call	0x17d0	; 0x17d0 <qtm_m328pb_ptc_handler_eoc>
}
     694:	ff 91       	pop	r31
     696:	ef 91       	pop	r30
     698:	bf 91       	pop	r27
     69a:	af 91       	pop	r26
     69c:	9f 91       	pop	r25
     69e:	8f 91       	pop	r24
     6a0:	7f 91       	pop	r23
     6a2:	6f 91       	pop	r22
     6a4:	5f 91       	pop	r21
     6a6:	4f 91       	pop	r20
     6a8:	3f 91       	pop	r19
     6aa:	2f 91       	pop	r18
     6ac:	0f 90       	pop	r0
     6ae:	0f be       	out	0x3f, r0	; 63
     6b0:	0f 90       	pop	r0
     6b2:	1f 90       	pop	r1
     6b4:	18 95       	reti

000006b6 <system_init>:

void Timer_initialization(void)

{

	Timer_init();
     6b6:	0e 94 5e 03 	call	0x6bc	; 0x6bc <Timer_init>
     6ba:	08 95       	ret

000006bc <Timer_init>:
 */
int8_t Timer_init()
{

	/* Enable TC0 */
	PRR0 &= ~(1 << PRTIM0);
     6bc:	e4 e6       	ldi	r30, 0x64	; 100
     6be:	f0 e0       	ldi	r31, 0x00	; 0
     6c0:	80 81       	ld	r24, Z
     6c2:	8f 7d       	andi	r24, 0xDF	; 223
     6c4:	80 83       	st	Z, r24

	TCCR0A = (0 << COM0A1) | (0 << COM0A0)   /* Normal port operation, OCA disconnected */
     6c6:	82 e0       	ldi	r24, 0x02	; 2
     6c8:	84 bd       	out	0x24, r24	; 36
	         | (0 << COM0B1) | (0 << COM0B0) /* Normal port operation, OCB disconnected */
	         | (1 << WGM01) | (0 << WGM00);  /* TC8 Mode 2 CTC */

	TCCR0B = 0                                          /* TC8 Mode 2 CTC */
     6ca:	95 e0       	ldi	r25, 0x05	; 5
     6cc:	95 bd       	out	0x25, r25	; 37
	         | (1 << CS02) | (0 << CS01) | (1 << CS00); /* IO clock divided by 1024 */

	TIMSK0 = 0 << OCIE0B   /* Output Compare B Match Interrupt Enable: disabled */
     6ce:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
	// GTCCR = 0 << TSM /* Timer/Counter Synchronization Mode: disabled */
	//		 | 0 << PSRASY /* Prescaler Reset Timer/Counter2: disabled */
	//		 | 0 << PSRSYNC; /* Prescaler Reset: disabled */

	return 0;
}
     6d2:	80 e0       	ldi	r24, 0x00	; 0
     6d4:	08 95       	ret

000006d6 <check_for_aks_block>:
     6d6:	cf 92       	push	r12
     6d8:	df 92       	push	r13
     6da:	ff 92       	push	r15
     6dc:	0f 93       	push	r16
     6de:	1f 93       	push	r17
     6e0:	cf 93       	push	r28
     6e2:	df 93       	push	r29
     6e4:	ec 01       	movw	r28, r24
     6e6:	ae 81       	ldd	r26, Y+6	; 0x06
     6e8:	bf 81       	ldd	r27, Y+7	; 0x07
     6ea:	eb 01       	movw	r28, r22
     6ec:	cc 0f       	add	r28, r28
     6ee:	dd 1f       	adc	r29, r29
     6f0:	c6 0f       	add	r28, r22
     6f2:	d7 1f       	adc	r29, r23
     6f4:	ca 0f       	add	r28, r26
     6f6:	db 1f       	adc	r29, r27
     6f8:	fa 80       	ldd	r15, Y+2	; 0x02
     6fa:	fc 01       	movw	r30, r24
     6fc:	44 81       	ldd	r20, Z+4	; 0x04
     6fe:	55 81       	ldd	r21, Z+5	; 0x05
     700:	e6 e0       	ldi	r30, 0x06	; 6
     702:	e6 9f       	mul	r30, r22
     704:	90 01       	movw	r18, r0
     706:	e7 9f       	mul	r30, r23
     708:	30 0d       	add	r19, r0
     70a:	11 24       	eor	r1, r1
     70c:	8a 01       	movw	r16, r20
     70e:	02 0f       	add	r16, r18
     710:	13 1f       	adc	r17, r19
     712:	f8 01       	movw	r30, r16
     714:	22 81       	ldd	r18, Z+2	; 0x02
     716:	33 81       	ldd	r19, Z+3	; 0x03
     718:	f9 01       	movw	r30, r18
     71a:	21 81       	ldd	r18, Z+1	; 0x01
     71c:	32 81       	ldd	r19, Z+2	; 0x02
     71e:	f8 01       	movw	r30, r16
     720:	04 81       	ldd	r16, Z+4	; 0x04
     722:	15 81       	ldd	r17, Z+5	; 0x05
     724:	20 1b       	sub	r18, r16
     726:	31 0b       	sbc	r19, r17
     728:	e8 81       	ld	r30, Y
     72a:	2e 1b       	sub	r18, r30
     72c:	31 09       	sbc	r19, r1
     72e:	ec 01       	movw	r28, r24
     730:	ea 81       	ldd	r30, Y+2	; 0x02
     732:	fb 81       	ldd	r31, Y+3	; 0x03
     734:	00 81       	ld	r16, Z
     736:	11 81       	ldd	r17, Z+1	; 0x01
     738:	fa 01       	movw	r30, r20
     73a:	40 e0       	ldi	r20, 0x00	; 0
     73c:	50 e0       	ldi	r21, 0x00	; 0
     73e:	40 17       	cp	r20, r16
     740:	51 07       	cpc	r21, r17
     742:	39 f1       	breq	.+78     	; 0x792 <check_for_aks_block+0xbc>
     744:	46 17       	cp	r20, r22
     746:	57 07       	cpc	r21, r23
     748:	f9 f0       	breq	.+62     	; 0x788 <check_for_aks_block+0xb2>
     74a:	12 96       	adiw	r26, 0x02	; 2
     74c:	8c 91       	ld	r24, X
     74e:	12 97       	sbiw	r26, 0x02	; 2
     750:	f8 12       	cpse	r15, r24
     752:	1a c0       	rjmp	.+52     	; 0x788 <check_for_aks_block+0xb2>
     754:	80 81       	ld	r24, Z
     756:	85 58       	subi	r24, 0x85	; 133
     758:	82 30       	cpi	r24, 0x02	; 2
     75a:	e8 f0       	brcs	.+58     	; 0x796 <check_for_aks_block+0xc0>
     75c:	c4 80       	ldd	r12, Z+4	; 0x04
     75e:	d5 80       	ldd	r13, Z+5	; 0x05
     760:	82 81       	ldd	r24, Z+2	; 0x02
     762:	93 81       	ldd	r25, Z+3	; 0x03
     764:	ec 01       	movw	r28, r24
     766:	89 81       	ldd	r24, Y+1	; 0x01
     768:	9a 81       	ldd	r25, Y+2	; 0x02
     76a:	c8 16       	cp	r12, r24
     76c:	d9 06       	cpc	r13, r25
     76e:	60 f4       	brcc	.+24     	; 0x788 <check_for_aks_block+0xb2>
     770:	8c 19       	sub	r24, r12
     772:	9d 09       	sbc	r25, r13
     774:	cc 91       	ld	r28, X
     776:	d0 e0       	ldi	r29, 0x00	; 0
     778:	c8 17       	cp	r28, r24
     77a:	d9 07       	cpc	r29, r25
     77c:	28 f4       	brcc	.+10     	; 0x788 <check_for_aks_block+0xb2>
     77e:	8c 1b       	sub	r24, r28
     780:	9d 0b       	sbc	r25, r29
     782:	28 17       	cp	r18, r24
     784:	39 07       	cpc	r19, r25
     786:	38 f0       	brcs	.+14     	; 0x796 <check_for_aks_block+0xc0>
     788:	4f 5f       	subi	r20, 0xFF	; 255
     78a:	5f 4f       	sbci	r21, 0xFF	; 255
     78c:	13 96       	adiw	r26, 0x03	; 3
     78e:	36 96       	adiw	r30, 0x06	; 6
     790:	d6 cf       	rjmp	.-84     	; 0x73e <check_for_aks_block+0x68>
     792:	80 e0       	ldi	r24, 0x00	; 0
     794:	01 c0       	rjmp	.+2      	; 0x798 <check_for_aks_block+0xc2>
     796:	81 e0       	ldi	r24, 0x01	; 1
     798:	df 91       	pop	r29
     79a:	cf 91       	pop	r28
     79c:	1f 91       	pop	r17
     79e:	0f 91       	pop	r16
     7a0:	ff 90       	pop	r15
     7a2:	df 90       	pop	r13
     7a4:	cf 90       	pop	r12
     7a6:	08 95       	ret

000007a8 <qtm_update_qtlib_timer>:
     7a8:	20 91 5f 01 	lds	r18, 0x015F	; 0x80015f <qtm_local_ms_timecount>
     7ac:	30 91 60 01 	lds	r19, 0x0160	; 0x800160 <qtm_local_ms_timecount+0x1>
     7b0:	82 0f       	add	r24, r18
     7b2:	93 1f       	adc	r25, r19
     7b4:	90 93 60 01 	sts	0x0160, r25	; 0x800160 <qtm_local_ms_timecount+0x1>
     7b8:	80 93 5f 01 	sts	0x015F, r24	; 0x80015f <qtm_local_ms_timecount>
     7bc:	08 95       	ret

000007be <qtm_init_sensor_key>:
     7be:	00 97       	sbiw	r24, 0x00	; 0
     7c0:	d9 f0       	breq	.+54     	; 0x7f8 <qtm_init_sensor_key+0x3a>
     7c2:	41 15       	cp	r20, r1
     7c4:	51 05       	cpc	r21, r1
     7c6:	c1 f0       	breq	.+48     	; 0x7f8 <qtm_init_sensor_key+0x3a>
     7c8:	26 e0       	ldi	r18, 0x06	; 6
     7ca:	62 9f       	mul	r22, r18
     7cc:	b0 01       	movw	r22, r0
     7ce:	11 24       	eor	r1, r1
     7d0:	dc 01       	movw	r26, r24
     7d2:	14 96       	adiw	r26, 0x04	; 4
     7d4:	ed 91       	ld	r30, X+
     7d6:	fc 91       	ld	r31, X
     7d8:	15 97       	sbiw	r26, 0x05	; 5
     7da:	e6 0f       	add	r30, r22
     7dc:	f7 1f       	adc	r31, r23
     7de:	21 e0       	ldi	r18, 0x01	; 1
     7e0:	20 83       	st	Z, r18
     7e2:	14 96       	adiw	r26, 0x04	; 4
     7e4:	8d 91       	ld	r24, X+
     7e6:	9c 91       	ld	r25, X
     7e8:	15 97       	sbiw	r26, 0x05	; 5
     7ea:	fc 01       	movw	r30, r24
     7ec:	e6 0f       	add	r30, r22
     7ee:	f7 1f       	adc	r31, r23
     7f0:	53 83       	std	Z+3, r21	; 0x03
     7f2:	42 83       	std	Z+2, r20	; 0x02
     7f4:	80 e0       	ldi	r24, 0x00	; 0
     7f6:	08 95       	ret
     7f8:	8b e0       	ldi	r24, 0x0B	; 11
     7fa:	08 95       	ret

000007fc <qtm_key_sensors_process>:
     7fc:	2f 92       	push	r2
     7fe:	3f 92       	push	r3
     800:	4f 92       	push	r4
     802:	5f 92       	push	r5
     804:	6f 92       	push	r6
     806:	7f 92       	push	r7
     808:	8f 92       	push	r8
     80a:	9f 92       	push	r9
     80c:	af 92       	push	r10
     80e:	bf 92       	push	r11
     810:	cf 92       	push	r12
     812:	df 92       	push	r13
     814:	ef 92       	push	r14
     816:	ff 92       	push	r15
     818:	0f 93       	push	r16
     81a:	1f 93       	push	r17
     81c:	cf 93       	push	r28
     81e:	df 93       	push	r29
     820:	00 97       	sbiw	r24, 0x00	; 0
     822:	09 f4       	brne	.+2      	; 0x826 <__DATA_REGION_LENGTH__+0x26>
     824:	7d c3       	rjmp	.+1786   	; 0xf20 <__stack+0x621>
     826:	ec 01       	movw	r28, r24
     828:	a1 2c       	mov	r10, r1
     82a:	b1 2c       	mov	r11, r1
     82c:	81 2c       	mov	r8, r1
     82e:	91 2c       	mov	r9, r1
     830:	21 2c       	mov	r2, r1
     832:	d1 2c       	mov	r13, r1
     834:	33 e0       	ldi	r19, 0x03	; 3
     836:	c3 2e       	mov	r12, r19
     838:	45 e8       	ldi	r20, 0x85	; 133
     83a:	64 2e       	mov	r6, r20
     83c:	56 e8       	ldi	r21, 0x86	; 134
     83e:	75 2e       	mov	r7, r21
     840:	67 e0       	ldi	r22, 0x07	; 7
     842:	36 2e       	mov	r3, r22
     844:	72 e0       	ldi	r23, 0x02	; 2
     846:	47 2e       	mov	r4, r23
     848:	e8 e0       	ldi	r30, 0x08	; 8
     84a:	5e 2e       	mov	r5, r30
     84c:	ea 81       	ldd	r30, Y+2	; 0x02
     84e:	fb 81       	ldd	r31, Y+3	; 0x03
     850:	80 81       	ld	r24, Z
     852:	91 81       	ldd	r25, Z+1	; 0x01
     854:	88 16       	cp	r8, r24
     856:	99 06       	cpc	r9, r25
     858:	08 f0       	brcs	.+2      	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
     85a:	a5 c1       	rjmp	.+842    	; 0xba6 <__stack+0x2a7>
     85c:	75 01       	movw	r14, r10
     85e:	ee 0c       	add	r14, r14
     860:	ff 1c       	adc	r15, r15
     862:	0c 81       	ldd	r16, Y+4	; 0x04
     864:	1d 81       	ldd	r17, Y+5	; 0x05
     866:	0e 0d       	add	r16, r14
     868:	1f 1d       	adc	r17, r15
     86a:	d8 01       	movw	r26, r16
     86c:	8c 91       	ld	r24, X
     86e:	84 30       	cpi	r24, 0x04	; 4
     870:	09 f4       	brne	.+2      	; 0x874 <__DATA_REGION_LENGTH__+0x74>
     872:	a2 c0       	rjmp	.+324    	; 0x9b8 <__stack+0xb9>
     874:	38 f4       	brcc	.+14     	; 0x884 <__DATA_REGION_LENGTH__+0x84>
     876:	82 30       	cpi	r24, 0x02	; 2
     878:	01 f1       	breq	.+64     	; 0x8ba <__DATA_REGION_LENGTH__+0xba>
     87a:	08 f0       	brcs	.+2      	; 0x87e <__DATA_REGION_LENGTH__+0x7e>
     87c:	49 c0       	rjmp	.+146    	; 0x910 <__stack+0x11>
     87e:	81 30       	cpi	r24, 0x01	; 1
     880:	59 f0       	breq	.+22     	; 0x898 <__DATA_REGION_LENGTH__+0x98>
     882:	8a c1       	rjmp	.+788    	; 0xb98 <__stack+0x299>
     884:	85 38       	cpi	r24, 0x85	; 133
     886:	09 f4       	brne	.+2      	; 0x88a <__DATA_REGION_LENGTH__+0x8a>
     888:	c4 c0       	rjmp	.+392    	; 0xa12 <__stack+0x113>
     88a:	86 38       	cpi	r24, 0x86	; 134
     88c:	09 f4       	brne	.+2      	; 0x890 <__DATA_REGION_LENGTH__+0x90>
     88e:	f8 c0       	rjmp	.+496    	; 0xa80 <__stack+0x181>
     890:	87 30       	cpi	r24, 0x07	; 7
     892:	09 f0       	breq	.+2      	; 0x896 <__DATA_REGION_LENGTH__+0x96>
     894:	81 c1       	rjmp	.+770    	; 0xb98 <__stack+0x299>
     896:	39 c1       	rjmp	.+626    	; 0xb0a <__stack+0x20b>
     898:	d8 01       	movw	r26, r16
     89a:	12 96       	adiw	r26, 0x02	; 2
     89c:	ed 91       	ld	r30, X+
     89e:	fc 91       	ld	r31, X
     8a0:	13 97       	sbiw	r26, 0x03	; 3
     8a2:	80 81       	ld	r24, Z
     8a4:	8e 71       	andi	r24, 0x1E	; 30
     8a6:	09 f0       	breq	.+2      	; 0x8aa <__DATA_REGION_LENGTH__+0xaa>
     8a8:	69 c1       	rjmp	.+722    	; 0xb7c <__stack+0x27d>
     8aa:	4c 92       	st	X, r4
     8ac:	8c 81       	ldd	r24, Y+4	; 0x04
     8ae:	9d 81       	ldd	r25, Y+5	; 0x05
     8b0:	fc 01       	movw	r30, r24
     8b2:	ee 0d       	add	r30, r14
     8b4:	ff 1d       	adc	r31, r15
     8b6:	51 82       	std	Z+1, r5	; 0x01
     8b8:	61 c1       	rjmp	.+706    	; 0xb7c <__stack+0x27d>
     8ba:	f8 01       	movw	r30, r16
     8bc:	21 81       	ldd	r18, Z+1	; 0x01
     8be:	22 23       	and	r18, r18
     8c0:	29 f1       	breq	.+74     	; 0x90c <__stack+0xd>
     8c2:	02 80       	ldd	r0, Z+2	; 0x02
     8c4:	f3 81       	ldd	r31, Z+3	; 0x03
     8c6:	e0 2d       	mov	r30, r0
     8c8:	25 30       	cpi	r18, 0x05	; 5
     8ca:	20 f0       	brcs	.+8      	; 0x8d4 <__DATA_REGION_LENGTH__+0xd4>
     8cc:	81 81       	ldd	r24, Z+1	; 0x01
     8ce:	92 81       	ldd	r25, Z+2	; 0x02
     8d0:	d8 01       	movw	r26, r16
     8d2:	0e c0       	rjmp	.+28     	; 0x8f0 <__DATA_REGION_LENGTH__+0xf0>
     8d4:	d8 01       	movw	r26, r16
     8d6:	14 96       	adiw	r26, 0x04	; 4
     8d8:	8d 91       	ld	r24, X+
     8da:	9c 91       	ld	r25, X
     8dc:	15 97       	sbiw	r26, 0x05	; 5
     8de:	41 81       	ldd	r20, Z+1	; 0x01
     8e0:	52 81       	ldd	r21, Z+2	; 0x02
     8e2:	84 17       	cp	r24, r20
     8e4:	95 07       	cpc	r25, r21
     8e6:	69 f0       	breq	.+26     	; 0x902 <__stack+0x3>
     8e8:	48 17       	cp	r20, r24
     8ea:	59 07       	cpc	r21, r25
     8ec:	30 f4       	brcc	.+12     	; 0x8fa <__DATA_REGION_LENGTH__+0xfa>
     8ee:	01 97       	sbiw	r24, 0x01	; 1
     8f0:	15 96       	adiw	r26, 0x05	; 5
     8f2:	9c 93       	st	X, r25
     8f4:	8e 93       	st	-X, r24
     8f6:	14 97       	sbiw	r26, 0x04	; 4
     8f8:	04 c0       	rjmp	.+8      	; 0x902 <__stack+0x3>
     8fa:	01 96       	adiw	r24, 0x01	; 1
     8fc:	f8 01       	movw	r30, r16
     8fe:	95 83       	std	Z+5, r25	; 0x05
     900:	84 83       	std	Z+4, r24	; 0x04
     902:	21 50       	subi	r18, 0x01	; 1
     904:	d8 01       	movw	r26, r16
     906:	11 96       	adiw	r26, 0x01	; 1
     908:	2c 93       	st	X, r18
     90a:	38 c1       	rjmp	.+624    	; 0xb7c <__stack+0x27d>
     90c:	f8 01       	movw	r30, r16
     90e:	30 c1       	rjmp	.+608    	; 0xb70 <__stack+0x271>
     910:	d8 01       	movw	r26, r16
     912:	14 96       	adiw	r26, 0x04	; 4
     914:	2d 91       	ld	r18, X+
     916:	3c 91       	ld	r19, X
     918:	15 97       	sbiw	r26, 0x05	; 5
     91a:	12 96       	adiw	r26, 0x02	; 2
     91c:	8d 91       	ld	r24, X+
     91e:	9c 91       	ld	r25, X
     920:	13 97       	sbiw	r26, 0x03	; 3
     922:	dc 01       	movw	r26, r24
     924:	11 96       	adiw	r26, 0x01	; 1
     926:	4d 91       	ld	r20, X+
     928:	5c 91       	ld	r21, X
     92a:	12 97       	sbiw	r26, 0x02	; 2
     92c:	24 17       	cp	r18, r20
     92e:	35 07       	cpc	r19, r21
     930:	09 f4       	brne	.+2      	; 0x934 <__stack+0x35>
     932:	32 c1       	rjmp	.+612    	; 0xb98 <__stack+0x299>
     934:	8e 81       	ldd	r24, Y+6	; 0x06
     936:	9f 81       	ldd	r25, Y+7	; 0x07
     938:	42 17       	cp	r20, r18
     93a:	53 07       	cpc	r21, r19
     93c:	e0 f4       	brcc	.+56     	; 0x976 <__stack+0x77>
     93e:	24 1b       	sub	r18, r20
     940:	35 0b       	sbc	r19, r21
     942:	dc 01       	movw	r26, r24
     944:	aa 0d       	add	r26, r10
     946:	bb 1d       	adc	r27, r11
     948:	8c 91       	ld	r24, X
     94a:	90 e0       	ldi	r25, 0x00	; 0
     94c:	05 80       	ldd	r0, Z+5	; 0x05
     94e:	02 c0       	rjmp	.+4      	; 0x954 <__stack+0x55>
     950:	95 95       	asr	r25
     952:	87 95       	ror	r24
     954:	0a 94       	dec	r0
     956:	e2 f7       	brpl	.-8      	; 0x950 <__stack+0x51>
     958:	99 27       	eor	r25, r25
     95a:	28 17       	cp	r18, r24
     95c:	39 07       	cpc	r19, r25
     95e:	08 f4       	brcc	.+2      	; 0x962 <__stack+0x63>
     960:	1b c1       	rjmp	.+566    	; 0xb98 <__stack+0x299>
     962:	84 81       	ldd	r24, Z+4	; 0x04
     964:	88 23       	and	r24, r24
     966:	09 f4       	brne	.+2      	; 0x96a <__stack+0x6b>
     968:	17 c1       	rjmp	.+558    	; 0xb98 <__stack+0x299>
     96a:	f8 01       	movw	r30, r16
     96c:	30 82       	st	Z, r3
     96e:	ea 81       	ldd	r30, Y+2	; 0x02
     970:	fb 81       	ldd	r31, Y+3	; 0x03
     972:	24 81       	ldd	r18, Z+4	; 0x04
     974:	1a c0       	rjmp	.+52     	; 0x9aa <__stack+0xab>
     976:	fc 01       	movw	r30, r24
     978:	ea 0d       	add	r30, r10
     97a:	fb 1d       	adc	r31, r11
     97c:	42 1b       	sub	r20, r18
     97e:	53 0b       	sbc	r21, r19
     980:	80 81       	ld	r24, Z
     982:	90 e0       	ldi	r25, 0x00	; 0
     984:	48 17       	cp	r20, r24
     986:	59 07       	cpc	r21, r25
     988:	08 f4       	brcc	.+2      	; 0x98c <__stack+0x8d>
     98a:	06 c1       	rjmp	.+524    	; 0xb98 <__stack+0x299>
     98c:	82 81       	ldd	r24, Z+2	; 0x02
     98e:	88 23       	and	r24, r24
     990:	31 f0       	breq	.+12     	; 0x99e <__stack+0x9f>
     992:	b4 01       	movw	r22, r8
     994:	ce 01       	movw	r24, r28
     996:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <check_for_aks_block>
     99a:	81 11       	cpse	r24, r1
     99c:	fd c0       	rjmp	.+506    	; 0xb98 <__stack+0x299>
     99e:	e4 e0       	ldi	r30, 0x04	; 4
     9a0:	d8 01       	movw	r26, r16
     9a2:	ec 93       	st	X, r30
     9a4:	ea 81       	ldd	r30, Y+2	; 0x02
     9a6:	fb 81       	ldd	r31, Y+3	; 0x03
     9a8:	22 81       	ldd	r18, Z+2	; 0x02
     9aa:	8c 81       	ldd	r24, Y+4	; 0x04
     9ac:	9d 81       	ldd	r25, Y+5	; 0x05
     9ae:	fc 01       	movw	r30, r24
     9b0:	ee 0d       	add	r30, r14
     9b2:	ff 1d       	adc	r31, r15
     9b4:	21 83       	std	Z+1, r18	; 0x01
     9b6:	e2 c0       	rjmp	.+452    	; 0xb7c <__stack+0x27d>
     9b8:	d8 01       	movw	r26, r16
     9ba:	14 96       	adiw	r26, 0x04	; 4
     9bc:	2d 91       	ld	r18, X+
     9be:	3c 91       	ld	r19, X
     9c0:	15 97       	sbiw	r26, 0x05	; 5
     9c2:	12 96       	adiw	r26, 0x02	; 2
     9c4:	ed 91       	ld	r30, X+
     9c6:	fc 91       	ld	r31, X
     9c8:	13 97       	sbiw	r26, 0x03	; 3
     9ca:	81 81       	ldd	r24, Z+1	; 0x01
     9cc:	92 81       	ldd	r25, Z+2	; 0x02
     9ce:	82 17       	cp	r24, r18
     9d0:	93 07       	cpc	r25, r19
     9d2:	10 f4       	brcc	.+4      	; 0x9d8 <__stack+0xd9>
     9d4:	cc 92       	st	X, r12
     9d6:	d7 c0       	rjmp	.+430    	; 0xb86 <__stack+0x287>
     9d8:	ee 81       	ldd	r30, Y+6	; 0x06
     9da:	ff 81       	ldd	r31, Y+7	; 0x07
     9dc:	ea 0d       	add	r30, r10
     9de:	fb 1d       	adc	r31, r11
     9e0:	82 1b       	sub	r24, r18
     9e2:	93 0b       	sbc	r25, r19
     9e4:	20 81       	ld	r18, Z
     9e6:	30 e0       	ldi	r19, 0x00	; 0
     9e8:	28 17       	cp	r18, r24
     9ea:	39 07       	cpc	r19, r25
     9ec:	08 f0       	brcs	.+2      	; 0x9f0 <__stack+0xf1>
     9ee:	c9 c0       	rjmp	.+402    	; 0xb82 <__stack+0x283>
     9f0:	82 81       	ldd	r24, Z+2	; 0x02
     9f2:	88 23       	and	r24, r24
     9f4:	31 f0       	breq	.+12     	; 0xa02 <__stack+0x103>
     9f6:	b4 01       	movw	r22, r8
     9f8:	ce 01       	movw	r24, r28
     9fa:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <check_for_aks_block>
     9fe:	81 11       	cpse	r24, r1
     a00:	cb c0       	rjmp	.+406    	; 0xb98 <__stack+0x299>
     a02:	f8 01       	movw	r30, r16
     a04:	81 81       	ldd	r24, Z+1	; 0x01
     a06:	88 23       	and	r24, r24
     a08:	09 f4       	brne	.+2      	; 0xa0c <__stack+0x10d>
     a0a:	68 c0       	rjmp	.+208    	; 0xadc <__stack+0x1dd>
     a0c:	81 50       	subi	r24, 0x01	; 1
     a0e:	81 83       	std	Z+1, r24	; 0x01
     a10:	b5 c0       	rjmp	.+362    	; 0xb7c <__stack+0x27d>
     a12:	a8 81       	ld	r26, Y
     a14:	b9 81       	ldd	r27, Y+1	; 0x01
     a16:	80 85       	ldd	r24, Z+8	; 0x08
     a18:	13 96       	adiw	r26, 0x03	; 3
     a1a:	8c 93       	st	X, r24
     a1c:	ec 81       	ldd	r30, Y+4	; 0x04
     a1e:	fd 81       	ldd	r31, Y+5	; 0x05
     a20:	ee 0d       	add	r30, r14
     a22:	ff 1d       	adc	r31, r15
     a24:	44 81       	ldd	r20, Z+4	; 0x04
     a26:	55 81       	ldd	r21, Z+5	; 0x05
     a28:	a2 81       	ldd	r26, Z+2	; 0x02
     a2a:	b3 81       	ldd	r27, Z+3	; 0x03
     a2c:	11 96       	adiw	r26, 0x01	; 1
     a2e:	8d 91       	ld	r24, X+
     a30:	9c 91       	ld	r25, X
     a32:	12 97       	sbiw	r26, 0x02	; 2
     a34:	84 17       	cp	r24, r20
     a36:	95 07       	cpc	r25, r21
     a38:	c0 f0       	brcs	.+48     	; 0xa6a <__stack+0x16b>
     a3a:	ae 81       	ldd	r26, Y+6	; 0x06
     a3c:	bf 81       	ldd	r27, Y+7	; 0x07
     a3e:	aa 0d       	add	r26, r10
     a40:	bb 1d       	adc	r27, r11
     a42:	6c 91       	ld	r22, X
     a44:	26 2f       	mov	r18, r22
     a46:	30 e0       	ldi	r19, 0x00	; 0
     a48:	11 96       	adiw	r26, 0x01	; 1
     a4a:	7c 91       	ld	r23, X
     a4c:	7f 5f       	subi	r23, 0xFF	; 255
     a4e:	02 c0       	rjmp	.+4      	; 0xa54 <__stack+0x155>
     a50:	35 95       	asr	r19
     a52:	27 95       	ror	r18
     a54:	7a 95       	dec	r23
     a56:	e2 f7       	brpl	.-8      	; 0xa50 <__stack+0x151>
     a58:	84 1b       	sub	r24, r20
     a5a:	95 0b       	sbc	r25, r21
     a5c:	62 1b       	sub	r22, r18
     a5e:	26 2f       	mov	r18, r22
     a60:	30 e0       	ldi	r19, 0x00	; 0
     a62:	28 17       	cp	r18, r24
     a64:	39 07       	cpc	r19, r25
     a66:	08 f4       	brcc	.+2      	; 0xa6a <__stack+0x16b>
     a68:	95 c0       	rjmp	.+298    	; 0xb94 <__stack+0x295>
     a6a:	70 82       	st	Z, r7
     a6c:	ea 81       	ldd	r30, Y+2	; 0x02
     a6e:	fb 81       	ldd	r31, Y+3	; 0x03
     a70:	22 81       	ldd	r18, Z+2	; 0x02
     a72:	8c 81       	ldd	r24, Y+4	; 0x04
     a74:	9d 81       	ldd	r25, Y+5	; 0x05
     a76:	fc 01       	movw	r30, r24
     a78:	ee 0d       	add	r30, r14
     a7a:	ff 1d       	adc	r31, r15
     a7c:	21 83       	std	Z+1, r18	; 0x01
     a7e:	42 c0       	rjmp	.+132    	; 0xb04 <__stack+0x205>
     a80:	d8 01       	movw	r26, r16
     a82:	14 96       	adiw	r26, 0x04	; 4
     a84:	6d 91       	ld	r22, X+
     a86:	7c 91       	ld	r23, X
     a88:	15 97       	sbiw	r26, 0x05	; 5
     a8a:	12 96       	adiw	r26, 0x02	; 2
     a8c:	ed 91       	ld	r30, X+
     a8e:	fc 91       	ld	r31, X
     a90:	13 97       	sbiw	r26, 0x03	; 3
     a92:	21 81       	ldd	r18, Z+1	; 0x01
     a94:	32 81       	ldd	r19, Z+2	; 0x02
     a96:	26 17       	cp	r18, r22
     a98:	37 07       	cpc	r19, r23
     a9a:	58 f4       	brcc	.+22     	; 0xab2 <__stack+0x1b3>
     a9c:	11 96       	adiw	r26, 0x01	; 1
     a9e:	8c 91       	ld	r24, X
     aa0:	11 97       	sbiw	r26, 0x01	; 1
     aa2:	81 11       	cpse	r24, r1
     aa4:	02 c0       	rjmp	.+4      	; 0xaaa <__stack+0x1ab>
     aa6:	cc 92       	st	X, r12
     aa8:	75 c0       	rjmp	.+234    	; 0xb94 <__stack+0x295>
     aaa:	81 50       	subi	r24, 0x01	; 1
     aac:	f8 01       	movw	r30, r16
     aae:	81 83       	std	Z+1, r24	; 0x01
     ab0:	71 c0       	rjmp	.+226    	; 0xb94 <__stack+0x295>
     ab2:	ee 81       	ldd	r30, Y+6	; 0x06
     ab4:	ff 81       	ldd	r31, Y+7	; 0x07
     ab6:	ea 0d       	add	r30, r10
     ab8:	fb 1d       	adc	r31, r11
     aba:	80 81       	ld	r24, Z
     abc:	48 2f       	mov	r20, r24
     abe:	50 e0       	ldi	r21, 0x00	; 0
     ac0:	91 81       	ldd	r25, Z+1	; 0x01
     ac2:	9f 5f       	subi	r25, 0xFF	; 255
     ac4:	02 c0       	rjmp	.+4      	; 0xaca <__stack+0x1cb>
     ac6:	55 95       	asr	r21
     ac8:	47 95       	ror	r20
     aca:	9a 95       	dec	r25
     acc:	e2 f7       	brpl	.-8      	; 0xac6 <__stack+0x1c7>
     ace:	26 1b       	sub	r18, r22
     ad0:	37 0b       	sbc	r19, r23
     ad2:	84 1b       	sub	r24, r20
     ad4:	90 e0       	ldi	r25, 0x00	; 0
     ad6:	82 17       	cp	r24, r18
     ad8:	93 07       	cpc	r25, r19
     ada:	60 f4       	brcc	.+24     	; 0xaf4 <__stack+0x1f5>
     adc:	d8 01       	movw	r26, r16
     ade:	6c 92       	st	X, r6
     ae0:	ea 81       	ldd	r30, Y+2	; 0x02
     ae2:	fb 81       	ldd	r31, Y+3	; 0x03
     ae4:	23 81       	ldd	r18, Z+3	; 0x03
     ae6:	8c 81       	ldd	r24, Y+4	; 0x04
     ae8:	9d 81       	ldd	r25, Y+5	; 0x05
     aea:	fc 01       	movw	r30, r24
     aec:	ee 0d       	add	r30, r14
     aee:	ff 1d       	adc	r31, r15
     af0:	21 83       	std	Z+1, r18	; 0x01
     af2:	50 c0       	rjmp	.+160    	; 0xb94 <__stack+0x295>
     af4:	f8 01       	movw	r30, r16
     af6:	81 81       	ldd	r24, Z+1	; 0x01
     af8:	81 11       	cpse	r24, r1
     afa:	02 c0       	rjmp	.+4      	; 0xb00 <__stack+0x201>
     afc:	c0 82       	st	Z, r12
     afe:	4a c0       	rjmp	.+148    	; 0xb94 <__stack+0x295>
     b00:	81 50       	subi	r24, 0x01	; 1
     b02:	81 83       	std	Z+1, r24	; 0x01
     b04:	22 24       	eor	r2, r2
     b06:	23 94       	inc	r2
     b08:	39 c0       	rjmp	.+114    	; 0xb7c <__stack+0x27d>
     b0a:	d8 01       	movw	r26, r16
     b0c:	14 96       	adiw	r26, 0x04	; 4
     b0e:	2d 91       	ld	r18, X+
     b10:	3c 91       	ld	r19, X
     b12:	15 97       	sbiw	r26, 0x05	; 5
     b14:	12 96       	adiw	r26, 0x02	; 2
     b16:	8d 91       	ld	r24, X+
     b18:	9c 91       	ld	r25, X
     b1a:	13 97       	sbiw	r26, 0x03	; 3
     b1c:	dc 01       	movw	r26, r24
     b1e:	11 96       	adiw	r26, 0x01	; 1
     b20:	8d 91       	ld	r24, X+
     b22:	9c 91       	ld	r25, X
     b24:	12 97       	sbiw	r26, 0x02	; 2
     b26:	82 17       	cp	r24, r18
     b28:	93 07       	cpc	r25, r19
     b2a:	58 f5       	brcc	.+86     	; 0xb82 <__stack+0x283>
     b2c:	28 1b       	sub	r18, r24
     b2e:	39 0b       	sbc	r19, r25
     b30:	ae 81       	ldd	r26, Y+6	; 0x06
     b32:	bf 81       	ldd	r27, Y+7	; 0x07
     b34:	aa 0d       	add	r26, r10
     b36:	bb 1d       	adc	r27, r11
     b38:	8c 91       	ld	r24, X
     b3a:	90 e0       	ldi	r25, 0x00	; 0
     b3c:	05 80       	ldd	r0, Z+5	; 0x05
     b3e:	02 c0       	rjmp	.+4      	; 0xb44 <__stack+0x245>
     b40:	95 95       	asr	r25
     b42:	87 95       	ror	r24
     b44:	0a 94       	dec	r0
     b46:	e2 f7       	brpl	.-8      	; 0xb40 <__stack+0x241>
     b48:	99 27       	eor	r25, r25
     b4a:	28 17       	cp	r18, r24
     b4c:	39 07       	cpc	r19, r25
     b4e:	c8 f0       	brcs	.+50     	; 0xb82 <__stack+0x283>
     b50:	d8 01       	movw	r26, r16
     b52:	11 96       	adiw	r26, 0x01	; 1
     b54:	8c 91       	ld	r24, X
     b56:	11 97       	sbiw	r26, 0x01	; 1
     b58:	81 11       	cpse	r24, r1
     b5a:	0c c0       	rjmp	.+24     	; 0xb74 <__stack+0x275>
     b5c:	e1 e0       	ldi	r30, 0x01	; 1
     b5e:	ec 93       	st	X, r30
     b60:	8c 81       	ldd	r24, Y+4	; 0x04
     b62:	9d 81       	ldd	r25, Y+5	; 0x05
     b64:	fc 01       	movw	r30, r24
     b66:	ee 0d       	add	r30, r14
     b68:	ff 1d       	adc	r31, r15
     b6a:	02 80       	ldd	r0, Z+2	; 0x02
     b6c:	f3 81       	ldd	r31, Z+3	; 0x03
     b6e:	e0 2d       	mov	r30, r0
     b70:	c0 82       	st	Z, r12
     b72:	12 c0       	rjmp	.+36     	; 0xb98 <__stack+0x299>
     b74:	81 50       	subi	r24, 0x01	; 1
     b76:	d8 01       	movw	r26, r16
     b78:	11 96       	adiw	r26, 0x01	; 1
     b7a:	8c 93       	st	X, r24
     b7c:	dd 24       	eor	r13, r13
     b7e:	d3 94       	inc	r13
     b80:	0b c0       	rjmp	.+22     	; 0xb98 <__stack+0x299>
     b82:	f8 01       	movw	r30, r16
     b84:	c0 82       	st	Z, r12
     b86:	8c 81       	ldd	r24, Y+4	; 0x04
     b88:	9d 81       	ldd	r25, Y+5	; 0x05
     b8a:	fc 01       	movw	r30, r24
     b8c:	ee 0d       	add	r30, r14
     b8e:	ff 1d       	adc	r31, r15
     b90:	11 82       	std	Z+1, r1	; 0x01
     b92:	02 c0       	rjmp	.+4      	; 0xb98 <__stack+0x299>
     b94:	22 24       	eor	r2, r2
     b96:	23 94       	inc	r2
     b98:	ff ef       	ldi	r31, 0xFF	; 255
     b9a:	8f 1a       	sub	r8, r31
     b9c:	9f 0a       	sbc	r9, r31
     b9e:	83 e0       	ldi	r24, 0x03	; 3
     ba0:	a8 0e       	add	r10, r24
     ba2:	b1 1c       	adc	r11, r1
     ba4:	53 ce       	rjmp	.-858    	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
     ba6:	e8 81       	ld	r30, Y
     ba8:	f9 81       	ldd	r31, Y+1	; 0x01
     baa:	80 81       	ld	r24, Z
     bac:	87 ff       	sbrs	r24, 7
     bae:	23 c0       	rjmp	.+70     	; 0xbf6 <__stack+0x2f7>
     bb0:	40 e0       	ldi	r20, 0x00	; 0
     bb2:	50 e0       	ldi	r21, 0x00	; 0
     bb4:	20 e0       	ldi	r18, 0x00	; 0
     bb6:	30 e0       	ldi	r19, 0x00	; 0
     bb8:	ea 81       	ldd	r30, Y+2	; 0x02
     bba:	fb 81       	ldd	r31, Y+3	; 0x03
     bbc:	80 81       	ld	r24, Z
     bbe:	91 81       	ldd	r25, Z+1	; 0x01
     bc0:	28 17       	cp	r18, r24
     bc2:	39 07       	cpc	r19, r25
     bc4:	98 f4       	brcc	.+38     	; 0xbec <__stack+0x2ed>
     bc6:	ec 81       	ldd	r30, Y+4	; 0x04
     bc8:	fd 81       	ldd	r31, Y+5	; 0x05
     bca:	e4 0f       	add	r30, r20
     bcc:	f5 1f       	adc	r31, r21
     bce:	a2 81       	ldd	r26, Z+2	; 0x02
     bd0:	b3 81       	ldd	r27, Z+3	; 0x03
     bd2:	8c 91       	ld	r24, X
     bd4:	80 fd       	sbrc	r24, 0
     bd6:	05 c0       	rjmp	.+10     	; 0xbe2 <__stack+0x2e3>
     bd8:	90 81       	ld	r25, Z
     bda:	97 7f       	andi	r25, 0xF7	; 247
     bdc:	11 f0       	breq	.+4      	; 0xbe2 <__stack+0x2e3>
     bde:	81 60       	ori	r24, 0x01	; 1
     be0:	8c 93       	st	X, r24
     be2:	2f 5f       	subi	r18, 0xFF	; 255
     be4:	3f 4f       	sbci	r19, 0xFF	; 255
     be6:	4a 5f       	subi	r20, 0xFA	; 250
     be8:	5f 4f       	sbci	r21, 0xFF	; 255
     bea:	e6 cf       	rjmp	.-52     	; 0xbb8 <__stack+0x2b9>
     bec:	e8 81       	ld	r30, Y
     bee:	f9 81       	ldd	r31, Y+1	; 0x01
     bf0:	80 81       	ld	r24, Z
     bf2:	8f 77       	andi	r24, 0x7F	; 127
     bf4:	80 83       	st	Z, r24
     bf6:	d1 10       	cpse	r13, r1
     bf8:	07 c0       	rjmp	.+14     	; 0xc08 <__stack+0x309>
     bfa:	e8 81       	ld	r30, Y
     bfc:	f9 81       	ldd	r31, Y+1	; 0x01
     bfe:	21 10       	cpse	r2, r1
     c00:	6f c0       	rjmp	.+222    	; 0xce0 <__stack+0x3e1>
     c02:	80 81       	ld	r24, Z
     c04:	8e 7f       	andi	r24, 0xFE	; 254
     c06:	6e c0       	rjmp	.+220    	; 0xce4 <__stack+0x3e5>
     c08:	ea 81       	ldd	r30, Y+2	; 0x02
     c0a:	fb 81       	ldd	r31, Y+3	; 0x03
     c0c:	81 85       	ldd	r24, Z+9	; 0x09
     c0e:	88 23       	and	r24, r24
     c10:	a1 f3       	breq	.-24     	; 0xbfa <__stack+0x2fb>
     c12:	e8 81       	ld	r30, Y
     c14:	f9 81       	ldd	r31, Y+1	; 0x01
     c16:	80 81       	ld	r24, Z
     c18:	80 68       	ori	r24, 0x80	; 128
     c1a:	80 83       	st	Z, r24
     c1c:	ea 81       	ldd	r30, Y+2	; 0x02
     c1e:	fb 81       	ldd	r31, Y+3	; 0x03
     c20:	81 85       	ldd	r24, Z+9	; 0x09
     c22:	81 30       	cpi	r24, 0x01	; 1
     c24:	51 f7       	brne	.-44     	; 0xbfa <__stack+0x2fb>
     c26:	40 e0       	ldi	r20, 0x00	; 0
     c28:	50 e0       	ldi	r21, 0x00	; 0
     c2a:	20 e0       	ldi	r18, 0x00	; 0
     c2c:	30 e0       	ldi	r19, 0x00	; 0
     c2e:	96 e0       	ldi	r25, 0x06	; 6
     c30:	d9 2e       	mov	r13, r25
     c32:	ea 81       	ldd	r30, Y+2	; 0x02
     c34:	fb 81       	ldd	r31, Y+3	; 0x03
     c36:	60 81       	ld	r22, Z
     c38:	71 81       	ldd	r23, Z+1	; 0x01
     c3a:	26 17       	cp	r18, r22
     c3c:	37 07       	cpc	r19, r23
     c3e:	e8 f6       	brcc	.-70     	; 0xbfa <__stack+0x2fb>
     c40:	0c 81       	ldd	r16, Y+4	; 0x04
     c42:	1d 81       	ldd	r17, Y+5	; 0x05
     c44:	fa 01       	movw	r30, r20
     c46:	ee 0f       	add	r30, r30
     c48:	ff 1f       	adc	r31, r31
     c4a:	e0 0f       	add	r30, r16
     c4c:	f1 1f       	adc	r31, r17
     c4e:	80 81       	ld	r24, Z
     c50:	98 2f       	mov	r25, r24
     c52:	97 7f       	andi	r25, 0xF7	; 247
     c54:	a1 f1       	breq	.+104    	; 0xcbe <__stack+0x3bf>
     c56:	85 38       	cpi	r24, 0x85	; 133
     c58:	11 f0       	breq	.+4      	; 0xc5e <__stack+0x35f>
     c5a:	83 30       	cpi	r24, 0x03	; 3
     c5c:	b1 f5       	brne	.+108    	; 0xcca <__stack+0x3cb>
     c5e:	ee 80       	ldd	r14, Y+6	; 0x06
     c60:	ff 80       	ldd	r15, Y+7	; 0x07
     c62:	d7 01       	movw	r26, r14
     c64:	a4 0f       	add	r26, r20
     c66:	b5 1f       	adc	r27, r21
     c68:	12 96       	adiw	r26, 0x02	; 2
     c6a:	bc 90       	ld	r11, X
     c6c:	bb 20       	and	r11, r11
     c6e:	39 f1       	breq	.+78     	; 0xcbe <__stack+0x3bf>
     c70:	80 e0       	ldi	r24, 0x00	; 0
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	c1 2c       	mov	r12, r1
     c76:	86 17       	cp	r24, r22
     c78:	97 07       	cpc	r25, r23
     c7a:	f8 f4       	brcc	.+62     	; 0xcba <__stack+0x3bb>
     c7c:	28 17       	cp	r18, r24
     c7e:	39 07       	cpc	r19, r25
     c80:	d1 f0       	breq	.+52     	; 0xcb6 <__stack+0x3b7>
     c82:	d8 9e       	mul	r13, r24
     c84:	d0 01       	movw	r26, r0
     c86:	d9 9e       	mul	r13, r25
     c88:	b0 0d       	add	r27, r0
     c8a:	11 24       	eor	r1, r1
     c8c:	a0 0f       	add	r26, r16
     c8e:	b1 1f       	adc	r27, r17
     c90:	ac 91       	ld	r26, X
     c92:	a4 30       	cpi	r26, 0x04	; 4
     c94:	11 f0       	breq	.+4      	; 0xc9a <__stack+0x39b>
     c96:	a6 38       	cpi	r26, 0x86	; 134
     c98:	71 f4       	brne	.+28     	; 0xcb6 <__stack+0x3b7>
     c9a:	dc 01       	movw	r26, r24
     c9c:	aa 0f       	add	r26, r26
     c9e:	bb 1f       	adc	r27, r27
     ca0:	a8 0f       	add	r26, r24
     ca2:	b9 1f       	adc	r27, r25
     ca4:	ae 0d       	add	r26, r14
     ca6:	bf 1d       	adc	r27, r15
     ca8:	12 96       	adiw	r26, 0x02	; 2
     caa:	ac 91       	ld	r26, X
     cac:	ba 12       	cpse	r11, r26
     cae:	03 c0       	rjmp	.+6      	; 0xcb6 <__stack+0x3b7>
     cb0:	cb 01       	movw	r24, r22
     cb2:	cc 24       	eor	r12, r12
     cb4:	c3 94       	inc	r12
     cb6:	01 96       	adiw	r24, 0x01	; 1
     cb8:	de cf       	rjmp	.-68     	; 0xc76 <__stack+0x377>
     cba:	c1 10       	cpse	r12, r1
     cbc:	06 c0       	rjmp	.+12     	; 0xcca <__stack+0x3cb>
     cbe:	02 80       	ldd	r0, Z+2	; 0x02
     cc0:	f3 81       	ldd	r31, Z+3	; 0x03
     cc2:	e0 2d       	mov	r30, r0
     cc4:	80 81       	ld	r24, Z
     cc6:	8e 7f       	andi	r24, 0xFE	; 254
     cc8:	05 c0       	rjmp	.+10     	; 0xcd4 <__stack+0x3d5>
     cca:	02 80       	ldd	r0, Z+2	; 0x02
     ccc:	f3 81       	ldd	r31, Z+3	; 0x03
     cce:	e0 2d       	mov	r30, r0
     cd0:	80 81       	ld	r24, Z
     cd2:	81 60       	ori	r24, 0x01	; 1
     cd4:	80 83       	st	Z, r24
     cd6:	2f 5f       	subi	r18, 0xFF	; 255
     cd8:	3f 4f       	sbci	r19, 0xFF	; 255
     cda:	4d 5f       	subi	r20, 0xFD	; 253
     cdc:	5f 4f       	sbci	r21, 0xFF	; 255
     cde:	a9 cf       	rjmp	.-174    	; 0xc32 <__stack+0x333>
     ce0:	80 81       	ld	r24, Z
     ce2:	81 60       	ori	r24, 0x01	; 1
     ce4:	80 83       	st	Z, r24
     ce6:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <qtm_local_ms_timecount>
     cea:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <qtm_local_ms_timecount+0x1>
     cee:	e8 81       	ld	r30, Y
     cf0:	f9 81       	ldd	r31, Y+1	; 0x01
     cf2:	21 81       	ldd	r18, Z+1	; 0x01
     cf4:	32 81       	ldd	r19, Z+2	; 0x02
     cf6:	a9 01       	movw	r20, r18
     cf8:	48 53       	subi	r20, 0x38	; 56
     cfa:	5f 4f       	sbci	r21, 0xFF	; 255
     cfc:	48 17       	cp	r20, r24
     cfe:	59 07       	cpc	r21, r25
     d00:	38 f4       	brcc	.+14     	; 0xd10 <__stack+0x411>
     d02:	82 1b       	sub	r24, r18
     d04:	93 0b       	sbc	r25, r19
     d06:	aa 24       	eor	r10, r10
     d08:	a3 94       	inc	r10
     d0a:	a3 e0       	ldi	r26, 0x03	; 3
     d0c:	ba 2e       	mov	r11, r26
     d0e:	44 c0       	rjmp	.+136    	; 0xd98 <__stack+0x499>
     d10:	82 17       	cp	r24, r18
     d12:	93 07       	cpc	r25, r19
     d14:	10 f0       	brcs	.+4      	; 0xd1a <__stack+0x41b>
     d16:	80 e0       	ldi	r24, 0x00	; 0
     d18:	04 c1       	rjmp	.+520    	; 0xf22 <__stack+0x623>
     d1a:	82 1b       	sub	r24, r18
     d1c:	93 0b       	sbc	r25, r19
     d1e:	01 97       	sbiw	r24, 0x01	; 1
     d20:	89 3c       	cpi	r24, 0xC9	; 201
     d22:	91 05       	cpc	r25, r1
     d24:	c0 f3       	brcs	.-16     	; 0xd16 <__stack+0x417>
     d26:	ef cf       	rjmp	.-34     	; 0xd06 <__stack+0x407>
     d28:	88 5c       	subi	r24, 0xC8	; 200
     d2a:	91 09       	sbc	r25, r1
     d2c:	e8 81       	ld	r30, Y
     d2e:	f9 81       	ldd	r31, Y+1	; 0x01
     d30:	21 81       	ldd	r18, Z+1	; 0x01
     d32:	32 81       	ldd	r19, Z+2	; 0x02
     d34:	28 53       	subi	r18, 0x38	; 56
     d36:	3f 4f       	sbci	r19, 0xFF	; 255
     d38:	32 83       	std	Z+2, r19	; 0x02
     d3a:	21 83       	std	Z+1, r18	; 0x01
     d3c:	23 81       	ldd	r18, Z+3	; 0x03
     d3e:	21 11       	cpse	r18, r1
     d40:	96 c0       	rjmp	.+300    	; 0xe6e <__stack+0x56f>
     d42:	24 81       	ldd	r18, Z+4	; 0x04
     d44:	22 23       	and	r18, r18
     d46:	11 f0       	breq	.+4      	; 0xd4c <__stack+0x44d>
     d48:	21 50       	subi	r18, 0x01	; 1
     d4a:	24 83       	std	Z+4, r18	; 0x04
     d4c:	e8 81       	ld	r30, Y
     d4e:	f9 81       	ldd	r31, Y+1	; 0x01
     d50:	25 81       	ldd	r18, Z+5	; 0x05
     d52:	22 23       	and	r18, r18
     d54:	11 f0       	breq	.+4      	; 0xd5a <__stack+0x45b>
     d56:	21 50       	subi	r18, 0x01	; 1
     d58:	25 83       	std	Z+5, r18	; 0x05
     d5a:	8a 80       	ldd	r8, Y+2	; 0x02
     d5c:	9b 80       	ldd	r9, Y+3	; 0x03
     d5e:	d4 01       	movw	r26, r8
     d60:	16 96       	adiw	r26, 0x06	; 6
     d62:	2c 91       	ld	r18, X
     d64:	16 97       	sbiw	r26, 0x06	; 6
     d66:	21 11       	cpse	r18, r1
     d68:	1b c0       	rjmp	.+54     	; 0xda0 <__stack+0x4a1>
     d6a:	8a 80       	ldd	r8, Y+2	; 0x02
     d6c:	9b 80       	ldd	r9, Y+3	; 0x03
     d6e:	f4 01       	movw	r30, r8
     d70:	27 81       	ldd	r18, Z+7	; 0x07
     d72:	21 11       	cpse	r18, r1
     d74:	48 c0       	rjmp	.+144    	; 0xe06 <__stack+0x507>
     d76:	ea 81       	ldd	r30, Y+2	; 0x02
     d78:	fb 81       	ldd	r31, Y+3	; 0x03
     d7a:	23 81       	ldd	r18, Z+3	; 0x03
     d7c:	22 23       	and	r18, r18
     d7e:	61 f0       	breq	.+24     	; 0xd98 <__stack+0x499>
     d80:	20 e0       	ldi	r18, 0x00	; 0
     d82:	30 e0       	ldi	r19, 0x00	; 0
     d84:	a0 e0       	ldi	r26, 0x00	; 0
     d86:	b0 e0       	ldi	r27, 0x00	; 0
     d88:	ea 81       	ldd	r30, Y+2	; 0x02
     d8a:	fb 81       	ldd	r31, Y+3	; 0x03
     d8c:	40 81       	ld	r20, Z
     d8e:	51 81       	ldd	r21, Z+1	; 0x01
     d90:	a4 17       	cp	r26, r20
     d92:	b5 07       	cpc	r27, r21
     d94:	08 f4       	brcc	.+2      	; 0xd98 <__stack+0x499>
     d96:	6e c0       	rjmp	.+220    	; 0xe74 <__stack+0x575>
     d98:	89 3c       	cpi	r24, 0xC9	; 201
     d9a:	91 05       	cpc	r25, r1
     d9c:	28 f6       	brcc	.-118    	; 0xd28 <__stack+0x429>
     d9e:	bb cf       	rjmp	.-138    	; 0xd16 <__stack+0x417>
     da0:	08 81       	ld	r16, Y
     da2:	19 81       	ldd	r17, Y+1	; 0x01
     da4:	f8 01       	movw	r30, r16
     da6:	24 81       	ldd	r18, Z+4	; 0x04
     da8:	21 11       	cpse	r18, r1
     daa:	df cf       	rjmp	.-66     	; 0xd6a <__stack+0x46b>
     dac:	ed 90       	ld	r14, X+
     dae:	fc 90       	ld	r15, X
     db0:	60 e0       	ldi	r22, 0x00	; 0
     db2:	70 e0       	ldi	r23, 0x00	; 0
     db4:	40 e0       	ldi	r20, 0x00	; 0
     db6:	50 e0       	ldi	r21, 0x00	; 0
     db8:	4e 15       	cp	r20, r14
     dba:	5f 05       	cpc	r21, r15
     dbc:	f1 f0       	breq	.+60     	; 0xdfa <__stack+0x4fb>
     dbe:	ec 81       	ldd	r30, Y+4	; 0x04
     dc0:	fd 81       	ldd	r31, Y+5	; 0x05
     dc2:	e6 0f       	add	r30, r22
     dc4:	f7 1f       	adc	r31, r23
     dc6:	20 81       	ld	r18, Z
     dc8:	23 30       	cpi	r18, 0x03	; 3
     dca:	11 f0       	breq	.+4      	; 0xdd0 <__stack+0x4d1>
     dcc:	28 30       	cpi	r18, 0x08	; 8
     dce:	81 f4       	brne	.+32     	; 0xdf0 <__stack+0x4f1>
     dd0:	24 81       	ldd	r18, Z+4	; 0x04
     dd2:	35 81       	ldd	r19, Z+5	; 0x05
     dd4:	c2 80       	ldd	r12, Z+2	; 0x02
     dd6:	d3 80       	ldd	r13, Z+3	; 0x03
     dd8:	d6 01       	movw	r26, r12
     dda:	11 96       	adiw	r26, 0x01	; 1
     ddc:	cd 90       	ld	r12, X+
     dde:	dc 90       	ld	r13, X
     de0:	12 97       	sbiw	r26, 0x02	; 2
     de2:	2c 15       	cp	r18, r12
     de4:	3d 05       	cpc	r19, r13
     de6:	20 f4       	brcc	.+8      	; 0xdf0 <__stack+0x4f1>
     de8:	2f 5f       	subi	r18, 0xFF	; 255
     dea:	3f 4f       	sbci	r19, 0xFF	; 255
     dec:	35 83       	std	Z+5, r19	; 0x05
     dee:	24 83       	std	Z+4, r18	; 0x04
     df0:	4f 5f       	subi	r20, 0xFF	; 255
     df2:	5f 4f       	sbci	r21, 0xFF	; 255
     df4:	6a 5f       	subi	r22, 0xFA	; 250
     df6:	7f 4f       	sbci	r23, 0xFF	; 255
     df8:	df cf       	rjmp	.-66     	; 0xdb8 <__stack+0x4b9>
     dfa:	f4 01       	movw	r30, r8
     dfc:	26 81       	ldd	r18, Z+6	; 0x06
     dfe:	d8 01       	movw	r26, r16
     e00:	14 96       	adiw	r26, 0x04	; 4
     e02:	2c 93       	st	X, r18
     e04:	b2 cf       	rjmp	.-156    	; 0xd6a <__stack+0x46b>
     e06:	08 81       	ld	r16, Y
     e08:	19 81       	ldd	r17, Y+1	; 0x01
     e0a:	d8 01       	movw	r26, r16
     e0c:	15 96       	adiw	r26, 0x05	; 5
     e0e:	2c 91       	ld	r18, X
     e10:	21 11       	cpse	r18, r1
     e12:	b1 cf       	rjmp	.-158    	; 0xd76 <__stack+0x477>
     e14:	e0 80       	ld	r14, Z
     e16:	f1 80       	ldd	r15, Z+1	; 0x01
     e18:	60 e0       	ldi	r22, 0x00	; 0
     e1a:	70 e0       	ldi	r23, 0x00	; 0
     e1c:	40 e0       	ldi	r20, 0x00	; 0
     e1e:	50 e0       	ldi	r21, 0x00	; 0
     e20:	4e 15       	cp	r20, r14
     e22:	5f 05       	cpc	r21, r15
     e24:	f1 f0       	breq	.+60     	; 0xe62 <__stack+0x563>
     e26:	ec 81       	ldd	r30, Y+4	; 0x04
     e28:	fd 81       	ldd	r31, Y+5	; 0x05
     e2a:	e6 0f       	add	r30, r22
     e2c:	f7 1f       	adc	r31, r23
     e2e:	20 81       	ld	r18, Z
     e30:	23 30       	cpi	r18, 0x03	; 3
     e32:	11 f0       	breq	.+4      	; 0xe38 <__stack+0x539>
     e34:	28 30       	cpi	r18, 0x08	; 8
     e36:	81 f4       	brne	.+32     	; 0xe58 <__stack+0x559>
     e38:	24 81       	ldd	r18, Z+4	; 0x04
     e3a:	35 81       	ldd	r19, Z+5	; 0x05
     e3c:	c2 80       	ldd	r12, Z+2	; 0x02
     e3e:	d3 80       	ldd	r13, Z+3	; 0x03
     e40:	d6 01       	movw	r26, r12
     e42:	11 96       	adiw	r26, 0x01	; 1
     e44:	cd 90       	ld	r12, X+
     e46:	dc 90       	ld	r13, X
     e48:	12 97       	sbiw	r26, 0x02	; 2
     e4a:	c2 16       	cp	r12, r18
     e4c:	d3 06       	cpc	r13, r19
     e4e:	20 f4       	brcc	.+8      	; 0xe58 <__stack+0x559>
     e50:	21 50       	subi	r18, 0x01	; 1
     e52:	31 09       	sbc	r19, r1
     e54:	35 83       	std	Z+5, r19	; 0x05
     e56:	24 83       	std	Z+4, r18	; 0x04
     e58:	4f 5f       	subi	r20, 0xFF	; 255
     e5a:	5f 4f       	sbci	r21, 0xFF	; 255
     e5c:	6a 5f       	subi	r22, 0xFA	; 250
     e5e:	7f 4f       	sbci	r23, 0xFF	; 255
     e60:	df cf       	rjmp	.-66     	; 0xe20 <__stack+0x521>
     e62:	f4 01       	movw	r30, r8
     e64:	27 81       	ldd	r18, Z+7	; 0x07
     e66:	d8 01       	movw	r26, r16
     e68:	15 96       	adiw	r26, 0x05	; 5
     e6a:	2c 93       	st	X, r18
     e6c:	84 cf       	rjmp	.-248    	; 0xd76 <__stack+0x477>
     e6e:	21 50       	subi	r18, 0x01	; 1
     e70:	23 83       	std	Z+3, r18	; 0x03
     e72:	81 cf       	rjmp	.-254    	; 0xd76 <__stack+0x477>
     e74:	a9 01       	movw	r20, r18
     e76:	44 0f       	add	r20, r20
     e78:	55 1f       	adc	r21, r21
     e7a:	ec 81       	ldd	r30, Y+4	; 0x04
     e7c:	fd 81       	ldd	r31, Y+5	; 0x05
     e7e:	e4 0f       	add	r30, r20
     e80:	f5 1f       	adc	r31, r21
     e82:	60 81       	ld	r22, Z
     e84:	65 38       	cpi	r22, 0x85	; 133
     e86:	09 f0       	breq	.+2      	; 0xe8a <__stack+0x58b>
     e88:	47 c0       	rjmp	.+142    	; 0xf18 <__stack+0x619>
     e8a:	61 81       	ldd	r22, Z+1	; 0x01
     e8c:	66 23       	and	r22, r22
     e8e:	19 f0       	breq	.+6      	; 0xe96 <__stack+0x597>
     e90:	61 50       	subi	r22, 0x01	; 1
     e92:	61 83       	std	Z+1, r22	; 0x01
     e94:	41 c0       	rjmp	.+130    	; 0xf18 <__stack+0x619>
     e96:	a0 82       	st	Z, r10
     e98:	6c 81       	ldd	r22, Y+4	; 0x04
     e9a:	7d 81       	ldd	r23, Y+5	; 0x05
     e9c:	fb 01       	movw	r30, r22
     e9e:	e4 0f       	add	r30, r20
     ea0:	f5 1f       	adc	r31, r21
     ea2:	02 80       	ldd	r0, Z+2	; 0x02
     ea4:	f3 81       	ldd	r31, Z+3	; 0x03
     ea6:	e0 2d       	mov	r30, r0
     ea8:	b0 82       	st	Z, r11
     eaa:	ee 81       	ldd	r30, Y+6	; 0x06
     eac:	ff 81       	ldd	r31, Y+7	; 0x07
     eae:	e2 0f       	add	r30, r18
     eb0:	f3 1f       	adc	r31, r19
     eb2:	d2 80       	ldd	r13, Z+2	; 0x02
     eb4:	dd 20       	and	r13, r13
     eb6:	81 f1       	breq	.+96     	; 0xf18 <__stack+0x619>
     eb8:	40 e0       	ldi	r20, 0x00	; 0
     eba:	50 e0       	ldi	r21, 0x00	; 0
     ebc:	00 e0       	ldi	r16, 0x00	; 0
     ebe:	10 e0       	ldi	r17, 0x00	; 0
     ec0:	ea 81       	ldd	r30, Y+2	; 0x02
     ec2:	fb 81       	ldd	r31, Y+3	; 0x03
     ec4:	60 81       	ld	r22, Z
     ec6:	71 81       	ldd	r23, Z+1	; 0x01
     ec8:	06 17       	cp	r16, r22
     eca:	17 07       	cpc	r17, r23
     ecc:	28 f5       	brcc	.+74     	; 0xf18 <__stack+0x619>
     ece:	ee 81       	ldd	r30, Y+6	; 0x06
     ed0:	ff 81       	ldd	r31, Y+7	; 0x07
     ed2:	e4 0f       	add	r30, r20
     ed4:	f5 1f       	adc	r31, r21
     ed6:	62 81       	ldd	r22, Z+2	; 0x02
     ed8:	d6 12       	cpse	r13, r22
     eda:	19 c0       	rjmp	.+50     	; 0xf0e <__stack+0x60f>
     edc:	ba 01       	movw	r22, r20
     ede:	66 0f       	add	r22, r22
     ee0:	77 1f       	adc	r23, r23
     ee2:	ec 81       	ldd	r30, Y+4	; 0x04
     ee4:	fd 81       	ldd	r31, Y+5	; 0x05
     ee6:	4f 01       	movw	r8, r30
     ee8:	86 0e       	add	r8, r22
     eea:	97 1e       	adc	r9, r23
     eec:	f4 01       	movw	r30, r8
     eee:	e2 80       	ldd	r14, Z+2	; 0x02
     ef0:	f3 80       	ldd	r15, Z+3	; 0x03
     ef2:	f7 01       	movw	r30, r14
     ef4:	f0 80       	ld	r15, Z
     ef6:	f0 fe       	sbrs	r15, 0
     ef8:	0a c0       	rjmp	.+20     	; 0xf0e <__stack+0x60f>
     efa:	f4 01       	movw	r30, r8
     efc:	a0 82       	st	Z, r10
     efe:	ec 81       	ldd	r30, Y+4	; 0x04
     f00:	fd 81       	ldd	r31, Y+5	; 0x05
     f02:	e6 0f       	add	r30, r22
     f04:	f7 1f       	adc	r31, r23
     f06:	02 80       	ldd	r0, Z+2	; 0x02
     f08:	f3 81       	ldd	r31, Z+3	; 0x03
     f0a:	e0 2d       	mov	r30, r0
     f0c:	b0 82       	st	Z, r11
     f0e:	0f 5f       	subi	r16, 0xFF	; 255
     f10:	1f 4f       	sbci	r17, 0xFF	; 255
     f12:	4d 5f       	subi	r20, 0xFD	; 253
     f14:	5f 4f       	sbci	r21, 0xFF	; 255
     f16:	d4 cf       	rjmp	.-88     	; 0xec0 <__stack+0x5c1>
     f18:	11 96       	adiw	r26, 0x01	; 1
     f1a:	2d 5f       	subi	r18, 0xFD	; 253
     f1c:	3f 4f       	sbci	r19, 0xFF	; 255
     f1e:	34 cf       	rjmp	.-408    	; 0xd88 <__stack+0x489>
     f20:	8b e0       	ldi	r24, 0x0B	; 11
     f22:	df 91       	pop	r29
     f24:	cf 91       	pop	r28
     f26:	1f 91       	pop	r17
     f28:	0f 91       	pop	r16
     f2a:	ff 90       	pop	r15
     f2c:	ef 90       	pop	r14
     f2e:	df 90       	pop	r13
     f30:	cf 90       	pop	r12
     f32:	bf 90       	pop	r11
     f34:	af 90       	pop	r10
     f36:	9f 90       	pop	r9
     f38:	8f 90       	pop	r8
     f3a:	7f 90       	pop	r7
     f3c:	6f 90       	pop	r6
     f3e:	5f 90       	pop	r5
     f40:	4f 90       	pop	r4
     f42:	3f 90       	pop	r3
     f44:	2f 90       	pop	r2
     f46:	08 95       	ret

00000f48 <select_next_channel_to_measure>:
     f48:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <current_measure_channel>
     f4c:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <current_measure_channel+0x1>
     f50:	a0 91 82 01 	lds	r26, 0x0182	; 0x800182 <qtm_acquisition_control_working_set_ptr>
     f54:	b0 91 83 01 	lds	r27, 0x0183	; 0x800183 <qtm_acquisition_control_working_set_ptr+0x1>
     f58:	ed 91       	ld	r30, X+
     f5a:	fc 91       	ld	r31, X
     f5c:	11 97       	sbiw	r26, 0x01	; 1
     f5e:	40 81       	ld	r20, Z
     f60:	51 81       	ldd	r21, Z+1	; 0x01
     f62:	25 e0       	ldi	r18, 0x05	; 5
     f64:	28 9f       	mul	r18, r24
     f66:	b0 01       	movw	r22, r0
     f68:	29 9f       	mul	r18, r25
     f6a:	70 0d       	add	r23, r0
     f6c:	11 24       	eor	r1, r1
     f6e:	20 e0       	ldi	r18, 0x00	; 0
     f70:	30 e0       	ldi	r19, 0x00	; 0
     f72:	84 17       	cp	r24, r20
     f74:	95 07       	cpc	r25, r21
     f76:	a8 f4       	brcc	.+42     	; 0xfa2 <select_next_channel_to_measure+0x5a>
     f78:	14 96       	adiw	r26, 0x04	; 4
     f7a:	ed 91       	ld	r30, X+
     f7c:	fc 91       	ld	r31, X
     f7e:	15 97       	sbiw	r26, 0x05	; 5
     f80:	e2 0f       	add	r30, r18
     f82:	f3 1f       	adc	r31, r19
     f84:	e6 0f       	add	r30, r22
     f86:	f7 1f       	adc	r31, r23
     f88:	e0 81       	ld	r30, Z
     f8a:	2b 5f       	subi	r18, 0xFB	; 251
     f8c:	3f 4f       	sbci	r19, 0xFF	; 255
     f8e:	e0 fd       	sbrc	r30, 0
     f90:	02 c0       	rjmp	.+4      	; 0xf96 <select_next_channel_to_measure+0x4e>
     f92:	01 96       	adiw	r24, 0x01	; 1
     f94:	ee cf       	rjmp	.-36     	; 0xf72 <select_next_channel_to_measure+0x2a>
     f96:	90 93 69 01 	sts	0x0169, r25	; 0x800169 <current_measure_channel+0x1>
     f9a:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <current_measure_channel>
     f9e:	80 e0       	ldi	r24, 0x00	; 0
     fa0:	08 95       	ret
     fa2:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <current_measure_channel+0x1>
     fa6:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <current_measure_channel>
     faa:	81 e0       	ldi	r24, 0x01	; 1
     fac:	08 95       	ret

00000fae <qtm_measure_node>:
     fae:	4a e0       	ldi	r20, 0x0A	; 10
     fb0:	48 9f       	mul	r20, r24
     fb2:	90 01       	movw	r18, r0
     fb4:	49 9f       	mul	r20, r25
     fb6:	30 0d       	add	r19, r0
     fb8:	11 24       	eor	r1, r1
     fba:	e0 91 82 01 	lds	r30, 0x0182	; 0x800182 <qtm_acquisition_control_working_set_ptr>
     fbe:	f0 91 83 01 	lds	r31, 0x0183	; 0x800183 <qtm_acquisition_control_working_set_ptr+0x1>
     fc2:	02 80       	ldd	r0, Z+2	; 0x02
     fc4:	f3 81       	ldd	r31, Z+3	; 0x03
     fc6:	e0 2d       	mov	r30, r0
     fc8:	e2 0f       	add	r30, r18
     fca:	f3 1f       	adc	r31, r19
     fcc:	42 81       	ldd	r20, Z+2	; 0x02
     fce:	40 93 f8 00 	sts	0x00F8, r20	; 0x8000f8 <__TEXT_REGION_LENGTH__+0x7f80f8>
     fd2:	e0 91 82 01 	lds	r30, 0x0182	; 0x800182 <qtm_acquisition_control_working_set_ptr>
     fd6:	f0 91 83 01 	lds	r31, 0x0183	; 0x800183 <qtm_acquisition_control_working_set_ptr+0x1>
     fda:	02 80       	ldd	r0, Z+2	; 0x02
     fdc:	f3 81       	ldd	r31, Z+3	; 0x03
     fde:	e0 2d       	mov	r30, r0
     fe0:	e2 0f       	add	r30, r18
     fe2:	f3 1f       	adc	r31, r19
     fe4:	43 81       	ldd	r20, Z+3	; 0x03
     fe6:	40 93 f9 00 	sts	0x00F9, r20	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7f80f9>
     fea:	e0 91 82 01 	lds	r30, 0x0182	; 0x800182 <qtm_acquisition_control_working_set_ptr>
     fee:	f0 91 83 01 	lds	r31, 0x0183	; 0x800183 <qtm_acquisition_control_working_set_ptr+0x1>
     ff2:	02 80       	ldd	r0, Z+2	; 0x02
     ff4:	f3 81       	ldd	r31, Z+3	; 0x03
     ff6:	e0 2d       	mov	r30, r0
     ff8:	e2 0f       	add	r30, r18
     ffa:	f3 1f       	adc	r31, r19
     ffc:	44 81       	ldd	r20, Z+4	; 0x04
     ffe:	40 93 fa 00 	sts	0x00FA, r20	; 0x8000fa <__TEXT_REGION_LENGTH__+0x7f80fa>
    1002:	e0 91 82 01 	lds	r30, 0x0182	; 0x800182 <qtm_acquisition_control_working_set_ptr>
    1006:	f0 91 83 01 	lds	r31, 0x0183	; 0x800183 <qtm_acquisition_control_working_set_ptr+0x1>
    100a:	02 80       	ldd	r0, Z+2	; 0x02
    100c:	f3 81       	ldd	r31, Z+3	; 0x03
    100e:	e0 2d       	mov	r30, r0
    1010:	e2 0f       	add	r30, r18
    1012:	f3 1f       	adc	r31, r19
    1014:	40 81       	ld	r20, Z
    1016:	40 93 f2 00 	sts	0x00F2, r20	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7f80f2>
    101a:	e0 91 82 01 	lds	r30, 0x0182	; 0x800182 <qtm_acquisition_control_working_set_ptr>
    101e:	f0 91 83 01 	lds	r31, 0x0183	; 0x800183 <qtm_acquisition_control_working_set_ptr+0x1>
    1022:	02 80       	ldd	r0, Z+2	; 0x02
    1024:	f3 81       	ldd	r31, Z+3	; 0x03
    1026:	e0 2d       	mov	r30, r0
    1028:	e2 0f       	add	r30, r18
    102a:	f3 1f       	adc	r31, r19
    102c:	41 81       	ldd	r20, Z+1	; 0x01
    102e:	40 93 f3 00 	sts	0x00F3, r20	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7f80f3>
    1032:	65 e0       	ldi	r22, 0x05	; 5
    1034:	68 9f       	mul	r22, r24
    1036:	a0 01       	movw	r20, r0
    1038:	69 9f       	mul	r22, r25
    103a:	50 0d       	add	r21, r0
    103c:	11 24       	eor	r1, r1
    103e:	e0 91 82 01 	lds	r30, 0x0182	; 0x800182 <qtm_acquisition_control_working_set_ptr>
    1042:	f0 91 83 01 	lds	r31, 0x0183	; 0x800183 <qtm_acquisition_control_working_set_ptr+0x1>
    1046:	04 80       	ldd	r0, Z+4	; 0x04
    1048:	f5 81       	ldd	r31, Z+5	; 0x05
    104a:	e0 2d       	mov	r30, r0
    104c:	e4 0f       	add	r30, r20
    104e:	f5 1f       	adc	r31, r21
    1050:	83 81       	ldd	r24, Z+3	; 0x03
    1052:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7f80e5>
    1056:	e0 91 82 01 	lds	r30, 0x0182	; 0x800182 <qtm_acquisition_control_working_set_ptr>
    105a:	f0 91 83 01 	lds	r31, 0x0183	; 0x800183 <qtm_acquisition_control_working_set_ptr+0x1>
    105e:	04 80       	ldd	r0, Z+4	; 0x04
    1060:	f5 81       	ldd	r31, Z+5	; 0x05
    1062:	e0 2d       	mov	r30, r0
    1064:	e4 0f       	add	r30, r20
    1066:	f5 1f       	adc	r31, r21
    1068:	83 81       	ldd	r24, Z+3	; 0x03
    106a:	94 81       	ldd	r25, Z+4	; 0x04
    106c:	88 27       	eor	r24, r24
    106e:	9f 73       	andi	r25, 0x3F	; 63
    1070:	90 93 e6 00 	sts	0x00E6, r25	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7f80e6>
    1074:	a0 91 82 01 	lds	r26, 0x0182	; 0x800182 <qtm_acquisition_control_working_set_ptr>
    1078:	b0 91 83 01 	lds	r27, 0x0183	; 0x800183 <qtm_acquisition_control_working_set_ptr+0x1>
    107c:	14 96       	adiw	r26, 0x04	; 4
    107e:	ed 91       	ld	r30, X+
    1080:	fc 91       	ld	r31, X
    1082:	15 97       	sbiw	r26, 0x05	; 5
    1084:	e4 0f       	add	r30, r20
    1086:	f5 1f       	adc	r31, r21
    1088:	80 81       	ld	r24, Z
    108a:	81 fd       	sbrc	r24, 1
    108c:	60 83       	st	Z, r22
    108e:	14 96       	adiw	r26, 0x04	; 4
    1090:	8d 91       	ld	r24, X+
    1092:	9c 91       	ld	r25, X
    1094:	15 97       	sbiw	r26, 0x05	; 5
    1096:	fc 01       	movw	r30, r24
    1098:	e4 0f       	add	r30, r20
    109a:	f5 1f       	adc	r31, r21
    109c:	80 81       	ld	r24, Z
    109e:	8c 71       	andi	r24, 0x1C	; 28
    10a0:	71 f4       	brne	.+28     	; 0x10be <qtm_measure_node+0x110>
    10a2:	12 96       	adiw	r26, 0x02	; 2
    10a4:	ed 91       	ld	r30, X+
    10a6:	fc 91       	ld	r31, X
    10a8:	13 97       	sbiw	r26, 0x03	; 3
    10aa:	e2 0f       	add	r30, r18
    10ac:	f3 1f       	adc	r31, r19
    10ae:	e0 85       	ldd	r30, Z+8	; 0x08
    10b0:	e2 95       	swap	r30
    10b2:	ef 70       	andi	r30, 0x0F	; 15
    10b4:	f0 e0       	ldi	r31, 0x00	; 0
    10b6:	e5 5b       	subi	r30, 0xB5	; 181
    10b8:	fe 4f       	sbci	r31, 0xFE	; 254
    10ba:	80 81       	ld	r24, Z
    10bc:	01 c0       	rjmp	.+2      	; 0x10c0 <qtm_measure_node+0x112>
    10be:	8f e3       	ldi	r24, 0x3F	; 63
    10c0:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7f80e7>
    10c4:	e0 91 82 01 	lds	r30, 0x0182	; 0x800182 <qtm_acquisition_control_working_set_ptr>
    10c8:	f0 91 83 01 	lds	r31, 0x0183	; 0x800183 <qtm_acquisition_control_working_set_ptr+0x1>
    10cc:	02 80       	ldd	r0, Z+2	; 0x02
    10ce:	f3 81       	ldd	r31, Z+3	; 0x03
    10d0:	e0 2d       	mov	r30, r0
    10d2:	e2 0f       	add	r30, r18
    10d4:	f3 1f       	adc	r31, r19
    10d6:	86 81       	ldd	r24, Z+6	; 0x06
    10d8:	8b 3f       	cpi	r24, 0xFB	; 251
    10da:	10 f4       	brcc	.+4      	; 0x10e0 <qtm_measure_node+0x132>
    10dc:	8c 5f       	subi	r24, 0xFC	; 252
    10de:	01 c0       	rjmp	.+2      	; 0x10e2 <qtm_measure_node+0x134>
    10e0:	8f ef       	ldi	r24, 0xFF	; 255
    10e2:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7f80e8>
    10e6:	e0 91 82 01 	lds	r30, 0x0182	; 0x800182 <qtm_acquisition_control_working_set_ptr>
    10ea:	f0 91 83 01 	lds	r31, 0x0183	; 0x800183 <qtm_acquisition_control_working_set_ptr+0x1>
    10ee:	02 80       	ldd	r0, Z+2	; 0x02
    10f0:	f3 81       	ldd	r31, Z+3	; 0x03
    10f2:	e0 2d       	mov	r30, r0
    10f4:	e2 0f       	add	r30, r18
    10f6:	f3 1f       	adc	r31, r19
    10f8:	87 81       	ldd	r24, Z+7	; 0x07
    10fa:	80 7f       	andi	r24, 0xF0	; 240
    10fc:	91 85       	ldd	r25, Z+9	; 0x09
    10fe:	89 2b       	or	r24, r25
    1100:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7f80e4>
    1104:	e0 91 82 01 	lds	r30, 0x0182	; 0x800182 <qtm_acquisition_control_working_set_ptr>
    1108:	f0 91 83 01 	lds	r31, 0x0183	; 0x800183 <qtm_acquisition_control_working_set_ptr+0x1>
    110c:	82 81       	ldd	r24, Z+2	; 0x02
    110e:	93 81       	ldd	r25, Z+3	; 0x03
    1110:	fc 01       	movw	r30, r24
    1112:	e2 0f       	add	r30, r18
    1114:	f3 1f       	adc	r31, r19
    1116:	87 81       	ldd	r24, Z+7	; 0x07
    1118:	8f 70       	andi	r24, 0x0F	; 15
    111a:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7f80e1>
    111e:	82 e1       	ldi	r24, 0x12	; 18
    1120:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    1124:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    1128:	81 60       	ori	r24, 0x01	; 1
    112a:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    112e:	08 95       	ret

00001130 <qtm_acquisition_process>:
    1130:	4f 92       	push	r4
    1132:	5f 92       	push	r5
    1134:	6f 92       	push	r6
    1136:	7f 92       	push	r7
    1138:	8f 92       	push	r8
    113a:	9f 92       	push	r9
    113c:	af 92       	push	r10
    113e:	bf 92       	push	r11
    1140:	cf 92       	push	r12
    1142:	df 92       	push	r13
    1144:	ef 92       	push	r14
    1146:	ff 92       	push	r15
    1148:	0f 93       	push	r16
    114a:	1f 93       	push	r17
    114c:	cf 93       	push	r28
    114e:	df 93       	push	r29
    1150:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <touch_seq_lib_state>
    1154:	88 23       	and	r24, r24
    1156:	09 f4       	brne	.+2      	; 0x115a <qtm_acquisition_process+0x2a>
    1158:	31 c1       	rjmp	.+610    	; 0x13bc <qtm_acquisition_process+0x28c>
    115a:	a0 91 82 01 	lds	r26, 0x0182	; 0x800182 <qtm_acquisition_control_working_set_ptr>
    115e:	b0 91 83 01 	lds	r27, 0x0183	; 0x800183 <qtm_acquisition_control_working_set_ptr+0x1>
    1162:	e0 90 84 01 	lds	r14, 0x0184	; 0x800184 <qtm_raw_data_measurements_ptr>
    1166:	f0 90 85 01 	lds	r15, 0x0185	; 0x800185 <qtm_raw_data_measurements_ptr+0x1>
    116a:	41 2c       	mov	r4, r1
    116c:	51 2c       	mov	r5, r1
    116e:	60 e0       	ldi	r22, 0x00	; 0
    1170:	70 e0       	ldi	r23, 0x00	; 0
    1172:	00 e0       	ldi	r16, 0x00	; 0
    1174:	10 e0       	ldi	r17, 0x00	; 0
    1176:	80 e0       	ldi	r24, 0x00	; 0
    1178:	66 24       	eor	r6, r6
    117a:	63 94       	inc	r6
    117c:	91 e8       	ldi	r25, 0x81	; 129
    117e:	79 2e       	mov	r7, r25
    1180:	aa 24       	eor	r10, r10
    1182:	aa 94       	dec	r10
    1184:	bb 24       	eor	r11, r11
    1186:	b3 94       	inc	r11
    1188:	cd 90       	ld	r12, X+
    118a:	dc 90       	ld	r13, X
    118c:	11 97       	sbiw	r26, 0x01	; 1
    118e:	f6 01       	movw	r30, r12
    1190:	20 81       	ld	r18, Z
    1192:	31 81       	ldd	r19, Z+1	; 0x01
    1194:	02 17       	cp	r16, r18
    1196:	13 07       	cpc	r17, r19
    1198:	08 f0       	brcs	.+2      	; 0x119c <qtm_acquisition_process+0x6c>
    119a:	0c c1       	rjmp	.+536    	; 0x13b4 <qtm_acquisition_process+0x284>
    119c:	e7 01       	movw	r28, r14
    119e:	29 91       	ld	r18, Y+
    11a0:	39 91       	ld	r19, Y+
    11a2:	7e 01       	movw	r14, r28
    11a4:	14 96       	adiw	r26, 0x04	; 4
    11a6:	ed 91       	ld	r30, X+
    11a8:	fc 91       	ld	r31, X
    11aa:	15 97       	sbiw	r26, 0x05	; 5
    11ac:	e6 0f       	add	r30, r22
    11ae:	f7 1f       	adc	r31, r23
    11b0:	40 81       	ld	r20, Z
    11b2:	4c 71       	andi	r20, 0x1C	; 28
    11b4:	50 e0       	ldi	r21, 0x00	; 0
    11b6:	56 95       	lsr	r21
    11b8:	47 95       	ror	r20
    11ba:	56 95       	lsr	r21
    11bc:	47 95       	ror	r20
    11be:	41 15       	cp	r20, r1
    11c0:	51 05       	cpc	r21, r1
    11c2:	21 f0       	breq	.+8      	; 0x11cc <qtm_acquisition_process+0x9c>
    11c4:	41 30       	cpi	r20, 0x01	; 1
    11c6:	51 05       	cpc	r21, r1
    11c8:	c1 f0       	breq	.+48     	; 0x11fa <qtm_acquisition_process+0xca>
    11ca:	eb c0       	rjmp	.+470    	; 0x13a2 <qtm_acquisition_process+0x272>
    11cc:	12 96       	adiw	r26, 0x02	; 2
    11ce:	4d 91       	ld	r20, X+
    11d0:	5c 91       	ld	r21, X
    11d2:	13 97       	sbiw	r26, 0x03	; 3
    11d4:	44 0d       	add	r20, r4
    11d6:	55 1d       	adc	r21, r5
    11d8:	ea 01       	movw	r28, r20
    11da:	98 85       	ldd	r25, Y+8	; 0x08
    11dc:	9f 70       	andi	r25, 0x0F	; 15
    11de:	49 85       	ldd	r20, Y+9	; 0x09
    11e0:	94 17       	cp	r25, r20
    11e2:	10 f4       	brcc	.+4      	; 0x11e8 <qtm_acquisition_process+0xb8>
    11e4:	49 1b       	sub	r20, r25
    11e6:	01 c0       	rjmp	.+2      	; 0x11ea <qtm_acquisition_process+0xba>
    11e8:	40 e0       	ldi	r20, 0x00	; 0
    11ea:	02 c0       	rjmp	.+4      	; 0x11f0 <qtm_acquisition_process+0xc0>
    11ec:	36 95       	lsr	r19
    11ee:	27 95       	ror	r18
    11f0:	4a 95       	dec	r20
    11f2:	e2 f7       	brpl	.-8      	; 0x11ec <qtm_acquisition_process+0xbc>
    11f4:	32 83       	std	Z+2, r19	; 0x02
    11f6:	21 83       	std	Z+1, r18	; 0x01
    11f8:	d5 c0       	rjmp	.+426    	; 0x13a4 <qtm_acquisition_process+0x274>
    11fa:	12 96       	adiw	r26, 0x02	; 2
    11fc:	4d 91       	ld	r20, X+
    11fe:	5c 91       	ld	r21, X
    1200:	13 97       	sbiw	r26, 0x03	; 3
    1202:	44 0d       	add	r20, r4
    1204:	55 1d       	adc	r21, r5
    1206:	ea 01       	movw	r28, r20
    1208:	09 84       	ldd	r0, Y+9	; 0x09
    120a:	02 c0       	rjmp	.+4      	; 0x1210 <qtm_acquisition_process+0xe0>
    120c:	36 95       	lsr	r19
    120e:	27 95       	ror	r18
    1210:	0a 94       	dec	r0
    1212:	e2 f7       	brpl	.-8      	; 0x120c <qtm_acquisition_process+0xdc>
    1214:	32 83       	std	Z+2, r19	; 0x02
    1216:	21 83       	std	Z+1, r18	; 0x01
    1218:	43 81       	ldd	r20, Z+3	; 0x03
    121a:	54 81       	ldd	r21, Z+4	; 0x04
    121c:	21 15       	cp	r18, r1
    121e:	d2 e0       	ldi	r29, 0x02	; 2
    1220:	3d 07       	cpc	r19, r29
    1222:	20 f0       	brcs	.+8      	; 0x122c <qtm_acquisition_process+0xfc>
    1224:	2f 5f       	subi	r18, 0xFF	; 255
    1226:	31 40       	sbci	r19, 0x01	; 1
    1228:	91 e0       	ldi	r25, 0x01	; 1
    122a:	05 c0       	rjmp	.+10     	; 0x1236 <qtm_acquisition_process+0x106>
    122c:	e5 01       	movw	r28, r10
    122e:	c2 1b       	sub	r28, r18
    1230:	d3 0b       	sbc	r29, r19
    1232:	9e 01       	movw	r18, r28
    1234:	90 e0       	ldi	r25, 0x00	; 0
    1236:	e6 01       	movw	r28, r12
    1238:	da 80       	ldd	r13, Y+2	; 0x02
    123a:	d0 e4       	ldi	r29, 0x40	; 64
    123c:	dd 12       	cpse	r13, r29
    123e:	05 c0       	rjmp	.+10     	; 0x124a <qtm_acquisition_process+0x11a>
    1240:	36 95       	lsr	r19
    1242:	27 95       	ror	r18
    1244:	99 23       	and	r25, r25
    1246:	19 f0       	breq	.+6      	; 0x124e <qtm_acquisition_process+0x11e>
    1248:	09 c0       	rjmp	.+18     	; 0x125c <qtm_acquisition_process+0x12c>
    124a:	99 23       	and	r25, r25
    124c:	39 f0       	breq	.+14     	; 0x125c <qtm_acquisition_process+0x12c>
    124e:	4f 3f       	cpi	r20, 0xFF	; 255
    1250:	9f e3       	ldi	r25, 0x3F	; 63
    1252:	59 07       	cpc	r21, r25
    1254:	31 f4       	brne	.+12     	; 0x1262 <qtm_acquisition_process+0x132>
    1256:	70 82       	st	Z, r7
    1258:	8e e0       	ldi	r24, 0x0E	; 14
    125a:	07 c0       	rjmp	.+14     	; 0x126a <qtm_acquisition_process+0x13a>
    125c:	88 24       	eor	r8, r8
    125e:	83 94       	inc	r8
    1260:	01 c0       	rjmp	.+2      	; 0x1264 <qtm_acquisition_process+0x134>
    1262:	81 2c       	mov	r8, r1
    1264:	2a 30       	cpi	r18, 0x0A	; 10
    1266:	31 05       	cpc	r19, r1
    1268:	98 f4       	brcc	.+38     	; 0x1290 <qtm_acquisition_process+0x160>
    126a:	14 96       	adiw	r26, 0x04	; 4
    126c:	ed 91       	ld	r30, X+
    126e:	fc 91       	ld	r31, X
    1270:	15 97       	sbiw	r26, 0x05	; 5
    1272:	e6 0f       	add	r30, r22
    1274:	f7 1f       	adc	r31, r23
    1276:	20 81       	ld	r18, Z
    1278:	27 ff       	sbrs	r18, 7
    127a:	60 82       	st	Z, r6
    127c:	14 96       	adiw	r26, 0x04	; 4
    127e:	ed 91       	ld	r30, X+
    1280:	fc 91       	ld	r31, X
    1282:	15 97       	sbiw	r26, 0x05	; 5
    1284:	e6 0f       	add	r30, r22
    1286:	f7 1f       	adc	r31, r23
    1288:	5f 73       	andi	r21, 0x3F	; 63
    128a:	54 83       	std	Z+4, r21	; 0x04
    128c:	43 83       	std	Z+3, r20	; 0x03
    128e:	8a c0       	rjmp	.+276    	; 0x13a4 <qtm_acquisition_process+0x274>
    1290:	6a 01       	movw	r12, r20
    1292:	cc 24       	eor	r12, r12
    1294:	c0 e3       	ldi	r28, 0x30	; 48
    1296:	dc 22       	and	r13, r28
    1298:	9d 2c       	mov	r9, r13
    129a:	92 94       	swap	r9
    129c:	df e0       	ldi	r29, 0x0F	; 15
    129e:	9d 22       	and	r9, r29
    12a0:	6a 01       	movw	r12, r20
    12a2:	cc 24       	eor	r12, r12
    12a4:	df e0       	ldi	r29, 0x0F	; 15
    12a6:	dd 22       	and	r13, r29
    12a8:	9d 2d       	mov	r25, r13
    12aa:	6a 01       	movw	r12, r20
    12ac:	c0 ef       	ldi	r28, 0xF0	; 240
    12ae:	cc 22       	and	r12, r28
    12b0:	dd 24       	eor	r13, r13
    12b2:	54 e0       	ldi	r21, 0x04	; 4
    12b4:	d6 94       	lsr	r13
    12b6:	c7 94       	ror	r12
    12b8:	5a 95       	dec	r21
    12ba:	e1 f7       	brne	.-8      	; 0x12b4 <qtm_acquisition_process+0x184>
    12bc:	5c 2d       	mov	r21, r12
    12be:	4f 70       	andi	r20, 0x0F	; 15
    12c0:	81 10       	cpse	r8, r1
    12c2:	32 c0       	rjmp	.+100    	; 0x1328 <qtm_acquisition_process+0x1f8>
    12c4:	20 3d       	cpi	r18, 0xD0	; 208
    12c6:	31 05       	cpc	r19, r1
    12c8:	60 f0       	brcs	.+24     	; 0x12e2 <qtm_acquisition_process+0x1b2>
    12ca:	d3 e0       	ldi	r29, 0x03	; 3
    12cc:	9d 16       	cp	r9, r29
    12ce:	49 f0       	breq	.+18     	; 0x12e2 <qtm_acquisition_process+0x1b2>
    12d0:	93 94       	inc	r9
    12d2:	2f 5c       	subi	r18, 0xCF	; 207
    12d4:	31 09       	sbc	r19, r1
    12d6:	f6 cf       	rjmp	.-20     	; 0x12c4 <qtm_acquisition_process+0x194>
    12d8:	9f 30       	cpi	r25, 0x0F	; 15
    12da:	41 f0       	breq	.+16     	; 0x12ec <qtm_acquisition_process+0x1bc>
    12dc:	9f 5f       	subi	r25, 0xFF	; 255
    12de:	25 51       	subi	r18, 0x15	; 21
    12e0:	31 09       	sbc	r19, r1
    12e2:	26 31       	cpi	r18, 0x16	; 22
    12e4:	31 05       	cpc	r19, r1
    12e6:	c0 f7       	brcc	.-16     	; 0x12d8 <qtm_acquisition_process+0x1a8>
    12e8:	9f 30       	cpi	r25, 0x0F	; 15
    12ea:	69 f4       	brne	.+26     	; 0x1306 <qtm_acquisition_process+0x1d6>
    12ec:	93 e0       	ldi	r25, 0x03	; 3
    12ee:	99 12       	cpse	r9, r25
    12f0:	02 c0       	rjmp	.+4      	; 0x12f6 <qtm_acquisition_process+0x1c6>
    12f2:	9f e0       	ldi	r25, 0x0F	; 15
    12f4:	08 c0       	rjmp	.+16     	; 0x1306 <qtm_acquisition_process+0x1d6>
    12f6:	93 94       	inc	r9
    12f8:	95 e0       	ldi	r25, 0x05	; 5
    12fa:	05 c0       	rjmp	.+10     	; 0x1306 <qtm_acquisition_process+0x1d6>
    12fc:	5f 30       	cpi	r21, 0x0F	; 15
    12fe:	49 f0       	breq	.+18     	; 0x1312 <qtm_acquisition_process+0x1e2>
    1300:	5f 5f       	subi	r21, 0xFF	; 255
    1302:	22 50       	subi	r18, 0x02	; 2
    1304:	31 09       	sbc	r19, r1
    1306:	23 30       	cpi	r18, 0x03	; 3
    1308:	31 05       	cpc	r19, r1
    130a:	c0 f7       	brcc	.-16     	; 0x12fc <qtm_acquisition_process+0x1cc>
    130c:	5f 30       	cpi	r21, 0x0F	; 15
    130e:	09 f0       	breq	.+2      	; 0x1312 <qtm_acquisition_process+0x1e2>
    1310:	5b c0       	rjmp	.+182    	; 0x13c8 <qtm_acquisition_process+0x298>
    1312:	9f 30       	cpi	r25, 0x0F	; 15
    1314:	09 f4       	brne	.+2      	; 0x1318 <qtm_acquisition_process+0x1e8>
    1316:	54 c0       	rjmp	.+168    	; 0x13c0 <qtm_acquisition_process+0x290>
    1318:	9f 5f       	subi	r25, 0xFF	; 255
    131a:	55 e0       	ldi	r21, 0x05	; 5
    131c:	55 c0       	rjmp	.+170    	; 0x13c8 <qtm_acquisition_process+0x298>
    131e:	99 20       	and	r9, r9
    1320:	61 f0       	breq	.+24     	; 0x133a <qtm_acquisition_process+0x20a>
    1322:	9a 94       	dec	r9
    1324:	2f 5c       	subi	r18, 0xCF	; 207
    1326:	31 09       	sbc	r19, r1
    1328:	20 3d       	cpi	r18, 0xD0	; 208
    132a:	31 05       	cpc	r19, r1
    132c:	c0 f7       	brcc	.-16     	; 0x131e <qtm_acquisition_process+0x1ee>
    132e:	05 c0       	rjmp	.+10     	; 0x133a <qtm_acquisition_process+0x20a>
    1330:	99 23       	and	r25, r25
    1332:	41 f0       	breq	.+16     	; 0x1344 <qtm_acquisition_process+0x214>
    1334:	91 50       	subi	r25, 0x01	; 1
    1336:	25 51       	subi	r18, 0x15	; 21
    1338:	31 09       	sbc	r19, r1
    133a:	26 31       	cpi	r18, 0x16	; 22
    133c:	31 05       	cpc	r19, r1
    133e:	c0 f7       	brcc	.-16     	; 0x1330 <qtm_acquisition_process+0x200>
    1340:	91 11       	cpse	r25, r1
    1342:	0c c0       	rjmp	.+24     	; 0x135c <qtm_acquisition_process+0x22c>
    1344:	91 10       	cpse	r9, r1
    1346:	02 c0       	rjmp	.+4      	; 0x134c <qtm_acquisition_process+0x21c>
    1348:	90 e0       	ldi	r25, 0x00	; 0
    134a:	08 c0       	rjmp	.+16     	; 0x135c <qtm_acquisition_process+0x22c>
    134c:	9a 94       	dec	r9
    134e:	9a e0       	ldi	r25, 0x0A	; 10
    1350:	05 c0       	rjmp	.+10     	; 0x135c <qtm_acquisition_process+0x22c>
    1352:	55 23       	and	r21, r21
    1354:	41 f0       	breq	.+16     	; 0x1366 <qtm_acquisition_process+0x236>
    1356:	51 50       	subi	r21, 0x01	; 1
    1358:	22 50       	subi	r18, 0x02	; 2
    135a:	31 09       	sbc	r19, r1
    135c:	23 30       	cpi	r18, 0x03	; 3
    135e:	31 05       	cpc	r19, r1
    1360:	c0 f7       	brcc	.-16     	; 0x1352 <qtm_acquisition_process+0x222>
    1362:	51 11       	cpse	r21, r1
    1364:	0d c0       	rjmp	.+26     	; 0x1380 <qtm_acquisition_process+0x250>
    1366:	99 23       	and	r25, r25
    1368:	b9 f1       	breq	.+110    	; 0x13d8 <qtm_acquisition_process+0x2a8>
    136a:	91 50       	subi	r25, 0x01	; 1
    136c:	5a e0       	ldi	r21, 0x0A	; 10
    136e:	23 30       	cpi	r18, 0x03	; 3
    1370:	31 05       	cpc	r19, r1
    1372:	d0 f6       	brcc	.-76     	; 0x1328 <qtm_acquisition_process+0x1f8>
    1374:	05 c0       	rjmp	.+10     	; 0x1380 <qtm_acquisition_process+0x250>
    1376:	23 30       	cpi	r18, 0x03	; 3
    1378:	31 05       	cpc	r19, r1
    137a:	58 f1       	brcs	.+86     	; 0x13d2 <qtm_acquisition_process+0x2a2>
    137c:	4f e0       	ldi	r20, 0x0F	; 15
    137e:	5f e0       	ldi	r21, 0x0F	; 15
    1380:	29 2d       	mov	r18, r9
    1382:	30 e0       	ldi	r19, 0x00	; 0
    1384:	32 2f       	mov	r19, r18
    1386:	22 27       	eor	r18, r18
    1388:	32 95       	swap	r19
    138a:	30 7f       	andi	r19, 0xF0	; 240
    138c:	39 2b       	or	r19, r25
    138e:	24 2b       	or	r18, r20
    1390:	c0 e1       	ldi	r28, 0x10	; 16
    1392:	5c 9f       	mul	r21, r28
    1394:	60 01       	movw	r12, r0
    1396:	11 24       	eor	r1, r1
    1398:	c2 2a       	or	r12, r18
    139a:	d3 2a       	or	r13, r19
    139c:	d4 82       	std	Z+4, r13	; 0x04
    139e:	c3 82       	std	Z+3, r12	; 0x03
    13a0:	01 c0       	rjmp	.+2      	; 0x13a4 <qtm_acquisition_process+0x274>
    13a2:	ff cf       	rjmp	.-2      	; 0x13a2 <qtm_acquisition_process+0x272>
    13a4:	0f 5f       	subi	r16, 0xFF	; 255
    13a6:	1f 4f       	sbci	r17, 0xFF	; 255
    13a8:	6b 5f       	subi	r22, 0xFB	; 251
    13aa:	7f 4f       	sbci	r23, 0xFF	; 255
    13ac:	da e0       	ldi	r29, 0x0A	; 10
    13ae:	4d 0e       	add	r4, r29
    13b0:	51 1c       	adc	r5, r1
    13b2:	ea ce       	rjmp	.-556    	; 0x1188 <qtm_acquisition_process+0x58>
    13b4:	92 e0       	ldi	r25, 0x02	; 2
    13b6:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <touch_seq_lib_state>
    13ba:	10 c0       	rjmp	.+32     	; 0x13dc <qtm_acquisition_process+0x2ac>
    13bc:	83 e0       	ldi	r24, 0x03	; 3
    13be:	0e c0       	rjmp	.+28     	; 0x13dc <qtm_acquisition_process+0x2ac>
    13c0:	53 e0       	ldi	r21, 0x03	; 3
    13c2:	95 16       	cp	r9, r21
    13c4:	c1 f2       	breq	.-80     	; 0x1376 <qtm_acquisition_process+0x246>
    13c6:	5f e0       	ldi	r21, 0x0F	; 15
    13c8:	23 30       	cpi	r18, 0x03	; 3
    13ca:	31 05       	cpc	r19, r1
    13cc:	08 f0       	brcs	.+2      	; 0x13d0 <qtm_acquisition_process+0x2a0>
    13ce:	7a cf       	rjmp	.-268    	; 0x12c4 <qtm_acquisition_process+0x194>
    13d0:	d7 cf       	rjmp	.-82     	; 0x1380 <qtm_acquisition_process+0x250>
    13d2:	5f e0       	ldi	r21, 0x0F	; 15
    13d4:	4f e0       	ldi	r20, 0x0F	; 15
    13d6:	d4 cf       	rjmp	.-88     	; 0x1380 <qtm_acquisition_process+0x250>
    13d8:	50 e0       	ldi	r21, 0x00	; 0
    13da:	d2 cf       	rjmp	.-92     	; 0x1380 <qtm_acquisition_process+0x250>
    13dc:	df 91       	pop	r29
    13de:	cf 91       	pop	r28
    13e0:	1f 91       	pop	r17
    13e2:	0f 91       	pop	r16
    13e4:	ff 90       	pop	r15
    13e6:	ef 90       	pop	r14
    13e8:	df 90       	pop	r13
    13ea:	cf 90       	pop	r12
    13ec:	bf 90       	pop	r11
    13ee:	af 90       	pop	r10
    13f0:	9f 90       	pop	r9
    13f2:	8f 90       	pop	r8
    13f4:	7f 90       	pop	r7
    13f6:	6f 90       	pop	r6
    13f8:	5f 90       	pop	r5
    13fa:	4f 90       	pop	r4
    13fc:	08 95       	ret

000013fe <qtm_ptc_init_acquisition_module>:
    13fe:	8f 92       	push	r8
    1400:	9f 92       	push	r9
    1402:	af 92       	push	r10
    1404:	bf 92       	push	r11
    1406:	cf 92       	push	r12
    1408:	df 92       	push	r13
    140a:	ef 92       	push	r14
    140c:	ff 92       	push	r15
    140e:	cf 93       	push	r28
    1410:	df 93       	push	r29
    1412:	00 97       	sbiw	r24, 0x00	; 0
    1414:	09 f4       	brne	.+2      	; 0x1418 <qtm_ptc_init_acquisition_module+0x1a>
    1416:	6c c0       	rjmp	.+216    	; 0x14f0 <qtm_ptc_init_acquisition_module+0xf2>
    1418:	dc 01       	movw	r26, r24
    141a:	ed 91       	ld	r30, X+
    141c:	fc 91       	ld	r31, X
    141e:	c0 80       	ld	r12, Z
    1420:	d1 80       	ldd	r13, Z+1	; 0x01
    1422:	e1 2c       	mov	r14, r1
    1424:	f1 2c       	mov	r15, r1
    1426:	a0 e0       	ldi	r26, 0x00	; 0
    1428:	b0 e0       	ldi	r27, 0x00	; 0
    142a:	40 e0       	ldi	r20, 0x00	; 0
    142c:	50 e0       	ldi	r21, 0x00	; 0
    142e:	ba 01       	movw	r22, r20
    1430:	20 e0       	ldi	r18, 0x00	; 0
    1432:	30 e0       	ldi	r19, 0x00	; 0
    1434:	ac 15       	cp	r26, r12
    1436:	bd 05       	cpc	r27, r13
    1438:	b1 f0       	breq	.+44     	; 0x1466 <qtm_ptc_init_acquisition_module+0x68>
    143a:	ec 01       	movw	r28, r24
    143c:	ea 81       	ldd	r30, Y+2	; 0x02
    143e:	fb 81       	ldd	r31, Y+3	; 0x03
    1440:	ee 0d       	add	r30, r14
    1442:	ff 1d       	adc	r31, r15
    1444:	a0 80       	ld	r10, Z
    1446:	b1 80       	ldd	r11, Z+1	; 0x01
    1448:	2a 29       	or	r18, r10
    144a:	3b 29       	or	r19, r11
    144c:	82 80       	ldd	r8, Z+2	; 0x02
    144e:	93 80       	ldd	r9, Z+3	; 0x03
    1450:	a4 80       	ldd	r10, Z+4	; 0x04
    1452:	b5 80       	ldd	r11, Z+5	; 0x05
    1454:	48 29       	or	r20, r8
    1456:	59 29       	or	r21, r9
    1458:	6a 29       	or	r22, r10
    145a:	7b 29       	or	r23, r11
    145c:	11 96       	adiw	r26, 0x01	; 1
    145e:	da e0       	ldi	r29, 0x0A	; 10
    1460:	ed 0e       	add	r14, r29
    1462:	f1 1c       	adc	r15, r1
    1464:	e7 cf       	rjmp	.-50     	; 0x1434 <qtm_ptc_init_acquisition_module+0x36>
    1466:	41 15       	cp	r20, r1
    1468:	51 05       	cpc	r21, r1
    146a:	61 05       	cpc	r22, r1
    146c:	71 05       	cpc	r23, r1
    146e:	09 f4       	brne	.+2      	; 0x1472 <qtm_ptc_init_acquisition_module+0x74>
    1470:	41 c0       	rjmp	.+130    	; 0x14f4 <qtm_ptc_init_acquisition_module+0xf6>
    1472:	e0 91 67 01 	lds	r30, 0x0167	; 0x800167 <touch_seq_lib_state>
    1476:	6a 01       	movw	r12, r20
    1478:	7b 01       	movw	r14, r22
    147a:	cc 24       	eor	r12, r12
    147c:	ee 24       	eor	r14, r14
    147e:	ff 24       	eor	r15, r15
    1480:	db 01       	movw	r26, r22
    1482:	ca 01       	movw	r24, r20
    1484:	88 27       	eor	r24, r24
    1486:	99 27       	eor	r25, r25
    1488:	bb 27       	eor	r27, r27
    148a:	e1 11       	cpse	r30, r1
    148c:	15 c0       	rjmp	.+42     	; 0x14b8 <qtm_ptc_init_acquisition_module+0xba>
    148e:	20 93 f0 00 	sts	0x00F0, r18	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    1492:	30 93 f1 00 	sts	0x00F1, r19	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    1496:	40 93 f4 00 	sts	0x00F4, r20	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    149a:	cd 2c       	mov	r12, r13
    149c:	de 2c       	mov	r13, r14
    149e:	ef 2c       	mov	r14, r15
    14a0:	ff 24       	eor	r15, r15
    14a2:	c0 92 f5 00 	sts	0x00F5, r12	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    14a6:	cd 01       	movw	r24, r26
    14a8:	aa 27       	eor	r26, r26
    14aa:	bb 27       	eor	r27, r27
    14ac:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    14b0:	81 e0       	ldi	r24, 0x01	; 1
    14b2:	80 93 67 01 	sts	0x0167, r24	; 0x800167 <touch_seq_lib_state>
    14b6:	1a c0       	rjmp	.+52     	; 0x14ec <qtm_ptc_init_acquisition_module+0xee>
    14b8:	e0 91 f0 00 	lds	r30, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    14bc:	2e 2b       	or	r18, r30
    14be:	20 93 f0 00 	sts	0x00F0, r18	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    14c2:	20 91 f1 00 	lds	r18, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    14c6:	23 2b       	or	r18, r19
    14c8:	20 93 f1 00 	sts	0x00F1, r18	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    14cc:	20 91 f4 00 	lds	r18, 0x00F4	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    14d0:	42 2b       	or	r20, r18
    14d2:	40 93 f4 00 	sts	0x00F4, r20	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    14d6:	20 91 f5 00 	lds	r18, 0x00F5	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    14da:	2d 29       	or	r18, r13
    14dc:	20 93 f5 00 	sts	0x00F5, r18	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    14e0:	20 91 f6 00 	lds	r18, 0x00F6	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    14e4:	82 2f       	mov	r24, r18
    14e6:	8a 2b       	or	r24, r26
    14e8:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    14ec:	80 e0       	ldi	r24, 0x00	; 0
    14ee:	03 c0       	rjmp	.+6      	; 0x14f6 <qtm_ptc_init_acquisition_module+0xf8>
    14f0:	8b e0       	ldi	r24, 0x0B	; 11
    14f2:	01 c0       	rjmp	.+2      	; 0x14f6 <qtm_ptc_init_acquisition_module+0xf8>
    14f4:	82 e0       	ldi	r24, 0x02	; 2
    14f6:	df 91       	pop	r29
    14f8:	cf 91       	pop	r28
    14fa:	ff 90       	pop	r15
    14fc:	ef 90       	pop	r14
    14fe:	df 90       	pop	r13
    1500:	cf 90       	pop	r12
    1502:	bf 90       	pop	r11
    1504:	af 90       	pop	r10
    1506:	9f 90       	pop	r9
    1508:	8f 90       	pop	r8
    150a:	08 95       	ret

0000150c <qtm_ptc_qtlib_assign_signal_memory>:
    150c:	00 97       	sbiw	r24, 0x00	; 0
    150e:	31 f0       	breq	.+12     	; 0x151c <qtm_ptc_qtlib_assign_signal_memory+0x10>
    1510:	90 93 85 01 	sts	0x0185, r25	; 0x800185 <qtm_raw_data_measurements_ptr+0x1>
    1514:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <qtm_raw_data_measurements_ptr>
    1518:	80 e0       	ldi	r24, 0x00	; 0
    151a:	08 95       	ret
    151c:	8b e0       	ldi	r24, 0x0B	; 11
    151e:	08 95       	ret

00001520 <qtm_ptc_start_measurement_seq>:
    1520:	cf 93       	push	r28
    1522:	df 93       	push	r29
    1524:	00 d0       	rcall	.+0      	; 0x1526 <qtm_ptc_start_measurement_seq+0x6>
    1526:	00 d0       	rcall	.+0      	; 0x1528 <qtm_ptc_start_measurement_seq+0x8>
    1528:	cd b7       	in	r28, 0x3d	; 61
    152a:	de b7       	in	r29, 0x3e	; 62
    152c:	10 92 6b 01 	sts	0x016B, r1	; 0x80016b <max_conversion_cycles>
    1530:	10 92 6c 01 	sts	0x016C, r1	; 0x80016c <max_conversion_cycles+0x1>
    1534:	10 92 6d 01 	sts	0x016D, r1	; 0x80016d <max_conversion_cycles+0x2>
    1538:	10 92 6e 01 	sts	0x016E, r1	; 0x80016e <max_conversion_cycles+0x3>
    153c:	61 15       	cp	r22, r1
    153e:	71 05       	cpc	r23, r1
    1540:	09 f4       	brne	.+2      	; 0x1544 <qtm_ptc_start_measurement_seq+0x24>
    1542:	db c0       	rjmp	.+438    	; 0x16fa <qtm_ptc_start_measurement_seq+0x1da>
    1544:	00 97       	sbiw	r24, 0x00	; 0
    1546:	09 f4       	brne	.+2      	; 0x154a <qtm_ptc_start_measurement_seq+0x2a>
    1548:	d8 c0       	rjmp	.+432    	; 0x16fa <qtm_ptc_start_measurement_seq+0x1da>
    154a:	20 91 67 01 	lds	r18, 0x0167	; 0x800167 <touch_seq_lib_state>
    154e:	22 23       	and	r18, r18
    1550:	09 f4       	brne	.+2      	; 0x1554 <qtm_ptc_start_measurement_seq+0x34>
    1552:	d5 c0       	rjmp	.+426    	; 0x16fe <qtm_ptc_start_measurement_seq+0x1de>
    1554:	24 30       	cpi	r18, 0x04	; 4
    1556:	09 f0       	breq	.+2      	; 0x155a <qtm_ptc_start_measurement_seq+0x3a>
    1558:	93 c0       	rjmp	.+294    	; 0x1680 <qtm_ptc_start_measurement_seq+0x160>
    155a:	10 92 6a 01 	sts	0x016A, r1	; 0x80016a <ptc_eoc_ok_flag>
    155e:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    1562:	80 ff       	sbrs	r24, 0
    1564:	8b c0       	rjmp	.+278    	; 0x167c <qtm_ptc_start_measurement_seq+0x15c>
    1566:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7f80e8>
    156a:	30 e0       	ldi	r19, 0x00	; 0
    156c:	a6 e0       	ldi	r26, 0x06	; 6
    156e:	b0 e0       	ldi	r27, 0x00	; 0
    1570:	0e 94 29 0c 	call	0x1852	; 0x1852 <__umulhisi3>
    1574:	60 93 6b 01 	sts	0x016B, r22	; 0x80016b <max_conversion_cycles>
    1578:	70 93 6c 01 	sts	0x016C, r23	; 0x80016c <max_conversion_cycles+0x1>
    157c:	80 93 6d 01 	sts	0x016D, r24	; 0x80016d <max_conversion_cycles+0x2>
    1580:	90 93 6e 01 	sts	0x016E, r25	; 0x80016e <max_conversion_cycles+0x3>
    1584:	20 91 e3 00 	lds	r18, 0x00E3	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7f80e3>
    1588:	2f 70       	andi	r18, 0x0F	; 15
    158a:	dc 01       	movw	r26, r24
    158c:	cb 01       	movw	r24, r22
    158e:	82 0f       	add	r24, r18
    1590:	91 1d       	adc	r25, r1
    1592:	a1 1d       	adc	r26, r1
    1594:	b1 1d       	adc	r27, r1
    1596:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <max_conversion_cycles>
    159a:	90 93 6c 01 	sts	0x016C, r25	; 0x80016c <max_conversion_cycles+0x1>
    159e:	a0 93 6d 01 	sts	0x016D, r26	; 0x80016d <max_conversion_cycles+0x2>
    15a2:	b0 93 6e 01 	sts	0x016E, r27	; 0x80016e <max_conversion_cycles+0x3>
    15a6:	20 91 e4 00 	lds	r18, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7f80e4>
    15aa:	27 70       	andi	r18, 0x07	; 7
    15ac:	04 c0       	rjmp	.+8      	; 0x15b6 <qtm_ptc_start_measurement_seq+0x96>
    15ae:	88 0f       	add	r24, r24
    15b0:	99 1f       	adc	r25, r25
    15b2:	aa 1f       	adc	r26, r26
    15b4:	bb 1f       	adc	r27, r27
    15b6:	2a 95       	dec	r18
    15b8:	d2 f7       	brpl	.-12     	; 0x15ae <qtm_ptc_start_measurement_seq+0x8e>
    15ba:	0e 96       	adiw	r24, 0x0e	; 14
    15bc:	a1 1d       	adc	r26, r1
    15be:	b1 1d       	adc	r27, r1
    15c0:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <max_conversion_cycles>
    15c4:	90 93 6c 01 	sts	0x016C, r25	; 0x80016c <max_conversion_cycles+0x1>
    15c8:	a0 93 6d 01 	sts	0x016D, r26	; 0x80016d <max_conversion_cycles+0x2>
    15cc:	b0 93 6e 01 	sts	0x016E, r27	; 0x80016e <max_conversion_cycles+0x3>
    15d0:	20 91 e1 00 	lds	r18, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7f80e1>
    15d4:	23 70       	andi	r18, 0x03	; 3
    15d6:	04 c0       	rjmp	.+8      	; 0x15e0 <qtm_ptc_start_measurement_seq+0xc0>
    15d8:	88 0f       	add	r24, r24
    15da:	99 1f       	adc	r25, r25
    15dc:	aa 1f       	adc	r26, r26
    15de:	bb 1f       	adc	r27, r27
    15e0:	2a 95       	dec	r18
    15e2:	d2 f7       	brpl	.-12     	; 0x15d8 <qtm_ptc_start_measurement_seq+0xb8>
    15e4:	22 e0       	ldi	r18, 0x02	; 2
    15e6:	b6 95       	lsr	r27
    15e8:	a7 95       	ror	r26
    15ea:	97 95       	ror	r25
    15ec:	87 95       	ror	r24
    15ee:	2a 95       	dec	r18
    15f0:	d1 f7       	brne	.-12     	; 0x15e6 <qtm_ptc_start_measurement_seq+0xc6>
    15f2:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <max_conversion_cycles>
    15f6:	90 93 6c 01 	sts	0x016C, r25	; 0x80016c <max_conversion_cycles+0x1>
    15fa:	a0 93 6d 01 	sts	0x016D, r26	; 0x80016d <max_conversion_cycles+0x2>
    15fe:	b0 93 6e 01 	sts	0x016E, r27	; 0x80016e <max_conversion_cycles+0x3>
    1602:	19 82       	std	Y+1, r1	; 0x01
    1604:	1a 82       	std	Y+2, r1	; 0x02
    1606:	1b 82       	std	Y+3, r1	; 0x03
    1608:	1c 82       	std	Y+4, r1	; 0x04
    160a:	21 e0       	ldi	r18, 0x01	; 1
    160c:	49 81       	ldd	r20, Y+1	; 0x01
    160e:	5a 81       	ldd	r21, Y+2	; 0x02
    1610:	6b 81       	ldd	r22, Y+3	; 0x03
    1612:	7c 81       	ldd	r23, Y+4	; 0x04
    1614:	48 17       	cp	r20, r24
    1616:	59 07       	cpc	r21, r25
    1618:	6a 07       	cpc	r22, r26
    161a:	7b 07       	cpc	r23, r27
    161c:	b0 f4       	brcc	.+44     	; 0x164a <qtm_ptc_start_measurement_seq+0x12a>
    161e:	30 91 6a 01 	lds	r19, 0x016A	; 0x80016a <ptc_eoc_ok_flag>
    1622:	33 23       	and	r19, r19
    1624:	29 f0       	breq	.+10     	; 0x1630 <qtm_ptc_start_measurement_seq+0x110>
    1626:	89 83       	std	Y+1, r24	; 0x01
    1628:	9a 83       	std	Y+2, r25	; 0x02
    162a:	ab 83       	std	Y+3, r26	; 0x03
    162c:	bc 83       	std	Y+4, r27	; 0x04
    162e:	20 e0       	ldi	r18, 0x00	; 0
    1630:	49 81       	ldd	r20, Y+1	; 0x01
    1632:	5a 81       	ldd	r21, Y+2	; 0x02
    1634:	6b 81       	ldd	r22, Y+3	; 0x03
    1636:	7c 81       	ldd	r23, Y+4	; 0x04
    1638:	4f 5f       	subi	r20, 0xFF	; 255
    163a:	5f 4f       	sbci	r21, 0xFF	; 255
    163c:	6f 4f       	sbci	r22, 0xFF	; 255
    163e:	7f 4f       	sbci	r23, 0xFF	; 255
    1640:	49 83       	std	Y+1, r20	; 0x01
    1642:	5a 83       	std	Y+2, r21	; 0x02
    1644:	6b 83       	std	Y+3, r22	; 0x03
    1646:	7c 83       	std	Y+4, r23	; 0x04
    1648:	e1 cf       	rjmp	.-62     	; 0x160c <qtm_ptc_start_measurement_seq+0xec>
    164a:	22 23       	and	r18, r18
    164c:	b9 f0       	breq	.+46     	; 0x167c <qtm_ptc_start_measurement_seq+0x15c>
    164e:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    1652:	80 ff       	sbrs	r24, 0
    1654:	13 c0       	rjmp	.+38     	; 0x167c <qtm_ptc_start_measurement_seq+0x15c>
    1656:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    165a:	00 00       	nop
    165c:	82 e1       	ldi	r24, 0x12	; 18
    165e:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    1662:	00 00       	nop
    1664:	81 e0       	ldi	r24, 0x01	; 1
    1666:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    166a:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <ptc_lockups>
    166e:	90 91 64 01 	lds	r25, 0x0164	; 0x800164 <ptc_lockups+0x1>
    1672:	01 96       	adiw	r24, 0x01	; 1
    1674:	90 93 64 01 	sts	0x0164, r25	; 0x800164 <ptc_lockups+0x1>
    1678:	80 93 63 01 	sts	0x0163, r24	; 0x800163 <ptc_lockups>
    167c:	81 e0       	ldi	r24, 0x01	; 1
    167e:	42 c0       	rjmp	.+132    	; 0x1704 <qtm_ptc_start_measurement_seq+0x1e4>
    1680:	90 93 83 01 	sts	0x0183, r25	; 0x800183 <qtm_acquisition_control_working_set_ptr+0x1>
    1684:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <qtm_acquisition_control_working_set_ptr>
    1688:	70 93 62 01 	sts	0x0162, r23	; 0x800162 <ptc_seq_measure_complete_pointer+0x1>
    168c:	60 93 61 01 	sts	0x0161, r22	; 0x800161 <ptc_seq_measure_complete_pointer>
    1690:	dc 01       	movw	r26, r24
    1692:	ed 91       	ld	r30, X+
    1694:	fc 91       	ld	r31, X
    1696:	82 81       	ldd	r24, Z+2	; 0x02
    1698:	80 34       	cpi	r24, 0x40	; 64
    169a:	11 f4       	brne	.+4      	; 0x16a0 <qtm_ptc_start_measurement_seq+0x180>
    169c:	88 e0       	ldi	r24, 0x08	; 8
    169e:	03 c0       	rjmp	.+6      	; 0x16a6 <qtm_ptc_start_measurement_seq+0x186>
    16a0:	80 38       	cpi	r24, 0x80	; 128
    16a2:	79 f5       	brne	.+94     	; 0x1702 <qtm_ptc_start_measurement_seq+0x1e2>
    16a4:	8a e0       	ldi	r24, 0x0A	; 10
    16a6:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7f80e2>
    16aa:	e0 91 82 01 	lds	r30, 0x0182	; 0x800182 <qtm_acquisition_control_working_set_ptr>
    16ae:	f0 91 83 01 	lds	r31, 0x0183	; 0x800183 <qtm_acquisition_control_working_set_ptr+0x1>
    16b2:	01 90       	ld	r0, Z+
    16b4:	f0 81       	ld	r31, Z
    16b6:	e0 2d       	mov	r30, r0
    16b8:	84 81       	ldd	r24, Z+4	; 0x04
    16ba:	80 31       	cpi	r24, 0x10	; 16
    16bc:	08 f0       	brcs	.+2      	; 0x16c0 <qtm_ptc_start_measurement_seq+0x1a0>
    16be:	80 e1       	ldi	r24, 0x10	; 16
    16c0:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7f80e3>
    16c4:	81 e0       	ldi	r24, 0x01	; 1
    16c6:	84 bb       	out	0x14, r24	; 20
    16c8:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7f8074>
    16cc:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <current_measure_channel+0x1>
    16d0:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <current_measure_channel>
    16d4:	0e 94 a4 07 	call	0xf48	; 0xf48 <select_next_channel_to_measure>
    16d8:	81 11       	cpse	r24, r1
    16da:	0b c0       	rjmp	.+22     	; 0x16f2 <qtm_ptc_start_measurement_seq+0x1d2>
    16dc:	84 e0       	ldi	r24, 0x04	; 4
    16de:	80 93 67 01 	sts	0x0167, r24	; 0x800167 <touch_seq_lib_state>
    16e2:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <current_measure_channel>
    16e6:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <current_measure_channel+0x1>
    16ea:	0e 94 d7 07 	call	0xfae	; 0xfae <qtm_measure_node>
    16ee:	80 e0       	ldi	r24, 0x00	; 0
    16f0:	09 c0       	rjmp	.+18     	; 0x1704 <qtm_ptc_start_measurement_seq+0x1e4>
    16f2:	82 e0       	ldi	r24, 0x02	; 2
    16f4:	80 93 67 01 	sts	0x0167, r24	; 0x800167 <touch_seq_lib_state>
    16f8:	05 c0       	rjmp	.+10     	; 0x1704 <qtm_ptc_start_measurement_seq+0x1e4>
    16fa:	8b e0       	ldi	r24, 0x0B	; 11
    16fc:	03 c0       	rjmp	.+6      	; 0x1704 <qtm_ptc_start_measurement_seq+0x1e4>
    16fe:	83 e0       	ldi	r24, 0x03	; 3
    1700:	01 c0       	rjmp	.+2      	; 0x1704 <qtm_ptc_start_measurement_seq+0x1e4>
    1702:	82 e0       	ldi	r24, 0x02	; 2
    1704:	0f 90       	pop	r0
    1706:	0f 90       	pop	r0
    1708:	0f 90       	pop	r0
    170a:	0f 90       	pop	r0
    170c:	df 91       	pop	r29
    170e:	cf 91       	pop	r28
    1710:	08 95       	ret

00001712 <qtm_enable_sensor_node>:
    1712:	00 97       	sbiw	r24, 0x00	; 0
    1714:	c9 f0       	breq	.+50     	; 0x1748 <qtm_enable_sensor_node+0x36>
    1716:	dc 01       	movw	r26, r24
    1718:	ed 91       	ld	r30, X+
    171a:	fc 91       	ld	r31, X
    171c:	11 97       	sbiw	r26, 0x01	; 1
    171e:	20 81       	ld	r18, Z
    1720:	31 81       	ldd	r19, Z+1	; 0x01
    1722:	26 17       	cp	r18, r22
    1724:	37 07       	cpc	r19, r23
    1726:	90 f0       	brcs	.+36     	; 0x174c <qtm_enable_sensor_node+0x3a>
    1728:	45 e0       	ldi	r20, 0x05	; 5
    172a:	46 9f       	mul	r20, r22
    172c:	90 01       	movw	r18, r0
    172e:	47 9f       	mul	r20, r23
    1730:	30 0d       	add	r19, r0
    1732:	11 24       	eor	r1, r1
    1734:	14 96       	adiw	r26, 0x04	; 4
    1736:	ed 91       	ld	r30, X+
    1738:	fc 91       	ld	r31, X
    173a:	15 97       	sbiw	r26, 0x05	; 5
    173c:	e2 0f       	add	r30, r18
    173e:	f3 1f       	adc	r31, r19
    1740:	81 e0       	ldi	r24, 0x01	; 1
    1742:	80 83       	st	Z, r24
    1744:	80 e0       	ldi	r24, 0x00	; 0
    1746:	08 95       	ret
    1748:	8b e0       	ldi	r24, 0x0B	; 11
    174a:	08 95       	ret
    174c:	82 e0       	ldi	r24, 0x02	; 2
    174e:	08 95       	ret

00001750 <qtm_calibrate_sensor_node>:
    1750:	00 97       	sbiw	r24, 0x00	; 0
    1752:	d1 f1       	breq	.+116    	; 0x17c8 <qtm_calibrate_sensor_node+0x78>
    1754:	dc 01       	movw	r26, r24
    1756:	ed 91       	ld	r30, X+
    1758:	fc 91       	ld	r31, X
    175a:	11 97       	sbiw	r26, 0x01	; 1
    175c:	20 81       	ld	r18, Z
    175e:	31 81       	ldd	r19, Z+1	; 0x01
    1760:	26 17       	cp	r18, r22
    1762:	37 07       	cpc	r19, r23
    1764:	98 f1       	brcs	.+102    	; 0x17cc <qtm_calibrate_sensor_node+0x7c>
    1766:	22 81       	ldd	r18, Z+2	; 0x02
    1768:	14 96       	adiw	r26, 0x04	; 4
    176a:	ed 91       	ld	r30, X+
    176c:	fc 91       	ld	r31, X
    176e:	15 97       	sbiw	r26, 0x05	; 5
    1770:	20 34       	cpi	r18, 0x40	; 64
    1772:	59 f4       	brne	.+22     	; 0x178a <qtm_calibrate_sensor_node+0x3a>
    1774:	85 e0       	ldi	r24, 0x05	; 5
    1776:	86 9f       	mul	r24, r22
    1778:	d0 01       	movw	r26, r0
    177a:	87 9f       	mul	r24, r23
    177c:	b0 0d       	add	r27, r0
    177e:	11 24       	eor	r1, r1
    1780:	ae 0f       	add	r26, r30
    1782:	bf 1f       	adc	r27, r31
    1784:	84 e3       	ldi	r24, 0x34	; 52
    1786:	92 e0       	ldi	r25, 0x02	; 2
    1788:	0c c0       	rjmp	.+24     	; 0x17a2 <qtm_calibrate_sensor_node+0x52>
    178a:	20 38       	cpi	r18, 0x80	; 128
    178c:	81 f4       	brne	.+32     	; 0x17ae <qtm_calibrate_sensor_node+0x5e>
    178e:	85 e0       	ldi	r24, 0x05	; 5
    1790:	86 9f       	mul	r24, r22
    1792:	d0 01       	movw	r26, r0
    1794:	87 9f       	mul	r24, r23
    1796:	b0 0d       	add	r27, r0
    1798:	11 24       	eor	r1, r1
    179a:	ae 0f       	add	r26, r30
    179c:	bf 1f       	adc	r27, r31
    179e:	87 e6       	ldi	r24, 0x67	; 103
    17a0:	95 e0       	ldi	r25, 0x05	; 5
    17a2:	14 96       	adiw	r26, 0x04	; 4
    17a4:	9c 93       	st	X, r25
    17a6:	8e 93       	st	-X, r24
    17a8:	13 97       	sbiw	r26, 0x03	; 3
    17aa:	80 e0       	ldi	r24, 0x00	; 0
    17ac:	01 c0       	rjmp	.+2      	; 0x17b0 <qtm_calibrate_sensor_node+0x60>
    17ae:	82 e0       	ldi	r24, 0x02	; 2
    17b0:	95 e0       	ldi	r25, 0x05	; 5
    17b2:	96 9f       	mul	r25, r22
    17b4:	90 01       	movw	r18, r0
    17b6:	97 9f       	mul	r25, r23
    17b8:	30 0d       	add	r19, r0
    17ba:	11 24       	eor	r1, r1
    17bc:	e2 0f       	add	r30, r18
    17be:	f3 1f       	adc	r31, r19
    17c0:	90 81       	ld	r25, Z
    17c2:	92 60       	ori	r25, 0x02	; 2
    17c4:	90 83       	st	Z, r25
    17c6:	08 95       	ret
    17c8:	8b e0       	ldi	r24, 0x0B	; 11
    17ca:	08 95       	ret
    17cc:	82 e0       	ldi	r24, 0x02	; 2
    17ce:	08 95       	ret

000017d0 <qtm_m328pb_ptc_handler_eoc>:
    17d0:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    17d4:	81 e0       	ldi	r24, 0x01	; 1
    17d6:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <ptc_eoc_ok_flag>
    17da:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7f80ee>
    17de:	60 91 ef 00 	lds	r22, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7f80ef>
    17e2:	20 91 68 01 	lds	r18, 0x0168	; 0x800168 <current_measure_channel>
    17e6:	30 91 69 01 	lds	r19, 0x0169	; 0x800169 <current_measure_channel+0x1>
    17ea:	a9 01       	movw	r20, r18
    17ec:	44 0f       	add	r20, r20
    17ee:	55 1f       	adc	r21, r21
    17f0:	e0 91 84 01 	lds	r30, 0x0184	; 0x800184 <qtm_raw_data_measurements_ptr>
    17f4:	f0 91 85 01 	lds	r31, 0x0185	; 0x800185 <qtm_raw_data_measurements_ptr+0x1>
    17f8:	e4 0f       	add	r30, r20
    17fa:	f5 1f       	adc	r31, r21
    17fc:	90 e0       	ldi	r25, 0x00	; 0
    17fe:	96 2b       	or	r25, r22
    1800:	91 83       	std	Z+1, r25	; 0x01
    1802:	80 83       	st	Z, r24
    1804:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <good_eocs>
    1808:	90 91 66 01 	lds	r25, 0x0166	; 0x800166 <good_eocs+0x1>
    180c:	01 96       	adiw	r24, 0x01	; 1
    180e:	90 93 66 01 	sts	0x0166, r25	; 0x800166 <good_eocs+0x1>
    1812:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <good_eocs>
    1816:	89 2b       	or	r24, r25
    1818:	21 f4       	brne	.+8      	; 0x1822 <qtm_m328pb_ptc_handler_eoc+0x52>
    181a:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <ptc_lockups+0x1>
    181e:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <ptc_lockups>
    1822:	2f 5f       	subi	r18, 0xFF	; 255
    1824:	3f 4f       	sbci	r19, 0xFF	; 255
    1826:	30 93 69 01 	sts	0x0169, r19	; 0x800169 <current_measure_channel+0x1>
    182a:	20 93 68 01 	sts	0x0168, r18	; 0x800168 <current_measure_channel>
    182e:	0e 94 a4 07 	call	0xf48	; 0xf48 <select_next_channel_to_measure>
    1832:	81 11       	cpse	r24, r1
    1834:	09 c0       	rjmp	.+18     	; 0x1848 <qtm_m328pb_ptc_handler_eoc+0x78>
    1836:	84 e0       	ldi	r24, 0x04	; 4
    1838:	80 93 67 01 	sts	0x0167, r24	; 0x800167 <touch_seq_lib_state>
    183c:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <current_measure_channel>
    1840:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <current_measure_channel+0x1>
    1844:	0c 94 d7 07 	jmp	0xfae	; 0xfae <qtm_measure_node>
    1848:	e0 91 61 01 	lds	r30, 0x0161	; 0x800161 <ptc_seq_measure_complete_pointer>
    184c:	f0 91 62 01 	lds	r31, 0x0162	; 0x800162 <ptc_seq_measure_complete_pointer+0x1>
    1850:	09 94       	ijmp

00001852 <__umulhisi3>:
    1852:	a2 9f       	mul	r26, r18
    1854:	b0 01       	movw	r22, r0
    1856:	b3 9f       	mul	r27, r19
    1858:	c0 01       	movw	r24, r0
    185a:	a3 9f       	mul	r26, r19
    185c:	70 0d       	add	r23, r0
    185e:	81 1d       	adc	r24, r1
    1860:	11 24       	eor	r1, r1
    1862:	91 1d       	adc	r25, r1
    1864:	b2 9f       	mul	r27, r18
    1866:	70 0d       	add	r23, r0
    1868:	81 1d       	adc	r24, r1
    186a:	11 24       	eor	r1, r1
    186c:	91 1d       	adc	r25, r1
    186e:	08 95       	ret

00001870 <_exit>:
    1870:	f8 94       	cli

00001872 <__stop_program>:
    1872:	ff cf       	rjmp	.-2      	; 0x1872 <__stop_program>
